{
  "num_packages": 412,
  "jsxray_total": 9734,
  "charon_total": 3924,
  "num_packages_both_nonzero": 363,
  "num_packages_jsxray_more": 230,
  "num_packages_jsxray_more_charon_nonzero": 72,
  "num_packages_charon_more": 52,
  "num_packages_diff": 282,
  "packages": [
    "0x-monorepo-development",
    "sqlite3",
    "bcrypt",
    "leveldown",
    "deasync",
    "microtime",
    "iconv",
    "@discordjs/opus",
    "sleep",
    "bufferutil",
    "utf-8-validate",
    "libxmljs",
    "posix",
    "xz",
    "ttf2woff2",
    "64",
    "nice-napi",
    "lzma-native",
    "rpio",
    "ganache-cli",
    "keccak",
    "libxmljs2",
    "@131/sqlite3",
    "node-rdkafka",
    "usb",
    "@6river/sqlite3",
    "@aabuhijleh/forcefocus",
    "blake-hash",
    "usb-detection",
    "weak-napi",
    "utimes",
    "secp256k1",
    "argon2",
    "native-watchdog",
    "heapdump",
    "i2c-bus",
    "spi-device",
    "node-lmdb",
    "re2",
    "murmurhash-native",
    "@airbnb/node-memwatch",
    "odbc",
    "isolated-vm",
    "better-sqlite3",
    "@akikowo/chemical-balancer",
    "@akimasa/vscode-sqlite3",
    "@alac/decoder",
    "@alac/encoder",
    "midi",
    "fs-xattr",
    "@alien.sh/signals",
    "node-pty",
    "@alminde/tfjs-node",
    "iltorb",
    "bigint-buffer",
    "fd-lock",
    "node-uname",
    "@animetosho/parpar",
    "yencode",
    "platform-folders",
    "nodehun",
    "tree-sitter",
    "@apocentre/xoshiro",
    "node-pty-prebuilt-multiarch",
    "posix-socket",
    "@appoptics/apm-bindings",
    "@cryptlex/lexactivator",
    "@aptoma/sharp",
    "gl",
    "segfault-handler",
    "@arition/torch-js",
    "nsfw",
    "bstring",
    "aerospike",
    "ursa-optional",
    "v8-profiler-next",
    "@ataberkylmz/hx711",
    "git-utils",
    "tree-sitter-ql",
    "@atom/nsfw",
    "gc-stats",
    "@tensorflow/tfjs-node",
    "@axosoft/spellchecker",
    "eiows",
    "@b2wads/lru-native2",
    "bdb",
    "bsip",
    "mrmr",
    "spellchecker",
    "utp-native",
    "pi-spi",
    "rpi-ws281x-native",
    "@serialport/bindings",
    "highwayhash",
    "@bigemap/usb-detection",
    "@bithighlander/usb-detection",
    "node-expat",
    "@eosrio/node-abieos",
    "node-opus",
    "node-vad",
    "@buckyos/node-kcp",
    "@buckyos/socketwatcher",
    "@buckyos/segfault-handler",
    "@bugsnag/plugin-electron-app",
    "@bugsnag/plugin-electron-client-state-persistence",
    "farmhash",
    "event-loop-stats",
    "@calculux/connector",
    "socketcan",
    "@celtium/doge-idle-time",
    "@cfg.plat/lodepng",
    "robotjs",
    "ed25519",
    "crfsuite",
    "userid",
    "ibm_db",
    "mongodb-client-encryption",
    "@tensorflow/tfjs-node-gpu",
    "ced",
    "sodium-native",
    "@codeporter/robotjs",
    "detect-character-encoding",
    "fs-ext",
    "@connectedyard/phin-ecdh",
    "@conr2d/bcrypto",
    "@contaquanto/chevronlib",
    "unix-dgram",
    "@corbinu/couchbase",
    "bignum",
    "@cryptlex/lexfloatclient",
    "modern-syslog",
    "@cubbit/enigma",
    "generate-rsa-keypair",
    "@davedoesdev/fs-ext",
    "kerberos",
    "turbo-net",
    "pathwatcher",
    "erlpack",
    "@julusian/jpeg-turbo",
    "native-keymap",
    "drivelist",
    "find-git-repositories",
    "@theia/node-pty",
    "syncprompt",
    "@dhruvit_r/pathwatcher",
    "@divy-work/native-utils",
    "@divy-work/spin-cc",
    "epoll",
    "@dooub/rocksdb-nodejs",
    "native-is-elevated",
    "spdlog",
    "vscode-nsfw",
    "vscode-sqlite3",
    "@drorgl/talib",
    "lz4",
    "nanomsg",
    "blake2",
    "get-cursor-position",
    "lzo",
    "@episensor/bluetooth-hci-socket",
    "@ericvanwyk/tree-sitter-oberon0",
    "@eth-optimism/ganache-cli",
    "@eugenepankov/system-idle-time",
    "node-cint64",
    "annoy",
    "sodium",
    "@faressoft/node-pty-prebuilt",
    "diskusage",
    "@felixrieseberg/spellchecker",
    "keyboard-layout",
    "@flat/lame",
    "pg-query-native",
    "@floffah/node-memwatch",
    "@flowaccount/node-icu-tokenizer",
    "talib",
    "tulind",
    "node-snap7",
    "@frosttusk/ginger",
    "@fsiot/heatshrink",
    "cmark-gfm",
    "@ganeshmogare/bodmas",
    "@gatsbyjs/sharp",
    "@gbkwiatt/node-rpi-ws281x-native",
    "raw-socket",
    "dbus",
    "@genee/desktop-idle",
    "fontnik",
    "@gera2ld/robotjs",
    "node-zopfli",
    "@getjerry/lambda-at-edge",
    "cld",
    "@gifyourgame/spawn-as-admin",
    "@gilsdav/robotjs",
    "@glaced/gles2-2.0",
    "@glaced/glfw",
    "@gnaudio/jabra-node-sdk",
    "pprof",
    "@graphistry/node-pigz",
    "node-dht-sensor",
    "@haggholm/damerau-levenshtein",
    "bson-ext",
    "@hfelix/spellchecker",
    "abstract-socket",
    "@howlin/bluetooth-hci-socket",
    "@ibsolution/hana-client-promise",
    "@icebob/node-memwatch",
    "@ices/node-addons-callbacks",
    "@ices/node-addons-hello",
    "@idango/crypt3",
    "pkcs11js",
    "gcstats.js",
    "@ionic/node-pty-prebuilt",
    "@itsananderson/electron-sqlite3",
    "@jamesernator/weakref",
    "@jcoreio/i2c",
    "@jcoreio/kexec",
    "@jeeyah/nodeortools",
    "@jeff-tian/sleep",
    "cypher.js",
    "@joeblanchard/tree-sitter-ablec",
    "@joeblanchard/tree-sitter-ablec4pts",
    "@joeblanchard/tree-sitter-ablec4ptsdemo",
    "@joeblanchard/tree-sitter-oberon0",
    "@joergmittaglawo/dmvconfig",
    "picha",
    "ed25519-supercop",
    "@jovian/fourq",
    "@jsxt/weakref",
    "@julusian/freetype2",
    "@kabbi/aes-ccm",
    "cppzst",
    "zlib-sync",
    "@kmamal/gl",
    "node-firebird-native-api",
    "@knagyorg/node-firebird-native-api",
    "@kore/net",
    "@lamassu/supyo",
    "@lastos/dbus",
    "@lgeiger/napi-prebuild-starter",
    "@suldashi/lame",
    "@lockshi/myaddon",
    "@logigator/logigator-simulation",
    "@lotuz/jsminify",
    "@luminati-io/gc-stats",
    "@luminati-io/mmap-io",
    "@luminati-io/node-crypt3",
    "@luminati-io/node-diskusage",
    "@luminati-io/node-time",
    "@luminati-io/node-unlisten",
    "@lydiaswap/lydia-swap-periphery",
    "node-zopfli-es",
    "@mapbox/vtquery",
    "@mapbox/vtvalidate",
    "@markusjx/shared_mutex",
    "@marshallofsound/native-keymap",
    "@mateuszzajacs/bindings",
    "@mathquis/crfsuite",
    "@mathquis/node-gist",
    "@mathquis/node-snowboy",
    "@matteodisabatino/gc_info",
    "@meteorjs/pathwatcher",
    "@microcode/canary",
    "@microsoft/ads-kerberos",
    "@miup/napi-demo",
    "@modum-io/bluetooth-hci-socket",
    "interruptor",
    "@morajabi/robotjs",
    "@movable/hash_ring",
    "@movei/tree-sitter-move",
    "@muchmore/opus",
    "@muffinista/goto-sleep",
    "kill-dash-nine",
    "@myluluy/node-syslog",
    "@n.wolfe/scoped-test",
    "@nandoide/tree-sitter-thinp",
    "@nanobot248/linux-dedupe",
    "@nanomatic/rpio",
    "@nbisigna/scramble",
    "gc-profiler",
    "cpuid-git",
    "@nlv8/signun",
    "@nmarks/dd-trace",
    "@nodeos/node-ife",
    "redis-fast-driver",
    "muhammara",
    "@rvagg/blake2",
    "@saleae/weak",
    "@samebchase/spellchecker",
    "@savearray2/py.js",
    "@savoirfairelinux/node-server-example",
    "@sbspk/forcefocus",
    "@schlameel/native-idle-time",
    "@sematext/gc-stats",
    "@sequencework/tfjs-node",
    "@sergiou87/fs-admin-temp",
    "@shroudedcode/hx711",
    "@slimio/micro",
    "@snek/private",
    "@sosuisen/nodegit",
    "bsdiff-nodejs",
    "@suldashi/node-opus",
    "@suldashi/ogg",
    "@suldashi/weak",
    "@syndicats/drivelist",
    "@techainer1t/torch-js",
    "@terminus-term/node-pty",
    "fs-admin",
    "@thlorenz/function-origin",
    "@tonclient/lib-node",
    "@traaittplatform/traaittplatform-crypto",
    "traaittplatform-crypto",
    "@trbll/nodeimu",
    "ioctl",
    "sse4_crc32",
    "@tuananh/sax-parser",
    "@turtlecoin/crypto",
    "nblas",
    "@tzmedical/trident-sdk",
    "zookeeper",
    "@ulycess/c_parser",
    "@unrest/form",
    "@vit1251/napi_sdl2",
    "@vlasky/shacrypt",
    "node-quirc",
    "@votingworks/qrdetect",
    "@wangjuncode/binary-test",
    "bunyan-syslog",
    "@wmakeev/borders-detection",
    "@wwa/statvfs",
    "@yaguara/dd-trace",
    "@yaming116/node-memwatch",
    "@ycanince/bluetooth-hci-socket",
    "@ycanince/sqlite3",
    "@yosiat/stack-frames",
    "a-napi-example",
    "a-native-example",
    "abletonlink",
    "abletonlink-addon",
    "ac-syslogh",
    "actual-crash",
    "addlib",
    "addonie",
    "ads-kerberos",
    "ads-kerberos2",
    "aes-ccm",
    "desktop-idle",
    "ctags",
    "alsa-capture",
    "alsa-volume",
    "am_turbo-net",
    "native-hdr-histogram",
    "anitomy-js",
    "apoxusbcan",
    "apx-native-module",
    "pwuid",
    "socketwatcher",
    "ascom-verdaccio",
    "asfw",
    "tree-sitter-ags-script",
    "swisseph",
    "zadeh",
    "atomic-counters",
    "atomium",
    "audify",
    "audio-processing",
    "auto-object",
    "nslog",
    "bkjs-utils",
    "bkjs-cache",
    "bkjs-sqlite",
    "bkjs-syslog",
    "mkfifo",
    "bcrypt-small",
    "raknet-native",
    "bfast-cloud",
    "bfast-database",
    "bhtsne",
    "bitcoinnova-crypto",
    "bkjs-wand",
    "bktree-fast",
    "bling-hashes",
    "bodmas",
    "bole-first-test",
    "boost-geospatial-index",
    "boyia-npm",
    "broadcast-interfaces",
    "mcrypt",
    "bsdiff-node",
    "bsdp",
    "buffer2address",
    "buildthing-bluetooth-hci-socket",
    "bungle",
    "c-float-divide",
    "c4solver",
    "caki",
    "caliban",
    "canvas-terminal",
    "casclib",
    "catboost",
    "catboost-model",
    "cd-node-napi-test",
    "cdt-gdb-adapter",
    "chacent",
    "check-caps",
    "diskfree",
    "checkpromise",
    "child_process_tiny",
    "child_pty-fixedv12",
    "termios-fixedv12",
    "chimera-crypto",
    "raylib",
    "ckmeans-native"
  ],
  "packages_jsxray_more": [
    "0x-monorepo-development",
    "sqlite3",
    "leveldown",
    "deasync",
    "iconv",
    "@discordjs/opus",
    "bufferutil",
    "utf-8-validate",
    "libxmljs",
    "posix",
    "nice-napi",
    "lzma-native",
    "rpio",
    "ganache-cli",
    "keccak",
    "node-rdkafka",
    "usb",
    "blake-hash",
    "weak-napi",
    "secp256k1",
    "argon2",
    "native-watchdog",
    "re2",
    "murmurhash-native",
    "@airbnb/node-memwatch",
    "isolated-vm",
    "better-sqlite3",
    "@alac/decoder",
    "@alac/encoder",
    "midi",
    "fs-xattr",
    "node-pty",
    "@alminde/tfjs-node",
    "iltorb",
    "bigint-buffer",
    "fd-lock",
    "node-uname",
    "@animetosho/parpar",
    "platform-folders",
    "nodehun",
    "tree-sitter",
    "@apocentre/xoshiro",
    "node-pty-prebuilt-multiarch",
    "posix-socket",
    "@cryptlex/lexactivator",
    "gl",
    "@arition/torch-js",
    "nsfw",
    "aerospike",
    "ursa-optional",
    "@ataberkylmz/hx711",
    "git-utils",
    "tree-sitter-ql",
    "@atom/nsfw",
    "@tensorflow/tfjs-node",
    "@axosoft/spellchecker",
    "@b2wads/lru-native2",
    "bdb",
    "mrmr",
    "utp-native",
    "highwayhash",
    "node-expat",
    "@eosrio/node-abieos",
    "node-opus",
    "@buckyos/node-kcp",
    "@buckyos/socketwatcher",
    "@bugsnag/plugin-electron-app",
    "@bugsnag/plugin-electron-client-state-persistence",
    "@calculux/connector",
    "socketcan",
    "@celtium/doge-idle-time",
    "crfsuite",
    "userid",
    "mongodb-client-encryption",
    "@tensorflow/tfjs-node-gpu",
    "ced",
    "sodium-native",
    "@connectedyard/phin-ecdh",
    "@conr2d/bcrypto",
    "@corbinu/couchbase",
    "bignum",
    "@cryptlex/lexfloatclient",
    "@cubbit/enigma",
    "generate-rsa-keypair",
    "kerberos",
    "turbo-net",
    "native-keymap",
    "find-git-repositories",
    "@theia/node-pty",
    "epoll",
    "@dooub/rocksdb-nodejs",
    "native-is-elevated",
    "spdlog",
    "vscode-nsfw",
    "blake2",
    "lzo",
    "@episensor/bluetooth-hci-socket",
    "@ericvanwyk/tree-sitter-oberon0",
    "@eth-optimism/ganache-cli",
    "node-cint64",
    "annoy",
    "sodium",
    "@faressoft/node-pty-prebuilt",
    "keyboard-layout",
    "@flat/lame",
    "@floffah/node-memwatch",
    "tulind",
    "@fsiot/heatshrink",
    "cmark-gfm",
    "@ganeshmogare/bodmas",
    "raw-socket",
    "dbus",
    "node-zopfli",
    "cld",
    "@glaced/gles2-2.0",
    "@glaced/glfw",
    "@gnaudio/jabra-node-sdk",
    "@haggholm/damerau-levenshtein",
    "bson-ext",
    "@hfelix/spellchecker",
    "@howlin/bluetooth-hci-socket",
    "@ibsolution/hana-client-promise",
    "@icebob/node-memwatch",
    "@ices/node-addons-callbacks",
    "@ices/node-addons-hello",
    "pkcs11js",
    "@ionic/node-pty-prebuilt",
    "@jamesernator/weakref",
    "@jeeyah/nodeortools",
    "@jeff-tian/sleep",
    "cypher.js",
    "@joeblanchard/tree-sitter-ablec",
    "@joeblanchard/tree-sitter-ablec4pts",
    "@joeblanchard/tree-sitter-ablec4ptsdemo",
    "@joeblanchard/tree-sitter-oberon0",
    "@joergmittaglawo/dmvconfig",
    "picha",
    "ed25519-supercop",
    "@jsxt/weakref",
    "cppzst",
    "@kmamal/gl",
    "node-firebird-native-api",
    "@knagyorg/node-firebird-native-api",
    "@kore/net",
    "@lastos/dbus",
    "@lgeiger/napi-prebuild-starter",
    "@suldashi/lame",
    "@lotuz/jsminify",
    "@luminati-io/mmap-io",
    "@lydiaswap/lydia-swap-periphery",
    "node-zopfli-es",
    "@mapbox/vtquery",
    "@mapbox/vtvalidate",
    "@markusjx/shared_mutex",
    "@marshallofsound/native-keymap",
    "@mathquis/crfsuite",
    "@mathquis/node-gist",
    "@mathquis/node-snowboy",
    "@microcode/canary",
    "@modum-io/bluetooth-hci-socket",
    "interruptor",
    "@movable/hash_ring",
    "@movei/tree-sitter-move",
    "@muchmore/opus",
    "@nandoide/tree-sitter-thinp",
    "@nanomatic/rpio",
    "@nbisigna/scramble",
    "@nlv8/signun",
    "@nmarks/dd-trace",
    "@nodeos/node-ife",
    "redis-fast-driver",
    "@savearray2/py.js",
    "@savoirfairelinux/node-server-example",
    "@sequencework/tfjs-node",
    "@shroudedcode/hx711",
    "@snek/private",
    "@sosuisen/nodegit",
    "@suldashi/node-opus",
    "@techainer1t/torch-js",
    "@terminus-term/node-pty",
    "@tonclient/lib-node",
    "@trbll/nodeimu",
    "sse4_crc32",
    "@tuananh/sax-parser",
    "@turtlecoin/crypto",
    "@ulycess/c_parser",
    "@unrest/form",
    "@vit1251/napi_sdl2",
    "@yaguara/dd-trace",
    "@yaming116/node-memwatch",
    "@ycanince/bluetooth-hci-socket",
    "a-napi-example",
    "abletonlink",
    "abletonlink-addon",
    "addonie",
    "ctags",
    "alsa-capture",
    "am_turbo-net",
    "native-hdr-histogram",
    "socketwatcher",
    "ascom-verdaccio",
    "tree-sitter-ags-script",
    "zadeh",
    "atomic-counters",
    "atomium",
    "audify",
    "audio-processing",
    "bcrypt-small",
    "raknet-native",
    "bfast-cloud",
    "bfast-database",
    "bkjs-wand",
    "bktree-fast",
    "bling-hashes",
    "bodmas",
    "bole-first-test",
    "boost-geospatial-index",
    "mcrypt",
    "buffer2address",
    "buildthing-bluetooth-hci-socket",
    "bungle",
    "caki",
    "caliban",
    "casclib",
    "catboost",
    "catboost-model",
    "chacent",
    "checkpromise",
    "child_process_tiny",
    "ckmeans-native"
  ],
  "packages_jsxray_more_charon_nonzero": [
    "sqlite3",
    "@discordjs/opus",
    "libxmljs",
    "posix",
    "lzma-native",
    "ganache-cli",
    "usb",
    "blake-hash",
    "secp256k1",
    "murmurhash-native",
    "@airbnb/node-memwatch",
    "@alac/decoder",
    "@alac/encoder",
    "midi",
    "iltorb",
    "@animetosho/parpar",
    "gl",
    "@arition/torch-js",
    "ursa-optional",
    "git-utils",
    "@atom/nsfw",
    "@axosoft/spellchecker",
    "@b2wads/lru-native2",
    "node-expat",
    "node-opus",
    "@buckyos/node-kcp",
    "@buckyos/socketwatcher",
    "socketcan",
    "crfsuite",
    "bignum",
    "spdlog",
    "blake2",
    "@eth-optimism/ganache-cli",
    "node-cint64",
    "annoy",
    "keyboard-layout",
    "@floffah/node-memwatch",
    "cmark-gfm",
    "raw-socket",
    "dbus",
    "node-zopfli",
    "bson-ext",
    "@hfelix/spellchecker",
    "@howlin/bluetooth-hci-socket",
    "@icebob/node-memwatch",
    "@jeeyah/nodeortools",
    "picha",
    "cppzst",
    "@kmamal/gl",
    "node-firebird-native-api",
    "@knagyorg/node-firebird-native-api",
    "@lastos/dbus",
    "@lydiaswap/lydia-swap-periphery",
    "node-zopfli-es",
    "@mathquis/crfsuite",
    "@mathquis/node-snowboy",
    "@modum-io/bluetooth-hci-socket",
    "@muchmore/opus",
    "redis-fast-driver",
    "@sosuisen/nodegit",
    "@suldashi/node-opus",
    "@techainer1t/torch-js",
    "@yaming116/node-memwatch",
    "@ycanince/bluetooth-hci-socket",
    "ctags",
    "alsa-capture",
    "socketwatcher",
    "ascom-verdaccio",
    "boost-geospatial-index",
    "buildthing-bluetooth-hci-socket",
    "catboost",
    "child_process_tiny"
  ],
  "differences": [
    {
      "package": "0x-monorepo-development",
      "jsxray": 26,
      "charon": 0
    },
    {
      "package": "sqlite3",
      "jsxray": 20,
      "charon": 2
    },
    {
      "package": "leveldown",
      "jsxray": 23,
      "charon": 0
    },
    {
      "package": "deasync",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "microtime",
      "jsxray": 3,
      "charon": 6,
      "diffs": [
        "(syscall,String)",
        "(errno,Number)",
        "(code,Number)"
      ]
    },
    {
      "package": "iconv",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "@discordjs/opus",
      "jsxray": 7,
      "charon": 1
    },
    {
      "package": "bufferutil",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "utf-8-validate",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "libxmljs",
      "jsxray": 1444,
      "charon": 11
    },
    {
      "package": "posix",
      "jsxray": 26,
      "charon": 23
    },
    {
      "package": "nice-napi",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "lzma-native",
      "jsxray": 34,
      "charon": 6
    },
    {
      "package": "rpio",
      "jsxray": 35,
      "charon": 0
    },
    {
      "package": "ganache-cli",
      "jsxray": 26,
      "charon": 1
    },
    {
      "package": "keccak",
      "jsxray": 6,
      "charon": 0
    },
    {
      "package": "libxmljs2",
      "jsxray": 69,
      "charon": 76,
      "diffs": [
        "(addChild,XmlElement)",
        "(cdata,XmlElement)",
        "(_attr,XmlElement)",
        "(attrs,XmlElement)",
        "(child,XmlElement)",
        "(childNodes,XmlElement)",
        "(find,XmlElement)",
        "(nextElement,XmlElement)",
        "(prevElement,XmlElement)",
        "(name,XmlElement)",
        "(path,XmlElement)",
        "(text,XmlElement)",
        "(addPrevSibling,XmlElement)",
        "(addNextSibling,XmlElement)",
        "(replace,XmlElement)",
        "(name,XmlProcessingInstruction)",
        "(text,XmlProcessingInstruction)",
        "(root,XmlDocument)",
        "(version,XmlDocument)",
        "(encoding,XmlDocument)",
        "(toString,XmlDocument)",
        "(validate,XmlDocument)",
        "(rngValidate,XmlDocument)",
        "(schematronValidate,XmlDocument)",
        "(_setDtd,XmlDocument)",
        "(getDtd,XmlDocument)",
        "(type,XmlDocument)",
        "(fromXml,XmlDocument)",
        "(fromHtml,XmlDocument)",
        "(parseString,XmlSaxParser)",
        "(push,XmlSaxParser)",
        "(doc,XmlNode)",
        "(parent,XmlNode)",
        "(namespace,XmlNode)",
        "(namespaces,XmlNode)",
        "(prevSibling,XmlNode)",
        "(nextSibling,XmlNode)",
        "(line,XmlNode)",
        "(type,XmlNode)",
        "(remove,XmlNode)",
        "(clone,XmlNode)",
        "(toString,XmlNode)",
        "(href,XmlNamespace)",
        "(prefix,XmlNamespace)",
        "(toString,XmlTextWriter)",
        "(outputMemory,XmlTextWriter)",
        "(clear,XmlTextWriter)",
        "(startDocument,XmlTextWriter)",
        "(endDocument,XmlTextWriter)",
        "(startElementNS,XmlTextWriter)",
        "(endElement,XmlTextWriter)",
        "(startAttributeNS,XmlTextWriter)",
        "(endAttribute,XmlTextWriter)",
        "(startCdata,XmlTextWriter)",
        "(endCdata,XmlTextWriter)",
        "(startComment,XmlTextWriter)",
        "(endComment,XmlTextWriter)",
        "(writeString,XmlTextWriter)",
        "(text,XmlComment)",
        "(name,XmlAttribute)",
        "(value,XmlAttribute)",
        "(node,XmlAttribute)",
        "(namespace,XmlAttribute)",
        "(nextElement,XmlText)",
        "(prevElement,XmlText)",
        "(text,XmlText)",
        "(replace,XmlText)",
        "(path,XmlText)",
        "(name,XmlText)",
        "(addPrevSibling,XmlText)",
        "(addNextSibling,XmlText)",
        "(ns,ctxt)",
        "(0,set)",
        "(1,set)"
      ]
    },
    {
      "package": "@131/sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "node-rdkafka",
      "jsxray": 46,
      "charon": 0
    },
    {
      "package": "usb",
      "jsxray": 28,
      "charon": 17
    },
    {
      "package": "@6river/sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "blake-hash",
      "jsxray": 6,
      "charon": 4
    },
    {
      "package": "weak-napi",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "secp256k1",
      "jsxray": 20,
      "charon": 1
    },
    {
      "package": "argon2",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "native-watchdog",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "spi-device",
      "jsxray": 2,
      "charon": 10,
      "diffs": [
        "(close,Close)",
        "(closeSync,CloseSync)",
        "(transfer,Transfer)",
        "(transferSync,TransferSync)",
        "(getOptions,GetOptions)",
        "(getOptionsSync,GetOptionsSync)",
        "(setOptions,SetOptions)",
        "(setOptionsSync,SetOptionsSync)"
      ]
    },
    {
      "package": "node-lmdb",
      "jsxray": 32,
      "charon": 55,
      "diffs": [
        "(pageSize,stat)",
        "(treeDepth,stat)",
        "(treeBranchPageCount,stat)",
        "(treeLeafPageCount,stat)",
        "(entryCount,stat)",
        "(open,EnvWrap)",
        "(close,EnvWrap)",
        "(beginTxn,EnvWrap)",
        "(openDbi,EnvWrap)",
        "(sync,EnvWrap)",
        "(batchWrite,EnvWrap)",
        "(stat,EnvWrap)",
        "(info,EnvWrap)",
        "(resize,EnvWrap)",
        "(copy,EnvWrap)",
        "(detachBuffer,EnvWrap)",
        "(commit,TxnWrap)",
        "(abort,TxnWrap)",
        "(getString,TxnWrap)",
        "(getStringUnsafe,TxnWrap)",
        "(getBinary,TxnWrap)",
        "(getBinaryUnsafe,TxnWrap)",
        "(getNumber,TxnWrap)",
        "(getBoolean,TxnWrap)",
        "(putString,TxnWrap)",
        "(putBinary,TxnWrap)",
        "(putNumber,TxnWrap)",
        "(putBoolean,TxnWrap)",
        "(del,TxnWrap)",
        "(reset,TxnWrap)",
        "(renew,TxnWrap)",
        "(close,DbiWrap)",
        "(drop,DbiWrap)",
        "(stat,DbiWrap)",
        "(overflowPages,stat)",
        "(close,CursorWrap)",
        "(getCurrentString,CursorWrap)",
        "(getCurrentStringUnsafe,CursorWrap)",
        "(getCurrentBinary,CursorWrap)",
        "(getCurrentBinaryUnsafe,CursorWrap)",
        "(getCurrentNumber,CursorWrap)",
        "(getCurrentBoolean,CursorWrap)",
        "(goToFirst,CursorWrap)",
        "(goToLast,CursorWrap)",
        "(goToNext,CursorWrap)",
        "(goToPrev,CursorWrap)",
        "(goToKey,CursorWrap)",
        "(goToRange,CursorWrap)",
        "(goToFirstDup,CursorWrap)",
        "(goToLastDup,CursorWrap)",
        "(goToNextDup,CursorWrap)",
        "(goToPrevDup,CursorWrap)",
        "(goToDup,CursorWrap)",
        "(goToDupRange,CursorWrap)",
        "(del,CursorWrap)"
      ]
    },
    {
      "package": "re2",
      "jsxray": 10,
      "charon": 0
    },
    {
      "package": "murmurhash-native",
      "jsxray": 16,
      "charon": 5
    },
    {
      "package": "@airbnb/node-memwatch",
      "jsxray": 4,
      "charon": 1
    },
    {
      "package": "isolated-vm",
      "jsxray": 54,
      "charon": 0
    },
    {
      "package": "better-sqlite3",
      "jsxray": 29,
      "charon": 0
    },
    {
      "package": "@akimasa/vscode-sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "@alac/decoder",
      "jsxray": 2,
      "charon": 1
    },
    {
      "package": "@alac/encoder",
      "jsxray": 2,
      "charon": 1
    },
    {
      "package": "midi",
      "jsxray": 11,
      "charon": 9
    },
    {
      "package": "fs-xattr",
      "jsxray": 8,
      "charon": 0
    },
    {
      "package": "node-pty",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "@alminde/tfjs-node",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "iltorb",
      "jsxray": 4,
      "charon": 2
    },
    {
      "package": "bigint-buffer",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "fd-lock",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "node-uname",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@animetosho/parpar",
      "jsxray": 25,
      "charon": 22
    },
    {
      "package": "platform-folders",
      "jsxray": 14,
      "charon": 0
    },
    {
      "package": "nodehun",
      "jsxray": 25,
      "charon": 0
    },
    {
      "package": "tree-sitter",
      "jsxray": 100,
      "charon": 0
    },
    {
      "package": "@apocentre/xoshiro",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "node-pty-prebuilt-multiarch",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "posix-socket",
      "jsxray": 13,
      "charon": 0
    },
    {
      "package": "@appoptics/apm-bindings",
      "jsxray": 33,
      "charon": 75,
      "diffs": [
        "(value,value)",
        "(addHostTag,o)",
        "(status,Number)",
        "(message,String)",
        "(authStatus,Number)",
        "(authMessage,String)",
        "(typeProvisioned,Number)",
        "(metadataFromXtrace,Boolean)",
        "(edge,Boolean)",
        "(doSample,Boolean)",
        "(doMetrics,Boolean)",
        "(source,Number)",
        "(rate,Number)",
        "(tokenBucketRate,Number)",
        "(tokenBucketCapacity,Number)",
        "(totalCreated,Number)",
        "(totalDestroyed,Number)",
        "(smallActive,Number)",
        "(fullActive,Number)",
        "(totalBytesAllocated,Number)",
        "(totalActive,Number)",
        "(averageLifetime,Number)",
        "(averageSendtime,Number)",
        "(bytesUsed,Number)",
        "(sentCount,Number)",
        "(lifetime,Number)",
        "(sendtime,Number)",
        "(bytesFreed,Number)",
        "(MAX_SAMPLE_RATE,Number)",
        "(MAX_METADATA_PACK_LEN,Number)",
        "(MAX_TASK_ID_LEN,Number)",
        "(MAX_OP_ID_LEN,Number)",
        "(TRACE_NEVER,Number)",
        "(TRACE_ALWAYS,Number)",
        "(OBOE_SQLSANITIZE_AUTO,Number)",
        "(OBOE_SQLSANITIZE_DROPDOUBLE,Number)",
        "(OBOE_SQLSANITIZE_KEEPDOUBLE,Number)",
        "(name,String)",
        "(count,Number)",
        "(value,Number)",
        "(addHostTag,Boolean)",
        "(value,value)",
        "(addHostTag,o)",
        "(tracing_mode,Number)",
        "(sample_rate,Number)",
        "(flag_sample_start,Boolean)",
        "(flag_through_always,Boolean)",
        "(reporterInitCount,Number)",
        "(eventQueueFree,Number)",
        "(collectorOk,Number)",
        "(collectorTryLater,Number)",
        "(collectorLimitExceeded,Number)",
        "(kKeepAliveIntervalSeconds,Number)"
      ]
    },
    {
      "package": "@cryptlex/lexactivator",
      "jsxray": 79,
      "charon": 0
    },
    {
      "package": "gl",
      "jsxray": 133,
      "charon": 5
    },
    {
      "package": "@arition/torch-js",
      "jsxray": 13,
      "charon": 2
    },
    {
      "package": "nsfw",
      "jsxray": 8,
      "charon": 0
    },
    {
      "package": "bstring",
      "jsxray": 13,
      "charon": 14,
      "diffs": [
        "(1,data)"
      ]
    },
    {
      "package": "aerospike",
      "jsxray": 8,
      "charon": 0
    },
    {
      "package": "ursa-optional",
      "jsxray": 21,
      "charon": 20
    },
    {
      "package": "v8-profiler-next",
      "jsxray": 15,
      "charon": 17,
      "diffs": [
        "(startSamplingHeapProfiling,SamplingHeapProfiler)",
        "(stopSamplingHeapProfiling,SamplingHeapProfiler)",
        "(1,data)",
        "(2,data)",
        "(startProfiling,CpuProfiler)",
        "(stopProfiling,CpuProfiler)",
        "(setSamplingInterval,CpuProfiler)",
        "(collectSample,CpuProfiler)",
        "(setGenerateType,CpuProfiler)",
        "(setProfilesCleanupLimit,CpuProfiler)",
        "(name,name)",
        "(takeSnapshot,HeapProfiler)",
        "(startTrackingHeapObjects,HeapProfiler)",
        "(stopTrackingHeapObjects,HeapProfiler)",
        "(getHeapStats,HeapProfiler)",
        "(getObjectByHeapObjectId,HeapProfiler)",
        "(getHeapObjectId,HeapProfiler)"
      ]
    },
    {
      "package": "@ataberkylmz/hx711",
      "jsxray": 10,
      "charon": 0
    },
    {
      "package": "git-utils",
      "jsxray": 28,
      "charon": 27
    },
    {
      "package": "tree-sitter-ql",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@atom/nsfw",
      "jsxray": 3,
      "charon": 2
    },
    {
      "package": "gc-stats",
      "jsxray": 1,
      "charon": 6,
      "diffs": [
        "(startTime,data)",
        "(endTime,data)",
        "(pause,data)",
        "(pauseMS,data)",
        "(gctype,data)"
      ]
    },
    {
      "package": "@tensorflow/tfjs-node",
      "jsxray": 10,
      "charon": 0
    },
    {
      "package": "@axosoft/spellchecker",
      "jsxray": 8,
      "charon": 1
    },
    {
      "package": "@b2wads/lru-native2",
      "jsxray": 9,
      "charon": 8
    },
    {
      "package": "bdb",
      "jsxray": 23,
      "charon": 0
    },
    {
      "package": "mrmr",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "utp-native",
      "jsxray": 19,
      "charon": 0
    },
    {
      "package": "@serialport/bindings",
      "jsxray": 12,
      "charon": 16,
      "diffs": [
        "(cts,data)",
        "(dsr,data)",
        "(dcd,data)",
        "(lowLatency,data)",
        "(baudRate,data)"
      ]
    },
    {
      "package": "highwayhash",
      "jsxray": 5,
      "charon": 0
    },
    {
      "package": "node-expat",
      "jsxray": 11,
      "charon": 10
    },
    {
      "package": "@eosrio/node-abieos",
      "jsxray": 9,
      "charon": 0
    },
    {
      "package": "node-opus",
      "jsxray": 7,
      "charon": 6
    },
    {
      "package": "node-vad",
      "jsxray": 4,
      "charon": 5,
      "diffs": [
        "(0,length)"
      ]
    },
    {
      "package": "@buckyos/node-kcp",
      "jsxray": 15,
      "charon": 14
    },
    {
      "package": "@buckyos/socketwatcher",
      "jsxray": 4,
      "charon": 3
    },
    {
      "package": "@bugsnag/plugin-electron-app",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "@bugsnag/plugin-electron-client-state-persistence",
      "jsxray": 13,
      "charon": 0
    },
    {
      "package": "@calculux/connector",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "socketcan",
      "jsxray": 11,
      "charon": 10
    },
    {
      "package": "@celtium/doge-idle-time",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@cfg.plat/lodepng",
      "jsxray": 2,
      "charon": 3,
      "diffs": [
        "(data,data)"
      ]
    },
    {
      "package": "crfsuite",
      "jsxray": 11,
      "charon": 3
    },
    {
      "package": "userid",
      "jsxray": 5,
      "charon": 0
    },
    {
      "package": "ibm_db",
      "jsxray": 52,
      "charon": 59,
      "diffs": [
        "(index,self)",
        "(SQL_DESC_NAME,self)",
        "(SQL_DESC_TYPE_NAME,self)",
        "(SQL_DESC_CONSIZE_TYPE,self)",
        "(SQL_DESC_DISPLAY_SIZE,self)",
        "(SQL_DESC_PRECISION,self)",
        "(SQL_DESC_SCALE,self)",
        "(SQL_DESC_LENGTH,self)",
        "(0,js_result)",
        "(connected,ConnectedGetter)",
        "(0,codeSet)"
      ]
    },
    {
      "package": "mongodb-client-encryption",
      "jsxray": 18,
      "charon": 0
    },
    {
      "package": "@tensorflow/tfjs-node-gpu",
      "jsxray": 10,
      "charon": 0
    },
    {
      "package": "ced",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "sodium-native",
      "jsxray": 157,
      "charon": 0
    },
    {
      "package": "detect-character-encoding",
      "jsxray": 1,
      "charon": 22,
      "diffs": [
        "(1,status)",
        "(u[[:Zs:][\\\\u0009][:Bidi_Control:][:Variation_Selector:]],status)",
        "(u[[:Bidi_Control:]],status)",
        "(u[\u066c\u2018\\\\u0020\\\\u00A0\\\\u2000-\\\\u200A\\\\u202F\\\\u205F\\\\u3000],status)",
        "(u[\u221e],status)",
        "(u[:digit:],status)",
        "(2,length)",
        "(exports,DetectCharacterEncoding)",
        "(nullptr,status)",
        "(0,UnicodeSet)",
        "(u[:^S:],status)",
        "(0,status)",
        "(0x10000,UnicodeSet)",
        "(1,UnicodeSet)",
        "(1,n)",
        "(this,workingDescription)",
        "(this,foldSet)",
        "(0x39,CollationSettings)",
        "(0,data)",
        "(1,NFRuleSet)",
        "(this,UVector)",
        "(0,p)"
      ]
    },
    {
      "package": "@connectedyard/phin-ecdh",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "@conr2d/bcrypto",
      "jsxray": 397,
      "charon": 0
    },
    {
      "package": "@corbinu/couchbase",
      "jsxray": 22,
      "charon": 0
    },
    {
      "package": "bignum",
      "jsxray": 37,
      "charon": 36
    },
    {
      "package": "@cryptlex/lexfloatclient",
      "jsxray": 24,
      "charon": 0
    },
    {
      "package": "@cubbit/enigma",
      "jsxray": 5,
      "charon": 0
    },
    {
      "package": "generate-rsa-keypair",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "kerberos",
      "jsxray": 10,
      "charon": 0
    },
    {
      "package": "turbo-net",
      "jsxray": 12,
      "charon": 0
    },
    {
      "package": "native-keymap",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "drivelist",
      "jsxray": 1,
      "charon": 20,
      "diffs": [
        "(enumerator,String)",
        "(busType,String)",
        "(device,String)",
        "(raw,String)",
        "(description,String)",
        "(partitionTableType,String)",
        "(error,String)",
        "(size,Number)",
        "(blockSize,Number)",
        "(logicalBlockSize,Number)",
        "(path,String)",
        "(label,String)",
        "(isReadOnly,Boolean)",
        "(isSystem,Boolean)",
        "(isVirtual,Boolean)",
        "(isRemovable,Boolean)",
        "(isCard,Boolean)",
        "(isSCSI,Boolean)",
        "(isUSB,Boolean)"
      ]
    },
    {
      "package": "find-git-repositories",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "@theia/node-pty",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "@divy-work/native-utils",
      "jsxray": 15,
      "charon": 16,
      "diffs": [
        "(17,hmem)"
      ]
    },
    {
      "package": "epoll",
      "jsxray": 5,
      "charon": 0
    },
    {
      "package": "@dooub/rocksdb-nodejs",
      "jsxray": 28,
      "charon": 0
    },
    {
      "package": "native-is-elevated",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "spdlog",
      "jsxray": 15,
      "charon": 14
    },
    {
      "package": "vscode-nsfw",
      "jsxray": 6,
      "charon": 0
    },
    {
      "package": "vscode-sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "@drorgl/talib",
      "jsxray": 3,
      "charon": 5,
      "diffs": [
        "(functions,Functions)",
        "(functionUnstIds,FunctionUnstIds)"
      ]
    },
    {
      "package": "blake2",
      "jsxray": 4,
      "charon": 3
    },
    {
      "package": "lzo",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "@episensor/bluetooth-hci-socket",
      "jsxray": 12,
      "charon": 0
    },
    {
      "package": "@ericvanwyk/tree-sitter-oberon0",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@eth-optimism/ganache-cli",
      "jsxray": 26,
      "charon": 1
    },
    {
      "package": "node-cint64",
      "jsxray": 23,
      "charon": 22
    },
    {
      "package": "annoy",
      "jsxray": 11,
      "charon": 10
    },
    {
      "package": "sodium",
      "jsxray": 386,
      "charon": 0
    },
    {
      "package": "@faressoft/node-pty-prebuilt",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "@felixrieseberg/spellchecker",
      "jsxray": 1,
      "charon": 8,
      "diffs": [
        "(end,end)",
        "(setDictionary,Spellchecker)",
        "(getAvailableDictionaries,Spellchecker)",
        "(getCorrectionsForMisspelling,Spellchecker)",
        "(isMisspelled,Spellchecker)",
        "(checkSpelling,Spellchecker)",
        "(add,Spellchecker)",
        "(remove,Spellchecker)"
      ]
    },
    {
      "package": "keyboard-layout",
      "jsxray": 5,
      "charon": 4
    },
    {
      "package": "@flat/lame",
      "jsxray": 96,
      "charon": 0
    },
    {
      "package": "@floffah/node-memwatch",
      "jsxray": 4,
      "charon": 1
    },
    {
      "package": "@flowaccount/node-icu-tokenizer",
      "jsxray": 1,
      "charon": 3,
      "diffs": [
        "(start,Number)",
        "(end,Number)"
      ]
    },
    {
      "package": "talib",
      "jsxray": 3,
      "charon": 5,
      "diffs": [
        "(functions,Functions)",
        "(functionUnstIds,FunctionUnstIds)"
      ]
    },
    {
      "package": "tulind",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "node-snap7",
      "jsxray": 63,
      "charon": 66,
      "diffs": [
        "(Start,S7Server)",
        "(StartTo,S7Server)",
        "(Stop,S7Server)",
        "(SetParam,S7Server)",
        "(GetParam,S7Server)",
        "(SetResourceless,S7Server)",
        "(RegisterArea,S7Server)",
        "(UnregisterArea,S7Server)",
        "(LockArea,S7Server)",
        "(UnlockArea,S7Server)",
        "(SetArea,S7Server)",
        "(GetArea,S7Server)",
        "(SetEventMask,S7Server)",
        "(GetEventsMask,S7Server)",
        "(ErrorText,S7Server)",
        "(LastError,S7Server)",
        "(EventText,S7Server)",
        "(ServerStatus,S7Server)",
        "(ClientsCount,S7Server)",
        "(GetCpuStatus,S7Server)",
        "(SetCpuStatus,S7Server)",
        "(EvtTime,time)",
        "(Connect,S7Client)",
        "(ConnectTo,S7Client)",
        "(SetConnectionParams,S7Client)",
        "(SetConnectionType,S7Client)",
        "(Disconnect,S7Client)",
        "(GetParam,S7Client)",
        "(SetParam,S7Client)",
        "(ReadArea,S7Client)",
        "(WriteArea,S7Client)",
        "(ReadMultiVars,S7Client)",
        "(WriteMultiVars,S7Client)",
        "(ListBlocks,S7Client)",
        "(GetAgBlockInfo,S7Client)",
        "(GetPgBlockInfo,S7Client)",
        "(ListBlocksOfType,S7Client)",
        "(Upload,S7Client)",
        "(FullUpload,S7Client)",
        "(Download,S7Client)",
        "(Delete,S7Client)",
        "(DBGet,S7Client)",
        "(DBFill,S7Client)",
        "(GetPlcDateTime,S7Client)",
        "(SetPlcDateTime,S7Client)",
        "(SetPlcSystemDateTime,S7Client)",
        "(GetOrderCode,S7Client)",
        "(GetCpuInfo,S7Client)",
        "(GetCpInfo,S7Client)",
        "(ReadSZL,S7Client)",
        "(ReadSZLList,S7Client)",
        "(PlcHotStart,S7Client)",
        "(PlcColdStart,S7Client)",
        "(PlcStop,S7Client)",
        "(CopyRamToRom,S7Client)",
        "(Compress,S7Client)",
        "(GetProtection,S7Client)",
        "(SetSessionPassword,S7Client)",
        "(ClearSessionPassword,S7Client)",
        "(ExecTime,S7Client)",
        "(LastError,S7Client)",
        "(PDURequested,S7Client)",
        "(PDULength,S7Client)",
        "(PlcStatus,S7Client)",
        "(Connected,S7Client)",
        "(ErrorText,S7Client)"
      ]
    },
    {
      "package": "@fsiot/heatshrink",
      "jsxray": 8,
      "charon": 0
    },
    {
      "package": "cmark-gfm",
      "jsxray": 6,
      "charon": 2
    },
    {
      "package": "@ganeshmogare/bodmas",
      "jsxray": 8,
      "charon": 0
    },
    {
      "package": "raw-socket",
      "jsxray": 12,
      "charon": 11
    },
    {
      "package": "dbus",
      "jsxray": 14,
      "charon": 9
    },
    {
      "package": "node-zopfli",
      "jsxray": 4,
      "charon": 2
    },
    {
      "package": "cld",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "@glaced/gles2-2.0",
      "jsxray": 143,
      "charon": 0
    },
    {
      "package": "@glaced/glfw",
      "jsxray": 50,
      "charon": 0
    },
    {
      "package": "@gnaudio/jabra-node-sdk",
      "jsxray": 200,
      "charon": 0
    },
    {
      "package": "pprof",
      "jsxray": 6,
      "charon": 11,
      "diffs": [
        "(name,name)",
        "(title,profile)",
        "(topDownRoot,profile)",
        "(startTime,profile)",
        "(endTime,profile)"
      ]
    },
    {
      "package": "@graphistry/node-pigz",
      "jsxray": 1,
      "charon": 2,
      "diffs": [
        "(deflate,DeflateMethod)"
      ]
    },
    {
      "package": "@haggholm/damerau-levenshtein",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "bson-ext",
      "jsxray": 6,
      "charon": 5
    },
    {
      "package": "@hfelix/spellchecker",
      "jsxray": 9,
      "charon": 1
    },
    {
      "package": "@howlin/bluetooth-hci-socket",
      "jsxray": 10,
      "charon": 9
    },
    {
      "package": "@ibsolution/hana-client-promise",
      "jsxray": 62,
      "charon": 0
    },
    {
      "package": "@icebob/node-memwatch",
      "jsxray": 4,
      "charon": 1
    },
    {
      "package": "@ices/node-addons-callbacks",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "@ices/node-addons-hello",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "pkcs11js",
      "jsxray": 87,
      "charon": 0
    },
    {
      "package": "gcstats.js",
      "jsxray": 1,
      "charon": 3,
      "diffs": [
        "(start,data)",
        "(end,data)"
      ]
    },
    {
      "package": "@ionic/node-pty-prebuilt",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "@itsananderson/electron-sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "@jamesernator/weakref",
      "jsxray": 3,
      "charon": 0
    },
    {
      "package": "@jeeyah/nodeortools",
      "jsxray": 3,
      "charon": 1
    },
    {
      "package": "@jeff-tian/sleep",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "cypher.js",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "@joeblanchard/tree-sitter-ablec",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@joeblanchard/tree-sitter-ablec4pts",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@joeblanchard/tree-sitter-ablec4ptsdemo",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@joeblanchard/tree-sitter-oberon0",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@joergmittaglawo/dmvconfig",
      "jsxray": 3,
      "charon": 0
    },
    {
      "package": "picha",
      "jsxray": 24,
      "charon": 4
    },
    {
      "package": "ed25519-supercop",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "@jsxt/weakref",
      "jsxray": 3,
      "charon": 0
    },
    {
      "package": "@julusian/freetype2",
      "jsxray": 2,
      "charon": 6,
      "diffs": [
        "(setCharSize,FontFace)",
        "(setPixelSizes,FontFace)",
        "(setTransform,FontFace)",
        "(0,f)"
      ]
    },
    {
      "package": "cppzst",
      "jsxray": 6,
      "charon": 5
    },
    {
      "package": "zlib-sync",
      "jsxray": 2,
      "charon": 6,
      "diffs": [
        "(chunkSize,GetChunkSize)",
        "(err,GetErr)",
        "(msg,GetMsg)",
        "(result,GetResult)",
        "(windowBits,GetWindowBits)"
      ]
    },
    {
      "package": "@kmamal/gl",
      "jsxray": 134,
      "charon": 5
    },
    {
      "package": "node-firebird-native-api",
      "jsxray": 540,
      "charon": 1
    },
    {
      "package": "@knagyorg/node-firebird-native-api",
      "jsxray": 540,
      "charon": 1
    },
    {
      "package": "@kore/net",
      "jsxray": 12,
      "charon": 0
    },
    {
      "package": "@lastos/dbus",
      "jsxray": 14,
      "charon": 9
    },
    {
      "package": "@lgeiger/napi-prebuild-starter",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@suldashi/lame",
      "jsxray": 96,
      "charon": 0
    },
    {
      "package": "@lotuz/jsminify",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@luminati-io/gc-stats",
      "jsxray": 1,
      "charon": 6,
      "diffs": [
        "(startTime,data)",
        "(endTime,data)",
        "(pause,data)",
        "(pauseMS,data)",
        "(gctype,data)"
      ]
    },
    {
      "package": "@luminati-io/mmap-io",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "@lydiaswap/lydia-swap-periphery",
      "jsxray": 29,
      "charon": 1
    },
    {
      "package": "node-zopfli-es",
      "jsxray": 4,
      "charon": 2
    },
    {
      "package": "@mapbox/vtquery",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@mapbox/vtvalidate",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@markusjx/shared_mutex",
      "jsxray": 8,
      "charon": 0
    },
    {
      "package": "@marshallofsound/native-keymap",
      "jsxray": 5,
      "charon": 0
    },
    {
      "package": "@mateuszzajacs/bindings",
      "jsxray": 12,
      "charon": 15,
      "diffs": [
        "(cts,data)",
        "(dsr,data)",
        "(dcd,data)",
        "(baudRate,data)"
      ]
    },
    {
      "package": "@mathquis/crfsuite",
      "jsxray": 11,
      "charon": 3
    },
    {
      "package": "@mathquis/node-gist",
      "jsxray": 23,
      "charon": 0
    },
    {
      "package": "@mathquis/node-snowboy",
      "jsxray": 12,
      "charon": 11
    },
    {
      "package": "@microcode/canary",
      "jsxray": 3,
      "charon": 0
    },
    {
      "package": "@microsoft/ads-kerberos",
      "jsxray": 8,
      "charon": 16,
      "diffs": [
        "(username,KerberosClient)",
        "(response,KerberosClient)",
        "(responseConf,KerberosClient)",
        "(contextComplete,KerberosClient)",
        "(username,KerberosServer)",
        "(response,KerberosServer)",
        "(targetName,KerberosServer)",
        "(contextComplete,KerberosServer)"
      ]
    },
    {
      "package": "@modum-io/bluetooth-hci-socket",
      "jsxray": 10,
      "charon": 9
    },
    {
      "package": "interruptor",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "@movable/hash_ring",
      "jsxray": 3,
      "charon": 0
    },
    {
      "package": "@movei/tree-sitter-move",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@muchmore/opus",
      "jsxray": 7,
      "charon": 1
    },
    {
      "package": "@myluluy/node-syslog",
      "jsxray": 1,
      "charon": 4,
      "diffs": [
        "(option,Option)",
        "(facility,Facility)",
        "(priority,Priority)"
      ]
    },
    {
      "package": "@nandoide/tree-sitter-thinp",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@nanomatic/rpio",
      "jsxray": 35,
      "charon": 0
    },
    {
      "package": "@nbisigna/scramble",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "@nlv8/signun",
      "jsxray": 10,
      "charon": 0
    },
    {
      "package": "@nmarks/dd-trace",
      "jsxray": 5,
      "charon": 0
    },
    {
      "package": "@nodeos/node-ife",
      "jsxray": 6,
      "charon": 0
    },
    {
      "package": "redis-fast-driver",
      "jsxray": 4,
      "charon": 3
    },
    {
      "package": "muhammara",
      "jsxray": 60,
      "charon": 240,
      "diffs": [
        "(getObjectID,GetObjectID)",
        "(getVersion,GetVersion)",
        "(getCurrentPageContentStream,GetCurrentPageContentStream)",
        "(getAssociatedPage,GetAssociatedPage)",
        "(toText,ToText)",
        "(addFormXObjectMapping,AddFormXObjectMapping)",
        "(addImageXObjectMapping,AddImageXObjectMapping)",
        "(addProcsetResource,AddProcsetResource)",
        "(addExtGStateMapping,AddExtGStateMapping)",
        "(addFontMapping,AddFontMapping)",
        "(addColorSpaceMapping,AddColorSpaceMapping)",
        "(addPatternMapping,AddPatternMapping)",
        "(addPropertyMapping,AddPropertyMapping)",
        "(addXObjectMapping,AddXObjectMapping)",
        "(addShadingMapping,AddShadingMapping)",
        "(write,Write)",
        "(getCurrentPosition,GetCurrentPosition)",
        "(read,Read)",
        "(notEnded,NotEnded)",
        "(getPDFLevel,GetPDFLevel)",
        "(getPagesCount,GetPagesCount)",
        "(getTrailer,GetTrailer)",
        "(queryDictionaryObject,QueryDictionaryObject)",
        "(queryArrayObject,QueryArrayObject)",
        "(parseNewObject,ParseNewObject)",
        "(getPageObjectID,GetPageObjectID)",
        "(parsePageDictionary,ParsePageDictionary)",
        "(parsePage,ParsePage)",
        "(getObjectsCount,GetObjectsCount)",
        "(isEncrypted,IsEncrypted)",
        "(getXrefSize,GetXrefSize)",
        "(getXrefEntry,GetXrefEntry)",
        "(getXrefPosition,GetXrefPosition)",
        "(startReadingFromStream,StartReadingFromStream)",
        "(startReadingFromStreamForPlainCopying,StartReadingFromStreamForPlainCopying)",
        "(startReadingObjectsFromStream,StartReadingObjectsFromStream)",
        "(startReadingObjectsFromStreams,StartReadingObjectsFromStreams)",
        "(getParserStream,GetParserStream)",
        "(writeKey,WriteKey)",
        "(writeNameValue,WriteNameValue)",
        "(writeRectangleValue,WriteRectangleValue)",
        "(writeLiteralStringValue,WriteLiteralStringValue)",
        "(writeBooleanValue,WriteBooleanValue)",
        "(writeObjectReferenceValue,WriteObjectReferenceValue)",
        "(writeNumberValue,WriteNumberValue)",
        "(toJSObject,ToJSObject)",
        "(queryObject,QueryObject)",
        "(exists,Exists)",
        "(getDictionary,GetDictionary)",
        "(getMediaBox,GetMediaBox)",
        "(getCropBox,GetCropBox)",
        "(getTrimBox,GetTrimBox)",
        "(getBleedBox,GetBleedBox)",
        "(getArtBox,GetArtBox)",
        "(getRotate,GetRotate)",
        "(getStreamContentStart,GetStreamContentStart)",
        "(addAdditionalInfoEntry,AddAdditionalInfoEntry)",
        "(removeAdditionalInfoEntry,RemoveAdditionalInfoEntry)",
        "(clearAdditionalInfoEntries,ClearAdditionalInfoEntries)",
        "(getAdditionalInfoEntry,GetAdditionalInfoEntry)",
        "(getAdditionalInfoEntries,GetAdditionalInfoEntries)",
        "(setCreationDate,SetCreationDate)",
        "(setModDate,SetModDate)",
        "(getType,GetType)",
        "(toPDFIndirectObjectReference,ToPDFIndirectObjectReference)",
        "(toPDFArray,ToPDFArray)",
        "(toPDFDictionary,ToPDFDictionary)",
        "(toPDFStream,ToPDFStream)",
        "(toPDFBoolean,ToPDFBoolean)",
        "(toPDFLiteralString,ToPDFLiteralString)",
        "(toPDFHexString,ToPDFHexString)",
        "(toPDFNull,ToPDFNull)",
        "(toPDFName,ToPDFName)",
        "(toPDFInteger,ToPDFInteger)",
        "(toPDFReal,ToPDFReal)",
        "(toPDFSymbol,ToPDFSymbol)",
        "(toNumber,ToNumber)",
        "(getWriteStream,GetWriteStream)",
        "(createFormXObjectFromPDFPage,CreateFormXObjectFromPDFPage)",
        "(mergePDFPageToPage,MergePDFPageToPage)",
        "(appendPDFPageFromPDF,AppendPDFPageFromPDF)",
        "(mergePDFPageToFormXObject,MergePDFPageToFormXObject)",
        "(getSourceDocumentParser,GetSourceDocumentParser)",
        "(copyDirectObjectAsIs,CopyDirectObjectAsIs)",
        "(copyObject,CopyObject)",
        "(copyDirectObjectWithDeepCopy,CopyDirectObjectWithDeepCopy)",
        "(copyNewObjectsForDirectObject,CopyNewObjectsForDirectObject)",
        "(getCopiedObjectID,GetCopiedObjectID)",
        "(getCopiedObjects,GetCopiedObjects)",
        "(replaceSourceObjects,ReplaceSourceObjects)",
        "(getSourceDocumentStream,GetSourceDocumentStream)",
        "(getContentContext,GetContentContext)",
        "(getResourcesDictinary,GetResourcesDictionary)",
        "(getContentStream,GetContentStream)",
        "(allocateNewObjectID,AllocateNewObjectID)",
        "(startDictionary,StartDictionary)",
        "(startArray,StartArray)",
        "(writeNumber,WriteNumber)",
        "(endArray,EndArray)",
        "(endLine,EndLine)",
        "(endDictionary,EndDictionary)",
        "(endIndirectObject,EndIndirectObject)",
        "(writeIndirectObjectReference,WriteIndirectObjectReference)",
        "(startNewIndirectObject,StartNewIndirectObject)",
        "(startModifiedIndirectObject,StartModifiedIndirectObject)",
        "(deleteObject,DeleteObject)",
        "(writeName,WriteName)",
        "(writeLiteralString,WriteLiteralString)",
        "(writeHexString,WriteHexString)",
        "(writeBoolean,WriteBoolean)",
        "(writeKeyword,WriteKeyword)",
        "(writeComment,WriteComment)",
        "(setCompressStreams,SetCompressStreams)",
        "(startPDFStream,StartPDFStream)",
        "(startUnfilteredPDFStream,StartUnfilteredPDFStream)",
        "(endPDFStream,EndPDFStream)",
        "(startFreeContext,StartFreeContext)",
        "(endFreeContext,EndFreeContext)",
        "(b,b)",
        "(B,B)",
        "(bStar,bStar)",
        "(BStar,BStar)",
        "(s,s)",
        "(S,S)",
        "(f,f)",
        "(F,F)",
        "(fStar,fStar)",
        "(n,n)",
        "(m,m)",
        "(l,l)",
        "(c,c)",
        "(v,v)",
        "(y,y)",
        "(h,h)",
        "(re,re)",
        "(q,q)",
        "(Q,Q)",
        "(cm,cm)",
        "(w,w)",
        "(J,J)",
        "(j,j)",
        "(M,M)",
        "(d,d)",
        "(ri,ri)",
        "(i,i)",
        "(gs,gs)",
        "(CS,CS)",
        "(cs,cs)",
        "(SC,SC)",
        "(SCN,SCN)",
        "(sc,sc)",
        "(scn,scn)",
        "(G,G)",
        "(g,g)",
        "(RG,RG)",
        "(rg,rg)",
        "(K,K)",
        "(k,k)",
        "(W,W)",
        "(WStar,WStar)",
        "(doXObject,doXObject)",
        "(Tc,Tc)",
        "(Tw,Tw)",
        "(Tz,Tz)",
        "(TL,TL)",
        "(Tr,Tr)",
        "(Ts,Ts)",
        "(BT,BT)",
        "(ET,ET)",
        "(Td,Td)",
        "(TD,TD)",
        "(Tm,Tm)",
        "(TStar,TStar)",
        "(Tf,Tf)",
        "(Tj,Tj)",
        "(Quote,Quote)",
        "(DoubleQuote,DoubleQuote)",
        "(TJ,TJ)",
        "(writeFreeCode,WriteFreeCode)",
        "(drawPath,DrawPath)",
        "(drawCircle,DrawCircle)",
        "(drawSquare,DrawSquare)",
        "(drawRectangle,DrawRectangle)",
        "(writeText,WriteText)",
        "(drawImage,DrawImage)",
        "(toJSArray,ToJSArray)",
        "(getLength,GetLength)",
        "(calculateTextDimensions,CalculateTextDimensions)",
        "(getFontMetrics,GetFontMetrics)",
        "(setPosition,SetPosition)",
        "(setPositionFromEnd,SetPositionFromEnd)",
        "(skip,Skip)",
        "(getInfoDictionary,GetInfoDictionary)"
      ]
    },
    {
      "package": "@samebchase/spellchecker",
      "jsxray": 1,
      "charon": 8,
      "diffs": [
        "(end,end)",
        "(setDictionary,Spellchecker)",
        "(getAvailableDictionaries,Spellchecker)",
        "(getCorrectionsForMisspelling,Spellchecker)",
        "(isMisspelled,Spellchecker)",
        "(checkSpelling,Spellchecker)",
        "(add,Spellchecker)",
        "(remove,Spellchecker)"
      ]
    },
    {
      "package": "@savearray2/py.js",
      "jsxray": 17,
      "charon": 0
    },
    {
      "package": "@savoirfairelinux/node-server-example",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@sematext/gc-stats",
      "jsxray": 1,
      "charon": 6,
      "diffs": [
        "(startTime,data)",
        "(endTime,data)",
        "(pause,data)",
        "(pauseMS,data)",
        "(gctype,data)"
      ]
    },
    {
      "package": "@sequencework/tfjs-node",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "@shroudedcode/hx711",
      "jsxray": 8,
      "charon": 0
    },
    {
      "package": "@slimio/micro",
      "jsxray": 4,
      "charon": 7,
      "diffs": [
        "(sec,Number)",
        "(usec,Number)",
        "(nsec,Number)"
      ]
    },
    {
      "package": "@snek/private",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@sosuisen/nodegit",
      "jsxray": 648,
      "charon": 547
    },
    {
      "package": "@suldashi/node-opus",
      "jsxray": 7,
      "charon": 6
    },
    {
      "package": "@techainer1t/torch-js",
      "jsxray": 14,
      "charon": 2
    },
    {
      "package": "@terminus-term/node-pty",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "@tonclient/lib-node",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "@trbll/nodeimu",
      "jsxray": 3,
      "charon": 0
    },
    {
      "package": "sse4_crc32",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "@tuananh/sax-parser",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "@turtlecoin/crypto",
      "jsxray": 58,
      "charon": 0
    },
    {
      "package": "@tzmedical/trident-sdk",
      "jsxray": 29,
      "charon": 32,
      "diffs": [
        "(status,Number)",
        "(error,String)",
        "(log,String)"
      ]
    },
    {
      "package": "zookeeper",
      "jsxray": 23,
      "charon": 27,
      "diffs": [
        "(toStrTest,toStrTest)",
        "(convertUnixTimeToDateTest,convertUnixTimeToDateTest)",
        "(toBoolTest,toBoolTest)",
        "(toIntTest,toIntTest)",
        "(toUintTest,toUintTest)"
      ]
    },
    {
      "package": "@ulycess/c_parser",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@unrest/form",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "@vit1251/napi_sdl2",
      "jsxray": 48,
      "charon": 0
    },
    {
      "package": "node-quirc",
      "jsxray": 2,
      "charon": 3,
      "diffs": [
        "(data,data)"
      ]
    },
    {
      "package": "@votingworks/qrdetect",
      "jsxray": 1,
      "charon": 7,
      "diffs": [
        "(type,Number)",
        "(orientation,Number)",
        "(x,Number)",
        "(y,Number)",
        "(quality,Number)",
        "(version,String)"
      ]
    },
    {
      "package": "@wmakeev/borders-detection",
      "jsxray": 1,
      "charon": 8,
      "diffs": [
        "(imgWidth,Number)",
        "(imgHeight,Number)",
        "(minX,Number)",
        "(minY,Number)",
        "(maxX,Number)",
        "(maxY,Number)",
        "(pixelsCount,Number)"
      ]
    },
    {
      "package": "@wwa/statvfs",
      "jsxray": 2,
      "charon": 11,
      "diffs": [
        "(errno,Value)",
        "(path,Value)",
        "(type,Value)",
        "(bsize,Value)",
        "(blocks,Value)",
        "(bfree,Value)",
        "(bavail,Value)",
        "(files,Value)",
        "(ffree,Value)"
      ]
    },
    {
      "package": "@yaguara/dd-trace",
      "jsxray": 5,
      "charon": 0
    },
    {
      "package": "@yaming116/node-memwatch",
      "jsxray": 4,
      "charon": 1
    },
    {
      "package": "@ycanince/bluetooth-hci-socket",
      "jsxray": 10,
      "charon": 9
    },
    {
      "package": "@ycanince/sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "@yosiat/stack-frames",
      "jsxray": 1,
      "charon": 2,
      "diffs": [
        "(file_name,scriptName)"
      ]
    },
    {
      "package": "a-napi-example",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "abletonlink",
      "jsxray": 29,
      "charon": 0
    },
    {
      "package": "abletonlink-addon",
      "jsxray": 25,
      "charon": 0
    },
    {
      "package": "addonie",
      "jsxray": 5,
      "charon": 0
    },
    {
      "package": "ads-kerberos",
      "jsxray": 8,
      "charon": 16,
      "diffs": [
        "(username,KerberosClient)",
        "(response,KerberosClient)",
        "(responseConf,KerberosClient)",
        "(contextComplete,KerberosClient)",
        "(username,KerberosServer)",
        "(response,KerberosServer)",
        "(targetName,KerberosServer)",
        "(contextComplete,KerberosServer)"
      ]
    },
    {
      "package": "ads-kerberos2",
      "jsxray": 8,
      "charon": 16,
      "diffs": [
        "(username,KerberosClient)",
        "(response,KerberosClient)",
        "(responseConf,KerberosClient)",
        "(contextComplete,KerberosClient)",
        "(username,KerberosServer)",
        "(response,KerberosServer)",
        "(targetName,KerberosServer)",
        "(contextComplete,KerberosServer)"
      ]
    },
    {
      "package": "ctags",
      "jsxray": 5,
      "charon": 4
    },
    {
      "package": "alsa-capture",
      "jsxray": 2,
      "charon": 1
    },
    {
      "package": "am_turbo-net",
      "jsxray": 12,
      "charon": 0
    },
    {
      "package": "native-hdr-histogram",
      "jsxray": 32,
      "charon": 0
    },
    {
      "package": "apoxusbcan",
      "jsxray": 5,
      "charon": 6,
      "diffs": [
        "(open,ApoxUsbCan)",
        "(close,ApoxUsbCan)",
        "(sendBoardMessage,ApoxUsbCan)",
        "(sendCanBusMessage,ApoxUsbCan)",
        "(34,size)",
        "(28,size)"
      ]
    },
    {
      "package": "socketwatcher",
      "jsxray": 4,
      "charon": 3
    },
    {
      "package": "ascom-verdaccio",
      "jsxray": 21,
      "charon": 6
    },
    {
      "package": "tree-sitter-ags-script",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "swisseph",
      "jsxray": 85,
      "charon": 86,
      "diffs": [
        "(name,name)"
      ]
    },
    {
      "package": "zadeh",
      "jsxray": 10,
      "charon": 0
    },
    {
      "package": "atomic-counters",
      "jsxray": 7,
      "charon": 0
    },
    {
      "package": "atomium",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "audify",
      "jsxray": 23,
      "charon": 0
    },
    {
      "package": "audio-processing",
      "jsxray": 14,
      "charon": 0
    },
    {
      "package": "bkjs-sqlite",
      "jsxray": 13,
      "charon": 17,
      "diffs": [
        "(open,OpenGetter)",
        "(inserted_oid,InsertedOidGetter)",
        "(affected_rows,AffectedRowsGetter)",
        "(name,filename)",
        "(mode,mode)",
        "(sql,sql)"
      ]
    },
    {
      "package": "bcrypt-small",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "raknet-native",
      "jsxray": 9,
      "charon": 0
    },
    {
      "package": "bfast-cloud",
      "jsxray": 3,
      "charon": 0
    },
    {
      "package": "bfast-database",
      "jsxray": 3,
      "charon": 0
    },
    {
      "package": "bkjs-wand",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "bktree-fast",
      "jsxray": 6,
      "charon": 0
    },
    {
      "package": "bling-hashes",
      "jsxray": 4,
      "charon": 0
    },
    {
      "package": "bodmas",
      "jsxray": 8,
      "charon": 0
    },
    {
      "package": "bole-first-test",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "boost-geospatial-index",
      "jsxray": 8,
      "charon": 7
    },
    {
      "package": "broadcast-interfaces",
      "jsxray": 1,
      "charon": 6,
      "diffs": [
        "(name,String)",
        "(running,Boolean)",
        "(internal,Boolean)",
        "(address,String)",
        "(broadcast,String)"
      ]
    },
    {
      "package": "mcrypt",
      "jsxray": 20,
      "charon": 0
    },
    {
      "package": "buffer2address",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "buildthing-bluetooth-hci-socket",
      "jsxray": 10,
      "charon": 9
    },
    {
      "package": "bungle",
      "jsxray": 5,
      "charon": 0
    },
    {
      "package": "caki",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "caliban",
      "jsxray": 1,
      "charon": 0
    },
    {
      "package": "casclib",
      "jsxray": 12,
      "charon": 0
    },
    {
      "package": "catboost",
      "jsxray": 12,
      "charon": 1
    },
    {
      "package": "catboost-model",
      "jsxray": 7,
      "charon": 0
    },
    {
      "package": "chacent",
      "jsxray": 5,
      "charon": 0
    },
    {
      "package": "checkpromise",
      "jsxray": 2,
      "charon": 0
    },
    {
      "package": "child_process_tiny",
      "jsxray": 8,
      "charon": 1
    },
    {
      "package": "ckmeans-native",
      "jsxray": 1,
      "charon": 0
    }
  ]
}