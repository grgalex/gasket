{
  "num_packages": 1264,
  "jsxray_total": 20113,
  "charon_total": 8147,
  "num_same": 349,
  "num_charon_nonzero": 640,
  "num_packages_both_nonzero": 1060,
  "num_packages_jsxray_more": 776,
  "num_packages_jsxray_more_charon_nonzero": 152,
  "num_packages_charon_more": 122,
  "num_packages_diff": 843,
  "packages": [
    "0x-monorepo-development",
    "@131/sqlite3",
    "@2048k/evm-node",
    "@2060.io/ffi-napi",
    "@3xpo/argon2",
    "64",
    "@6river/sqlite3",
    "@aabuhijleh/forcefocus",
    "@abandonware/bluetooth-hci-socket",
    "abletonlink",
    "abletonlink-addon",
    "abstract-socket",
    "ac-syslogh",
    "actual-crash",
    "addlib",
    "addonie",
    "@adeperio/forcefocus",
    "ads-kerberos",
    "ads-kerberos2",
    "aerospike",
    "aes-ccm",
    "ailoy-node",
    "@aimelo/lua",
    "@airbnb/node-memwatch",
    "@aitsys/sharp",
    "@akikowo/chemical-balancer",
    "@akimasa/vscode-sqlite3",
    "@akiroz/bluetooth-hci-socket",
    "@akiroz/sharp",
    "@alac/decoder",
    "@alac/encoder",
    "@alien.sh/signals",
    "ali-usb_ctl",
    "@alminde/tfjs-node",
    "alsa-capture",
    "alsa-volume",
    "@amoo-miki/node-sass",
    "am_turbo-net",
    "a-napi-example",
    "a-native-example",
    "@animetosho/parpar",
    "anitomy-js",
    "annoy",
    "annoy-node",
    "@antimatterhq/antimatter",
    "@apminsight/native-stats",
    "@apocentre/xoshiro",
    "apoxusbcan",
    "applicationinsights-native-metrics",
    "@appoptics/apm-bindings",
    "@aptoma/sharp",
    "apx-native-module",
    "@archwayhq/keyring-go",
    "argon2",
    "@arition/torch-js",
    "ascom-verdaccio",
    "@asdftempfix/serialport-bindings",
    "asfw",
    "@ashok_gujjar92/symbology_18",
    "async-ioctl",
    "@ataberkylmz/hx711",
    "atomic-counters",
    "atomium",
    "@atom/nsfw",
    "atzneextracter",
    "@audc/libsamplerate",
    "audify",
    "audio-processing",
    "@au-re/libpg-query",
    "@automattic/yara",
    "auto-object",
    "availvideobuffer",
    "awe-sqlite3",
    "@axosoft/spellchecker",
    "@b2wads/lru-native2",
    "@baliset/mmap-io",
    "bcrypt",
    "bcrypt-deterministic",
    "bcrypto",
    "bcrypt-small",
    "bcrypt-updated",
    "bdb",
    "better-sqlite3",
    "better-sqlite3-multiple-ciphers",
    "bfast-cloud",
    "bfast-database",
    "bglobal-signal",
    "bhtsne",
    "@bigemap/usb-detection",
    "bigint-buffer",
    "bigint-hash",
    "bignum",
    "bitcoinnova-crypto",
    "@bithighlander/usb-detection",
    "bkjs-cache",
    "bkjs-sqlite",
    "bkjs-syslog",
    "bkjs-utils",
    "bkjs-wand",
    "bktree-fast",
    "blake2",
    "blake-hash",
    "bling-hashes",
    "bodmas",
    "bole-first-test",
    "boost-geospatial-index",
    "boyia-npm",
    "@bpnetguy/sharp",
    "@breush/ref-napi",
    "broadcast-interfaces",
    "bsdiff-node",
    "bsdiff-nodejs",
    "bsdp",
    "bsip",
    "bson-ext",
    "bstring",
    "@buckyos/node-kcp",
    "@buckyos/segfault-handler",
    "@buckyos/socketwatcher",
    "buffer2address",
    "bufferutil",
    "@bugsnag/plugin-electron-app",
    "@bugsnag/plugin-electron-client-state-persistence",
    "buildthing-bluetooth-hci-socket",
    "bungle",
    "bunyan-syslog",
    "c4solver",
    "caki",
    "@calculux/connector",
    "caliban",
    "@camol/file-lock",
    "@camol/mmap",
    "canvas-mirror",
    "canvas-terminal",
    "canvas-termuc",
    "canvas-zj-node-v1",
    "casclib",
    "catboost",
    "catboost-model",
    "@cathodique/mmap-io",
    "@cathodique/usocket",
    "cbor-extract",
    "@cbrewster/luna",
    "@cdktf/node-pty-prebuilt-multiarch",
    "cd-node-napi-test",
    "cdt-gdb-adapter",
    "ced",
    "@celtium/doge-idle-time",
    "@cfg.plat/lodepng",
    "c-float-divide",
    "chacent",
    "check-caps",
    "checkpromise",
    "child_process_tiny",
    "child_pty-fixedv12",
    "chimera-crypto",
    "ckmeans-native",
    "c-kzg",
    "classic-level",
    "cld",
    "clear-env",
    "clipboard-data",
    "@cloudpss/zstd",
    "cm256",
    "cmake2json",
    "cmark-gfm",
    "cmsn-bluetooth-hci-socket",
    "@codeporter/robotjs",
    "@codspeed/core",
    "computron",
    "@confluentinc/kafka-javascript",
    "confusablematcher-js-interop",
    "connect4-bot",
    "@connectedyard/phin-ecdh",
    "@conr2d/bcrypto",
    "@contaquanto/chevronlib",
    "@contrast/agent-lib",
    "@contrast/code-events",
    "@contrast/distringuish",
    "@contrast/distringuish-prebuilt",
    "@contrast/fn-inspect",
    "@contrast/stash",
    "@corbinu/couchbase",
    "corelink-trail-smoothifier",
    "corona-school-matching",
    "cortex-cpp",
    "@cosmicmedia/bcrypt",
    "cozo-node",
    "cpp-add",
    "cpp-hexgenerator",
    "cpp-time",
    "cppzst",
    "cpuid-git",
    "cpu-instructions",
    "crc64cpp",
    "crc64-ecma182",
    "crfsuite",
    "crypt3-passwd",
    "cryptian",
    "@cryptlex/lexactivator",
    "@cryptlex/lexfloatclient",
    "crypto-incognito",
    "@csc1/shacrypt",
    "ctags",
    "@cubbit/enigma",
    "cubiomes",
    "cue-sdk",
    "cue-sdk-cove",
    "@curlconverter/tree-sitter-bash",
    "curve25519-n",
    "curve25519-n2",
    "cypher.js",
    "darknet-bindings",
    "data-ann-native-addon-test",
    "@datadog/native-iast-taint-tracking",
    "@datadog/native-metrics",
    "@datadog/pprof",
    "@dataee/sockopt",
    "@davedoesdev/fs-ext",
    "db4bix",
    "dblogger",
    "dbus",
    "ddamsign",
    "deadline-math",
    "deasync",
    "debstep",
    "decimal102",
    "decoder1090-c",
    "deltachat-node",
    "@dennisameling/sharp-arm64-win-temp",
    "deps-verdaccio",
    "desktop-idle",
    "desktop-idle-prebuild",
    "desktop-idle-prebuilt",
    "desktopshortcuts",
    "@desktop.vision/libnut-linux",
    "detect-character-encoding",
    "detect-fullscreen",
    "dev_fastlz",
    "devlz",
    "@dhruvit_r/pathwatcher",
    "diat-addon",
    "dicom-dimse-native",
    "dicom-to-json",
    "discord-game",
    "@discordjs/opus",
    "diskfree",
    "disk-tool",
    "diskusage",
    "displays",
    "@div_arora/libpg-query",
    "@divy-work/native-utils",
    "@divy-work/spin-cc",
    "@dooub/rocksdb-nodejs",
    "dotnode-js",
    "drivelist",
    "drive-name",
    "@drorgl/talib",
    "dualshock",
    "@duck4i/llama",
    "duckdb",
    "dumpme",
    "dvbtee",
    "dylib",
    "easybotics-rpi-rgb-led-matrix",
    "easy-sleep",
    "eboxprinter",
    "@ecervo/canvas",
    "ed25519",
    "ed25519-supercop",
    "efsw",
    "eiows",
    "@elchetz/cld",
    "ele-500-sql3",
    "ele6-sqlite3",
    "@eleccookie/ref-napi",
    "electron-active-window",
    "electron-application-desktop-toolbar",
    "electron-clipboard-files",
    "electron-disable-minimize",
    "electron-diskusage",
    "electron-drivelist",
    "electron-fsdes",
    "electron-overlay-window",
    "@electron-prebuilds-preview/parcel-watcher",
    "elios-protocol",
    "embeddable-wg",
    "ems",
    "enhanced_promise",
    "enigmawrap",
    "@eosrio/node-abieos",
    "@epaperjs/rpi-2in13-bc",
    "@episensor/bluetooth-hci-socket",
    "epoll",
    "equate",
    "@ericvanwyk/tree-sitter-oberon0",
    "eris-profiler",
    "eris-sleep",
    "eris-snapshot",
    "erlpack",
    "@esfx/equatable",
    "espresso-logic-minimizer",
    "essy-fft",
    "essy-nnls",
    "@eth-optimism/ganache-cli",
    "@eugenepankov/system-idle-time",
    "evdev",
    "event-loop-native",
    "event-loop-stats",
    "@evolvingriley/file-upload",
    "exclusive-keyboard",
    "fadvise",
    "faiss-napi",
    "faiss-node",
    "@faressoft/node-pty-prebuilt",
    "farmhash",
    "fast-bigint",
    "fast-feed",
    "fast-find-in-files",
    "fast-is-utf8",
    "fastnoisejs",
    "fastpug",
    "fast-string-search",
    "fasttail",
    "fasttext",
    "fast-uuidv4",
    "fd-lock",
    "fdpassing",
    "@felixrieseberg/spellchecker",
    "ffi-napi-v22",
    "fileworkbyaleksbelka",
    "finalize-addon",
    "find-git-repositories",
    "fit-native",
    "fixed-node-canvas",
    "fjt-walter",
    "flatbuffers-addon",
    "@flat/lame",
    "flock-rs",
    "flocon-new",
    "@floffah/node-memwatch",
    "@flowaccount/node-icu-tokenizer",
    "floweejs",
    "flow-parser-bin",
    "flush-all",
    "fmemory",
    "fontnik",
    "forcefocus",
    "frankda-newrelic-native-metrics",
    "freetype2",
    "frk",
    "frog-jump-master",
    "@frosttusk/ginger",
    "fs-admin",
    "fsctl",
    "fs-ext",
    "fs-extended-attributes",
    "@fsiot/heatshrink",
    "fstime",
    "fs-xattr",
    "@fttx/robotjs",
    "fullname-native",
    "fuzzaldrin-plus-fast",
    "@gamergenic/js-spice",
    "ganache-cli",
    "@ganeshmogare/bodmas",
    "@gatsbyjs/sharp",
    "@gbkwiatt/node-rpi-ws281x-native",
    "gcontext",
    "gc-profiler",
    "gc-stats",
    "gcstats.js",
    "gc-watch",
    "gdal-async",
    "@genee/desktop-idle",
    "generate-rsa-keypair",
    "genx",
    "@gera2ld/robotjs",
    "get-cursor-position",
    "@getjerry/lambda-at-edge",
    "getrusage",
    "@gifyourgame/spawn-as-admin",
    "@gilsdav/robotjs",
    "git-utils",
    "gl",
    "@glaced/gles2-2.0",
    "@glaced/glfw",
    "gl-client",
    "glfw-n-api",
    "glpk",
    "@gnaudio/jabra-node-sdk",
    "@goblinalchemist/nodejieba",
    "goosig",
    "go-text-template-napi",
    "gphoto2",
    "gpt4all",
    "@graphistry/node-pigz",
    "@graphprotocol/indexer-native",
    "@gregnr/libpg-query",
    "grpc",
    "grpc-patch",
    "grpc-zjl",
    "gssapi.js",
    "gtk-utils",
    "gt-usb",
    "h3-node",
    "haddley-factorial-cc",
    "@haggholm/damerau-levenshtein",
    "happy-birthday-vipyne",
    "hargument",
    "hca-decoder",
    "hci-socket",
    "hc_socketcan",
    "hc_socketcan2",
    "heapdump",
    "heapdump-next",
    "heapdump-prebuild",
    "hello-addon",
    "hello-hiro",
    "hello-hiro-js",
    "hello_publishing-native-pre-gyp",
    "@hfelix/spellchecker",
    "hhello",
    "hidden-machine-example-http",
    "hide-cursor",
    "highwayhash",
    "hikopenapi-node",
    "@hmodarres/robotjs",
    "@homebridge/node-pty-prebuilt-multiarch",
    "@howlin/bluetooth-hci-socket",
    "hs-miner",
    "hts-encrypt",
    "huskee-core",
    "huskee-install",
    "hwrap",
    "hybrixd",
    "i2c-bus",
    "i2c-bus-i2c-1",
    "ibm_db",
    "ibmmq",
    "@ibsolution/hana-client-promise",
    "@icebob/node-memwatch",
    "@ices/node-addons-callbacks",
    "@ices/node-addons-hello",
    "iconv",
    "iconv-md5",
    "icu-transliterator",
    "@idango/crypt3",
    "@ifabos/kerberos",
    "@ikonopistsev/node-rapidjson",
    "@ilb/posix",
    "iltorb",
    "inclose5js",
    "inet_xtoy",
    "ingescape",
    "inotify-remastered",
    "int64-transform",
    "interruptor",
    "ioctl",
    "ioctl-napi",
    "ioctl-native",
    "@ionic/node-pty-prebuilt",
    "iot-util2",
    "@ipshipyard/node-datachannel",
    "isolated-vm",
    "is-valid-window",
    "iswasmfast",
    "it8951",
    "@itsananderson/electron-sqlite3",
    "ivm-inspect",
    "jackpkg",
    "@jamesernator/weakref",
    "@jcoreio/i2c",
    "@jcoreio/kexec",
    "@jeeyah/nodeortools",
    "@jeff-tian/sleep",
    "jittertrng",
    "joamag-hello-node",
    "@joeblanchard/tree-sitter-ablec",
    "@joeblanchard/tree-sitter-ablec4pts",
    "@joeblanchard/tree-sitter-ablec4ptsdemo",
    "@joeblanchard/tree-sitter-oberon0",
    "@joergmittaglawo/dmvconfig",
    "@joshtwc/robotjs",
    "@jovian/fourq",
    "jsgui3-gfx-server",
    "js-inv-mpu",
    "js-native-ternary-buffer-tree",
    "@jsxt/weakref",
    "@julusian/freetype2",
    "@julusian/jpeg-turbo",
    "@junsiklee/vscode-sqlite3",
    "@kabbi/aes-ccm",
    "@karlsen/process-list",
    "keccak",
    "kepler-display",
    "kepler-entities",
    "keras-predict",
    "kerberos",
    "keyboard-layout",
    "keyboardrobotjs",
    "keytar-pass",
    "kf-node-addon",
    "kill-dash-nine",
    "klsudoku",
    "@kmamal/gl",
    "@knagyorg/node-firebird-native-api",
    "kociemba",
    "@kore/net",
    "koru",
    "@koush/sharp",
    "krb5",
    "kryptokrona-crypto",
    "kuzu",
    "@lamassu/supyo",
    "lame-private-no-maintainence-shrug2",
    "language-act-r",
    "@lastos/dbus",
    "lbj_process_addon",
    "ldll",
    "left-clicky",
    "leo-test-cpp-module",
    "leveldown",
    "leveldown-nodejs-mobile",
    "@lgeiger/napi-prebuild-starter",
    "libcoreso_demo",
    "libjq",
    "libmaxminddb",
    "libpg-query",
    "libpg-query-m1-native",
    "libpq",
    "libraw.js",
    "libscp",
    "libtidy",
    "libtidy-updated",
    "libxml2-nodejs",
    "libxmljs",
    "libxmljs2",
    "@lifbi_tbt/win-audio",
    "lightning-spell",
    "linux-device",
    "linux-devnode",
    "linux-perf",
    "linux-xorg-screencapture",
    "litl-parser",
    "live-elements-js-compiler",
    "@lockshi/myaddon",
    "lodepng",
    "@logigator/logigator-simulation",
    "logpp",
    "loole",
    "@lotuz/jsminify",
    "lp_solve",
    "lru-native2",
    "lru-node-addon",
    "ls-trace",
    "luckzhiwei-lib",
    "@luminati-io/gc-stats",
    "@luminati-io/mmap-io",
    "@luminati-io/node-crypt3",
    "@luminati-io/node-diskusage",
    "@luminati-io/node-time",
    "@luminati-io/node-unlisten",
    "@lydiaswap/lydia-swap-periphery",
    "lymui-node",
    "lz4",
    "lzma-native",
    "lzo",
    "lzo-decompress",
    "malgo",
    "mano10",
    "mao_test_hello",
    "@mapbox/vtquery",
    "@mapbox/vtvalidate",
    "@markusjx/shared_memory",
    "@markusjx/shared_mutex",
    "@marshallofsound/native-keymap",
    "@mateuszzajacs/bindings",
    "@mathquis/crfsuite",
    "@mathquis/node-gist",
    "@mathquis/node-snowboy",
    "matrix-seshat-prebuild",
    "@matteodisabatino/gc_info",
    "mc-nodegit",
    "mcrypt",
    "megahash",
    "@meteorjs/pathwatcher",
    "@meza/curseforge-fingerprint",
    "mfont",
    "mg-dbx",
    "@microcode/canary",
    "@microsoft/ads-kerberos",
    "microtime",
    "microvium",
    "midi",
    "midi-test",
    "minimp3",
    "minipg",
    "minisqlite",
    "@minko-fe/sharp",
    "@mirror_cy/sharp",
    "mishiro-core",
    "@miup/napi-demo",
    "mker",
    "mkfifo",
    "mmap-mio",
    "modern-syslog",
    "@modum-io/bluetooth-hci-socket",
    "moncoin-crypto",
    "mongodb-client-encryption",
    "@mongodb-js/zstd",
    "mongo-dbx",
    "monoclock",
    "@morajabi/robotjs",
    "mountutils",
    "mouse-forward-back",
    "@movable/hash_ring",
    "@movei/tree-sitter-move",
    "mp4decrypt-buffer",
    "mp4decryptjs",
    "mpu6050-dmp",
    "mpzjs",
    "mrchandler",
    "mrmr",
    "ms-flakeless",
    "msgpackr-extract",
    "msoconv",
    "mt-bsdiff-nodejs",
    "mt-plugin-test",
    "mt-resource-diff-patch",
    "mt-test-node-02",
    "@muchmore/opus",
    "@muffinista/goto-sleep",
    "muhammara",
    "muhash",
    "murmurhash3",
    "murmurhash-native",
    "mutou-node-plugin",
    "mutou-s",
    "mutou-socket",
    "mutou-test-node-01",
    "mv-exchange",
    "myf-napi-example",
    "@myluluy/node-syslog",
    "nan-async-example",
    "nan-demo",
    "@nandoide/tree-sitter-thinp",
    "nan-hello-world",
    "@nanobot248/linux-dedupe",
    "@nanomatic/rpio",
    "nanomsg",
    "nanosecond-timer",
    "napi-addon-fdtd",
    "napi-async-callback-example",
    "napi-async-promise-example",
    "napi-oniguruma",
    "napi-physics-modeling-oop",
    "napi-spellchecker",
    "napi_stb_image",
    "napi-sync-callback-example",
    "napi-sync-return-example",
    "napitest",
    "native-addon-example",
    "native-capture-js",
    "native-copy",
    "native-cypher",
    "native-fork",
    "native-hdr-histogram",
    "native-hello-world",
    "native-idle-time",
    "native-is-elevated",
    "native-keymap",
    "native-linked-list",
    "native-screen-js",
    "native-trie",
    "native_tst",
    "native-watchdog",
    "naudiodon",
    "@nbisigna/scramble",
    "nblas",
    "nc-screen",
    "net-runner-engine",
    "network-interfaces-plus",
    "@nexellia/process-list",
    "nfinger",
    "nflx-spectator-nodejsmetrics",
    "nice-napi",
    "nkv.db",
    "nlibcurl",
    "@nlv8/signun",
    "@nmarks/dd-trace",
    "nnocr",
    "nodeaffinity",
    "node-alsa-cardinfo",
    "node-base92",
    "node-bsdiff",
    "node-calls-python",
    "node-canal",
    "node-chip8",
    "node-cint64",
    "node_c_plugin_helloword",
    "node-crc16",
    "node_crc_native",
    "node-crfpp",
    "node-datachannel",
    "node_detour",
    "node-dht-sensor",
    "node-dotakv",
    "node-expat",
    "node-expat-temporary",
    "node-factorial-cc",
    "node-firebird-native-api",
    "node-flatbuffers",
    "node-float-helpers",
    "node-fzy",
    "node-gdx",
    "nodegit",
    "node-gpgpu",
    "node-gyp-hello-world",
    "node-hdiffpatch",
    "node-hid",
    "nodehun",
    "nodejieba",
    "nodejs-addons-test",
    "nodejs-qmc5883l",
    "node-jvt",
    "node-kcp",
    "node-kcp-x",
    "node-libtidy",
    "node-libxml",
    "@node-lightning/secp256k1",
    "node-lmdb",
    "node_log_json_on_fatal",
    "node-mbed-dtls",
    "node-mbus",
    "node-memwatch-sfx",
    "node-monospace-fonts",
    "node-mozjpeg",
    "node-native-ocr",
    "node-navquery",
    "node-oom-heapdump",
    "node-openjtalk-binding",
    "node-opus",
    "node_or_tools",
    "node-os-calls",
    "@nodeos/node-ife",
    "node-pgparser",
    "node-pipe",
    "node-pipe2",
    "node-portmapping",
    "node-prevent-sleep",
    "node-prng",
    "node-process-watcher",
    "node-pty",
    "node-pty-binaries",
    "node-pty-prebuilt-multiarch",
    "node-qt-napi",
    "node-quirc",
    "node-rdkafka",
    "node-recastnavigation",
    "node-redis-crc16",
    "node-safari-push-notifications",
    "node-sass",
    "node-sass-test",
    "node-scrypt2",
    "node-snap7",
    "node-snowball",
    "node-spdlog-daily",
    "node-statvfs",
    "node-stomptalk",
    "node-stringbuilder",
    "node-sync-ipc",
    "node-sysstat",
    "node-termios",
    "node-tree-sitter-electron-arraybuffer",
    "node-uname",
    "node-vad",
    "node-wifi-info",
    "node-wow-mssql",
    "node-xed",
    "node-xxhash",
    "node-yolo-shinobi",
    "node-zopfli",
    "node-zopfli-es",
    "node-zopflipng",
    "@nomis51/robotjs",
    "@nordicsemiconductor/nrf-device-lib-js",
    "npmpkg_blvd_test1",
    "nrlmsise",
    "@nrwlia/enet-node",
    "nsfw",
    "nslog",
    "numnjs",
    "nuv",
    "nvcodec",
    "nvidia-codec",
    "nvidia-gpu-monitorx",
    "nwework-sdk",
    "@n.wolfe/scoped-test",
    "@nxtedition/rocksdb",
    "odbc",
    "ofe",
    "oniguruma",
    "oniguruma-prebuilt",
    "onsfw",
    "@opendrives/getent",
    "openssl-dtls",
    "orientjs-native",
    "os-lock",
    "osmbuildings-classic",
    "ospasta",
    "@oxyflour/ncc",
    "ozonep-nsfw",
    "@pacexy/robotjs",
    "@pano.video/robotjs",
    "@parcel/watcher",
    "@parcel~watcher",
    "paseto.js",
    "pathwatcher",
    "@paulcbetts/gc",
    "@paulcbetts/system-idle-time",
    "pcg-wrapper",
    "peercred",
    "pele",
    "pg-libpq",
    "@pg-nano/pg-parser",
    "pg-query-native",
    "phin-ecdh",
    "picha",
    "pi-spi",
    "@pitzzae/volume-list",
    "pixel-change",
    "pixels-please",
    "pjsua2",
    "pkcs11js",
    "pkg-meta",
    "platform-folders",
    "playcap",
    "plenteum-crypto",
    "@point3/dguard",
    "poke-opus",
    "poppler-native",
    "posix",
    "posix-clock",
    "posix-semaphore",
    "posix-socket",
    "posix_spawn",
    "postal-async",
    "postal-async-m1",
    "pprof",
    "prebuilt-example",
    "@primecode/async-qrcode",
    "primo-app-example",
    "private-symbol",
    "process-once.node",
    "profoundjs-node-pty",
    "promise-await",
    "prompt-simple",
    "@pubgcorp/node-xed",
    "@pugdag/process-list",
    "pulsar-client",
    "pulseaudio2",
    "pwuid",
    "qlobber-native",
    "qlzjs",
    "qqdevicecheck",
    "qrencode_mini",
    "@quanitux/nsfw",
    "@quan-to/chevronlib",
    "@quantumdag/process-list",
    "@quantumdag_/process-list",
    "querymimedb",
    "@qujingling/sqlite3",
    "qwertycoin-crypto",
    "rabin-native",
    "radialxml",
    "@raghb1/node-memwatch",
    "@rainblock/ethereum-block",
    "raknet-native",
    "rapid-crc",
    "rapidx2j",
    "ratty",
    "raw-socket",
    "@raygun-nickj/mmap-io",
    "raylib",
    "raytracer-node",
    "rdscpp",
    "rdtsc",
    "re2",
    "real-homedir",
    "reboot",
    "@reboot-dev/reboot",
    "@reconbot/bindings-cpp",
    "rectangle-bin-pack",
    "redis-fast-driver",
    "register-scheme",
    "reliance-dicom-dimse-native",
    "reset-date-cache",
    "reset-v8-timezone",
    "resin-crc-utils",
    "resumable-hash",
    "@rev-robotics/rhsplib",
    "rgb565_bmp",
    "@ripreact/hsl",
    "@risingstack/event-loop-stats",
    "@risingstack/gc-stats",
    "@robinsage/eccrypto",
    "robotjs",
    "robotjsfixed",
    "robotjsmonitor",
    "robotjs-repack",
    "@rocicorp/zero-sqlite3",
    "rpi-led-matrix",
    "rpio",
    "rpio-sunxi",
    "rpi-ws281x",
    "rpi-ws281x-native",
    "rsa-keypair",
    "runas-redux",
    "rusage2",
    "@rvagg/blake2",
    "safari-push-notifications",
    "@saleae/weak",
    "@sambhav-gautam/osmemoryallocator",
    "@samebchase/spellchecker",
    "sample-nodejs-function",
    "sane_aes128_cbc",
    "@sapphire/type",
    "@savearray2/py.js",
    "@savoirfairelinux/node-server-example",
    "@sbspk/forcefocus",
    "scalc-core",
    "scandir-native",
    "@schlameel/native-idle-time",
    "scrollbar-style",
    "sdl2-gamecontroller",
    "secp256k1",
    "secp256k1-native",
    "@sedracoin/process-list",
    "segfault-handler",
    "self-crypto",
    "@sematext/gc-stats",
    "@sentry-internal/node-cpu-profiler",
    "@sequencework/tfjs-node",
    "serenade-driver",
    "@sergiou87/fs-admin-temp",
    "@serialport/bindings",
    "sevruga",
    "shacrypt",
    "shannon-bindings",
    "shared-node-buffer",
    "sharp-lite",
    "shm-typed-array",
    "shorter",
    "@shroudedcode/hx711",
    "shuriken-fs",
    "shxt.serialport.bindings",
    "sigignore",
    "sign-pkcs7",
    "silk-sdk",
    "simdjson",
    "simple_c_parser",
    "@sirherobrine23/cppzst",
    "skia-n-api",
    "sleep",
    "@sleipnirgroup/trajoptlib",
    "@slimio/micro",
    "smash-synthserial",
    "@snek/private",
    "socketcan",
    "socketwatcher",
    "sockopt",
    "sodium",
    "sodium-native",
    "@soruly/opencv4nodejs-prebuilt",
    "@sosuisen/nodegit",
    "source-maps",
    "spdlog",
    "spellchecker",
    "spi-device",
    "spi-node",
    "sqlite3",
    "sqlite3-electron",
    "sqlite3-rebuilt",
    "sqlite3-sync",
    "sq-native",
    "sse4_crc32",
    "stagekit",
    "stompica",
    "@stoneydsp/cmodule",
    "strong-ursa",
    "@suger-tdy/usb-detection",
    "@suldashi/lame",
    "@suldashi/node-opus",
    "@suldashi/ogg",
    "@suldashi/weak",
    "sumaddon-publish",
    "svmq",
    "@swimm/tree-sitter-ruby",
    "swisseph",
    "swisseph-v2",
    "symbology",
    "synchronous-worker",
    "syncprompt",
    "sync-runner",
    "@syndicats/drivelist",
    "system-time",
    "@szeah27/audify",
    "t12-parser",
    "talib",
    "talkspirit-spellchecker",
    "tcp-netx",
    "tdlib-native",
    "tdl-tdlib-addon",
    "tdy-drivelist",
    "tea-napi",
    "@tech9app/whisper.js",
    "@techainer1t/torch-js",
    "@tensorflow/tfjs-node",
    "@tensorflow/tfjs-node-gpu",
    "@terminus-term/node-pty",
    "termios-fixedv12",
    "test-1638-world",
    "test-addons",
    "test_addon_simple_hello",
    "@theia/node-pty",
    "@thlorenz/function-origin",
    "thmclrx",
    "@three-em/node",
    "tiff-multipage",
    "@tludlow-instana-fork/autoprofile",
    "@todesktop/robotjs-prebuild",
    "@tonclient/lib-node",
    "traaittplatform-crypto",
    "@traaittplatform/traaittplatform-crypto",
    "transparent-titlebar",
    "@trbll/nodeimu",
    "tree-sitter",
    "tree-sitter-4dm",
    "tree-sitter-4dxml",
    "tree-sitter-a",
    "tree-sitter-agda",
    "tree-sitter-ags-script",
    "tree-sitter-alanguage",
    "tree-sitter-amcl",
    "tree-sitter-biber",
    "tree-sitter-bliss",
    "tree-sitter-bogl",
    "tree-sitter-brainfuck",
    "tree-sitter-carp",
    "tree-sitter-chialisp",
    "tree-sitter-cm",
    "tree-sitter-cmm",
    "tree-sitter-coccinelle",
    "tree-sitter-codelink",
    "tree-sitter-compat",
    "tree-sitter-cycle",
    "tree-sitter-decisiongraph",
    "tree-sitter-deltinscript",
    "tree-sitter-delve-language",
    "tree-sitter-dot",
    "tree-sitter-dune",
    "tree-sitter-edl",
    "tree-sitter-ekon",
    "tree-sitter-elm",
    "tree-sitter-eu4mod",
    "tree-sitter-firrtl",
    "tree-sitter-foobar",
    "tree-sitter-fquest",
    "tree-sitter-frisc",
    "tree-sitter-fuior",
    "tree-sitter-func",
    "tree-sitter-gcl",
    "tree-sitter-gleam",
    "tree-sitter-hacklang",
    "tree-sitter-haiku",
    "tree-sitter-hclrs",
    "tree-sitter-hit",
    "tree-sitter-hla-assembly",
    "tree-sitter-howl",
    "tree-sitter-i",
    "tree-sitter-igor",
    "tree-sitter-janet",
    "tree-sitter-java-dev",
    "tree-sitter-jinja2",
    "tree-sitter-kos",
    "tree-sitter-kpl",
    "tree-sitter-kv1",
    "tree-sitter-langx",
    "tree-sitter-lcs",
    "tree-sitter-legesher-python",
    "tree-sitter-libretto",
    "tree-sitter-lisp",
    "tree-sitter-lll",
    "tree-sitter-lox",
    "tree-sitter-lua",
    "tree-sitter-lux",
    "tree-sitter-mela",
    "tree-sitter-menhir",
    "tree-sitter-mgd",
    "tree-sitter-minecraft",
    "tree-sitter-mlir",
    "tree-sitter-moje",
    "tree-sitter-mse",
    "tree-sitter-naz",
    "tree-sitter-notlang",
    "tree-sitter-nova",
    "tree-sitter-nwscript",
    "tree-sitter-o",
    "tree-sitter-parageo",
    "tree-sitter-parageotest",
    "tree-sitter-pascalabcnet",
    "tree-sitter-pokus",
    "tree-sitter-policyspace",
    "tree-sitter-poweron",
    "tree-sitter-prisma",
    "tree-sitter-prolog",
    "tree-sitter-proverif",
    "tree-sitter-prowseassembly",
    "tree-sitter-pts",
    "tree-sitter-ql",
    "tree-sitter-quik",
    "tree-sitter-random",
    "tree-sitter-regent",
    "tree-sitter-regex-js",
    "tree-sitter-regex-unicode-js",
    "tree-sitter-reqspec",
    "tree-sitter-ride",
    "tree-sitter-scl",
    "tree-sitter-skusamsi",
    "tree-sitter-skuskam",
    "tree-sitter-souffle",
    "tree-sitter-sourcepawn",
    "tree-sitter-sparql",
    "tree-sitter-spiral",
    "tree-sitter-st",
    "tree-sitter-start",
    "tree-sitter-storylang",
    "tree-sitter-structured-text",
    "tree-sitter-svelte",
    "tree-sitter-syncat-stylesheet",
    "tree-sitter-systemrdl",
    "tree-sitter-tablatal",
    "tree-sitter-tanuki",
    "tree-sitter-term",
    "tree-sitter-todo-full",
    "tree-sitter-toml",
    "tree-sitter-tony",
    "tree-sitter-tspec",
    "tree-sitter-turbowave",
    "tree-sitter-turtle",
    "tree-sitter-v",
    "tree-sitter-valueinference",
    "tree-sitter-vcd",
    "tree-sitter-verilog",
    "tree-sitter-vue",
    "tree-sitter-w",
    "tree-sitter-wake",
    "tree-sitter-waveasm",
    "tree-sitter-wdl",
    "tree-sitter-yaml",
    "tree-sitter-yul",
    "tree-sitter-zig",
    "trend_app_protect",
    "ttf2woff2",
    "@tuananh/sax-parser",
    "tulind",
    "turbo-net",
    "turbo-net-clusterable",
    "@turtlecoin/crypto",
    "turtlecoin-crypto",
    "@tzmedical/trident-sdk",
    "ucp",
    "udev",
    "udx-native-nodejs-mobile",
    "u-framework",
    "ultradb",
    "@ulycess/c_parser",
    "unix-dgram",
    "unix-dgram-socket",
    "unix-socketpair",
    "@unrest/form",
    "ursa-optional",
    "usb",
    "usb-detection",
    "userid",
    "usm-decrypter",
    "usocket",
    "utf-8-validate",
    "utimes",
    "utp-native",
    "utp-native-no-prebuild",
    "utp-solyd",
    "utun",
    "uv-poll",
    "uv-run",
    "uvrun-12",
    "v8-profiler-next",
    "v8-sandbox",
    "valgrind-client-request",
    "vcd-stream",
    "@vgrid/x509",
    "@vhs/node-nfc-nci",
    "@vit1251/napi_sdl2",
    "@vlasky/shacrypt",
    "vmdetect",
    "@votingworks/qrdetect",
    "vscode-nsfw",
    "vscode-sqlite3",
    "w2encdec",
    "wakanda-storage",
    "walkdir-fast",
    "@wangjuncode/binary-test",
    "wasi",
    "wdeasync",
    "weak-napi",
    "weak-value-map",
    "webbluetooth",
    "webrtcvad",
    "westfield-native",
    "wework-chat-node",
    "wifi-network",
    "wise-inspection",
    "@wmakeev/borders-detection",
    "word2vec4node",
    "wordexp",
    "ws2812draw",
    "wson-addon",
    "@wwa/statvfs",
    "wxaes-node",
    "xattr-async",
    "xdelta-async-nodejs-addon",
    "xd-synchttp",
    "@xiaobaidadada/node-pty-prebuilt",
    "@xiaobaidadada/node-tuntap2-wintun",
    "@xiaobaidadada/ssh2-prebuilt",
    "xiaomi-wristband-decoder",
    "xlsxio-node",
    "xlsx-util",
    "xlsys-node-study-greeting",
    "xlsys-node-study-hello",
    "xoshiro",
    "xprofiler",
    "xrtlibrary-ip-utilities",
    "x-semaphore",
    "xtcpforwarder",
    "xxhash-addon",
    "xz",
    "@y2zz/sharp",
    "@yaguara/dd-trace",
    "@yaming116/node-memwatch",
    "@yang8guang/npm-test100",
    "@ycanince/bluetooth-hci-socket",
    "@ycanince/sqlite3",
    "yencode",
    "@yosiat/stack-frames",
    "yrp",
    "@ytsteven2/robotjs",
    "zadeh",
    "zentcash-crypto",
    "zlib-organic",
    "zlib-sync",
    "zookeeper",
    "zucc"
  ],
  "packages_different_bridges": [
    "0x-monorepo-development",
    "@131/sqlite3",
    "@2048k/evm-node",
    "@2060.io/ffi-napi",
    "@3xpo/argon2",
    "@6river/sqlite3",
    "@abandonware/bluetooth-hci-socket",
    "abletonlink",
    "abletonlink-addon",
    "addonie",
    "aerospike",
    "ailoy-node",
    "@aimelo/lua",
    "@airbnb/node-memwatch",
    "@akimasa/vscode-sqlite3",
    "@akiroz/bluetooth-hci-socket",
    "@alac/decoder",
    "@alac/encoder",
    "@alminde/tfjs-node",
    "alsa-capture",
    "@amoo-miki/node-sass",
    "am_turbo-net",
    "a-napi-example",
    "@animetosho/parpar",
    "annoy",
    "annoy-node",
    "@antimatterhq/antimatter",
    "@apocentre/xoshiro",
    "apoxusbcan",
    "applicationinsights-native-metrics",
    "@appoptics/apm-bindings",
    "argon2",
    "@arition/torch-js",
    "ascom-verdaccio",
    "@asdftempfix/serialport-bindings",
    "@ashok_gujjar92/symbology_18",
    "async-ioctl",
    "@ataberkylmz/hx711",
    "atomic-counters",
    "atomium",
    "@atom/nsfw",
    "@audc/libsamplerate",
    "audify",
    "audio-processing",
    "@automattic/yara",
    "availvideobuffer",
    "awe-sqlite3",
    "@axosoft/spellchecker",
    "@b2wads/lru-native2",
    "@baliset/mmap-io",
    "bcrypto",
    "bcrypt-small",
    "bdb",
    "better-sqlite3",
    "better-sqlite3-multiple-ciphers",
    "bfast-cloud",
    "bfast-database",
    "bglobal-signal",
    "bigint-buffer",
    "bigint-hash",
    "bignum",
    "bkjs-sqlite",
    "bkjs-wand",
    "bktree-fast",
    "blake2",
    "blake-hash",
    "bling-hashes",
    "bodmas",
    "bole-first-test",
    "boost-geospatial-index",
    "@breush/ref-napi",
    "bson-ext",
    "@buckyos/node-kcp",
    "@buckyos/socketwatcher",
    "buffer2address",
    "bufferutil",
    "@bugsnag/plugin-electron-app",
    "@bugsnag/plugin-electron-client-state-persistence",
    "buildthing-bluetooth-hci-socket",
    "bungle",
    "caki",
    "@calculux/connector",
    "caliban",
    "@camol/file-lock",
    "canvas-mirror",
    "canvas-termuc",
    "canvas-zj-node-v1",
    "casclib",
    "catboost",
    "catboost-model",
    "@cathodique/mmap-io",
    "@cathodique/usocket",
    "cbor-extract",
    "@cbrewster/luna",
    "@cdktf/node-pty-prebuilt-multiarch",
    "ced",
    "@celtium/doge-idle-time",
    "chacent",
    "checkpromise",
    "child_process_tiny",
    "ckmeans-native",
    "c-kzg",
    "classic-level",
    "cld",
    "clear-env",
    "clipboard-data",
    "@cloudpss/zstd",
    "cm256",
    "cmark-gfm",
    "cmsn-bluetooth-hci-socket",
    "@codspeed/core",
    "computron",
    "@confluentinc/kafka-javascript",
    "confusablematcher-js-interop",
    "@connectedyard/phin-ecdh",
    "@conr2d/bcrypto",
    "@contrast/agent-lib",
    "@contrast/code-events",
    "@contrast/distringuish",
    "@contrast/distringuish-prebuilt",
    "@contrast/fn-inspect",
    "@contrast/stash",
    "@corbinu/couchbase",
    "corelink-trail-smoothifier",
    "corona-school-matching",
    "cozo-node",
    "cppzst",
    "crc64cpp",
    "crfsuite",
    "crypt3-passwd",
    "cryptian",
    "@cryptlex/lexactivator",
    "@cryptlex/lexfloatclient",
    "ctags",
    "@cubbit/enigma",
    "cubiomes",
    "cue-sdk",
    "cue-sdk-cove",
    "@curlconverter/tree-sitter-bash",
    "curve25519-n",
    "cypher.js",
    "darknet-bindings",
    "data-ann-native-addon-test",
    "@datadog/native-iast-taint-tracking",
    "@datadog/native-metrics",
    "@datadog/pprof",
    "dblogger",
    "dbus",
    "deadline-math",
    "deasync",
    "debstep",
    "decimal102",
    "decoder1090-c",
    "deltachat-node",
    "deps-verdaccio",
    "desktopshortcuts",
    "@desktop.vision/libnut-linux",
    "detect-character-encoding",
    "@dhruvit_r/pathwatcher",
    "dicom-dimse-native",
    "dicom-to-json",
    "discord-game",
    "@discordjs/opus",
    "@dooub/rocksdb-nodejs",
    "@duck4i/llama",
    "duckdb",
    "dvbtee",
    "dylib",
    "easybotics-rpi-rgb-led-matrix",
    "easy-sleep",
    "@ecervo/canvas",
    "ed25519-supercop",
    "efsw",
    "@elchetz/cld",
    "ele-500-sql3",
    "ele6-sqlite3",
    "@eleccookie/ref-napi",
    "electron-active-window",
    "electron-overlay-window",
    "embeddable-wg",
    "ems",
    "enhanced_promise",
    "@eosrio/node-abieos",
    "@epaperjs/rpi-2in13-bc",
    "@episensor/bluetooth-hci-socket",
    "epoll",
    "equate",
    "@ericvanwyk/tree-sitter-oberon0",
    "eris-profiler",
    "eris-sleep",
    "eris-snapshot",
    "essy-fft",
    "essy-nnls",
    "@eth-optimism/ganache-cli",
    "evdev",
    "event-loop-native",
    "@evolvingriley/file-upload",
    "faiss-napi",
    "faiss-node",
    "@faressoft/node-pty-prebuilt",
    "fast-bigint",
    "fast-is-utf8",
    "fastnoisejs",
    "fastpug",
    "fast-string-search",
    "fasttail",
    "fasttext",
    "fast-uuidv4",
    "fd-lock",
    "fdpassing",
    "@felixrieseberg/spellchecker",
    "ffi-napi-v22",
    "fileworkbyaleksbelka",
    "finalize-addon",
    "find-git-repositories",
    "fixed-node-canvas",
    "flatbuffers-addon",
    "@flat/lame",
    "flock-rs",
    "flocon-new",
    "@floffah/node-memwatch",
    "floweejs",
    "flush-all",
    "frankda-newrelic-native-metrics",
    "frog-jump-master",
    "fsctl",
    "fs-extended-attributes",
    "@fsiot/heatshrink",
    "fstime",
    "fs-xattr",
    "fullname-native",
    "fuzzaldrin-plus-fast",
    "ganache-cli",
    "@ganeshmogare/bodmas",
    "gc-watch",
    "gdal-async",
    "generate-rsa-keypair",
    "genx",
    "git-utils",
    "gl",
    "@glaced/gles2-2.0",
    "@glaced/glfw",
    "gl-client",
    "glfw-n-api",
    "glpk",
    "@gnaudio/jabra-node-sdk",
    "@goblinalchemist/nodejieba",
    "goosig",
    "go-text-template-napi",
    "gphoto2",
    "gpt4all",
    "@graphprotocol/indexer-native",
    "grpc",
    "grpc-patch",
    "grpc-zjl",
    "gssapi.js",
    "h3-node",
    "haddley-factorial-cc",
    "@haggholm/damerau-levenshtein",
    "happy-birthday-vipyne",
    "hargument",
    "hca-decoder",
    "hci-socket",
    "hello-addon",
    "hello-hiro",
    "hello-hiro-js",
    "hello_publishing-native-pre-gyp",
    "@hfelix/spellchecker",
    "hhello",
    "hidden-machine-example-http",
    "highwayhash",
    "hikopenapi-node",
    "@homebridge/node-pty-prebuilt-multiarch",
    "@howlin/bluetooth-hci-socket",
    "hs-miner",
    "huskee-install",
    "hwrap",
    "hybrixd",
    "ibm_db",
    "@ibsolution/hana-client-promise",
    "@icebob/node-memwatch",
    "@ices/node-addons-callbacks",
    "@ices/node-addons-hello",
    "iconv",
    "icu-transliterator",
    "@ifabos/kerberos",
    "@ikonopistsev/node-rapidjson",
    "@ilb/posix",
    "iltorb",
    "ingescape",
    "inotify-remastered",
    "int64-transform",
    "interruptor",
    "ioctl-napi",
    "ioctl-native",
    "@ionic/node-pty-prebuilt",
    "@ipshipyard/node-datachannel",
    "isolated-vm",
    "is-valid-window",
    "@itsananderson/electron-sqlite3",
    "@jamesernator/weakref",
    "@jeeyah/nodeortools",
    "@jeff-tian/sleep",
    "jittertrng",
    "@joeblanchard/tree-sitter-ablec",
    "@joeblanchard/tree-sitter-ablec4pts",
    "@joeblanchard/tree-sitter-ablec4ptsdemo",
    "@joeblanchard/tree-sitter-oberon0",
    "@joergmittaglawo/dmvconfig",
    "jsgui3-gfx-server",
    "js-native-ternary-buffer-tree",
    "@jsxt/weakref",
    "@junsiklee/vscode-sqlite3",
    "keccak",
    "kerberos",
    "keyboard-layout",
    "klsudoku",
    "@kmamal/gl",
    "@knagyorg/node-firebird-native-api",
    "kociemba",
    "@kore/net",
    "koru",
    "kuzu",
    "lame-private-no-maintainence-shrug2",
    "language-act-r",
    "@lastos/dbus",
    "lbj_process_addon",
    "ldll",
    "left-clicky",
    "leo-test-cpp-module",
    "leveldown",
    "leveldown-nodejs-mobile",
    "@lgeiger/napi-prebuild-starter",
    "libmaxminddb",
    "libpq",
    "libraw.js",
    "libtidy",
    "libtidy-updated",
    "libxml2-nodejs",
    "libxmljs",
    "libxmljs2",
    "@lifbi_tbt/win-audio",
    "lightning-spell",
    "linux-device",
    "linux-devnode",
    "linux-perf",
    "linux-xorg-screencapture",
    "litl-parser",
    "live-elements-js-compiler",
    "lodepng",
    "@lotuz/jsminify",
    "lp_solve",
    "lru-native2",
    "lru-node-addon",
    "ls-trace",
    "luckzhiwei-lib",
    "@luminati-io/mmap-io",
    "@lydiaswap/lydia-swap-periphery",
    "lymui-node",
    "lzma-native",
    "lzo",
    "lzo-decompress",
    "malgo",
    "@mapbox/vtquery",
    "@mapbox/vtvalidate",
    "@markusjx/shared_memory",
    "@markusjx/shared_mutex",
    "@marshallofsound/native-keymap",
    "@mateuszzajacs/bindings",
    "@mathquis/crfsuite",
    "@mathquis/node-gist",
    "@mathquis/node-snowboy",
    "matrix-seshat-prebuild",
    "mc-nodegit",
    "mcrypt",
    "megahash",
    "@meteorjs/pathwatcher",
    "@meza/curseforge-fingerprint",
    "mg-dbx",
    "@microcode/canary",
    "microvium",
    "midi",
    "midi-test",
    "minipg",
    "minisqlite",
    "mishiro-core",
    "mker",
    "mmap-mio",
    "@modum-io/bluetooth-hci-socket",
    "mongodb-client-encryption",
    "mongo-dbx",
    "@movable/hash_ring",
    "@movei/tree-sitter-move",
    "mp4decrypt-buffer",
    "mp4decryptjs",
    "mpzjs",
    "mrmr",
    "ms-flakeless",
    "msgpackr-extract",
    "msoconv",
    "mt-plugin-test",
    "mt-test-node-02",
    "@muchmore/opus",
    "muhammara",
    "muhash",
    "murmurhash-native",
    "mutou-node-plugin",
    "mutou-test-node-01",
    "mv-exchange",
    "myf-napi-example",
    "nan-async-example",
    "@nandoide/tree-sitter-thinp",
    "nan-hello-world",
    "@nanomatic/rpio",
    "nanosecond-timer",
    "napi-addon-fdtd",
    "napi-oniguruma",
    "napi-spellchecker",
    "napi_stb_image",
    "native-capture-js",
    "native-cypher",
    "native-fork",
    "native-hdr-histogram",
    "native-hello-world",
    "native-is-elevated",
    "native-keymap",
    "native-linked-list",
    "native-screen-js",
    "native-trie",
    "native-watchdog",
    "naudiodon",
    "@nbisigna/scramble",
    "nc-screen",
    "net-runner-engine",
    "nice-napi",
    "nlibcurl",
    "@nlv8/signun",
    "@nmarks/dd-trace",
    "nodeaffinity",
    "node-alsa-cardinfo",
    "node-base92",
    "node-calls-python",
    "node-canal",
    "node-cint64",
    "node_crc_native",
    "node-crfpp",
    "node-datachannel",
    "node_detour",
    "node-dotakv",
    "node-expat",
    "node-expat-temporary",
    "node-firebird-native-api",
    "node-float-helpers",
    "node-fzy",
    "node-gdx",
    "nodegit",
    "node-gpgpu",
    "node-hdiffpatch",
    "node-hid",
    "nodehun",
    "nodejieba",
    "node-jvt",
    "node-kcp",
    "node-kcp-x",
    "node-libtidy",
    "node-libxml",
    "@node-lightning/secp256k1",
    "node-lmdb",
    "node-mbed-dtls",
    "node-mbus",
    "node-memwatch-sfx",
    "node-mozjpeg",
    "node-navquery",
    "node-opus",
    "node_or_tools",
    "@nodeos/node-ife",
    "node-portmapping",
    "node-prevent-sleep",
    "node-prng",
    "node-pty",
    "node-pty-binaries",
    "node-pty-prebuilt-multiarch",
    "node-qt-napi",
    "node-rdkafka",
    "node-recastnavigation",
    "node-sass",
    "node-sass-test",
    "node-snap7",
    "node-spdlog-daily",
    "node-stomptalk",
    "node-stringbuilder",
    "node-sync-ipc",
    "node-sysstat",
    "node-tree-sitter-electron-arraybuffer",
    "node-uname",
    "node-wow-mssql",
    "node-xxhash",
    "node-yolo-shinobi",
    "node-zopfli",
    "node-zopfli-es",
    "@nordicsemiconductor/nrf-device-lib-js",
    "nrlmsise",
    "@nrwlia/enet-node",
    "nsfw",
    "nuv",
    "nvcodec",
    "nvidia-codec",
    "nvidia-gpu-monitorx",
    "nwework-sdk",
    "@n.wolfe/scoped-test",
    "@nxtedition/rocksdb",
    "odbc",
    "oniguruma",
    "oniguruma-prebuilt",
    "onsfw",
    "openssl-dtls",
    "os-lock",
    "@oxyflour/ncc",
    "ozonep-nsfw",
    "pathwatcher",
    "@paulcbetts/gc",
    "@paulcbetts/system-idle-time",
    "pele",
    "pg-libpq",
    "@pg-nano/pg-parser",
    "phin-ecdh",
    "picha",
    "@pitzzae/volume-list",
    "pixel-change",
    "pixels-please",
    "pkcs11js",
    "pkg-meta",
    "platform-folders",
    "playcap",
    "poke-opus",
    "posix",
    "posix-semaphore",
    "posix-socket",
    "prebuilt-example",
    "primo-app-example",
    "process-once.node",
    "profoundjs-node-pty",
    "promise-await",
    "pulsar-client",
    "pulseaudio2",
    "pwuid",
    "qlobber-native",
    "qqdevicecheck",
    "qrencode_mini",
    "@quanitux/nsfw",
    "querymimedb",
    "@qujingling/sqlite3",
    "rabin-native",
    "radialxml",
    "@raghb1/node-memwatch",
    "@rainblock/ethereum-block",
    "raknet-native",
    "raw-socket",
    "@raygun-nickj/mmap-io",
    "rdtsc",
    "re2",
    "@reconbot/bindings-cpp",
    "redis-fast-driver",
    "register-scheme",
    "reliance-dicom-dimse-native",
    "resumable-hash",
    "@rev-robotics/rhsplib",
    "rgb565_bmp",
    "@ripreact/hsl",
    "@rocicorp/zero-sqlite3",
    "rpi-led-matrix",
    "rpio",
    "rpio-sunxi",
    "rpi-ws281x",
    "rsa-keypair",
    "rusage2",
    "@sambhav-gautam/osmemoryallocator",
    "@samebchase/spellchecker",
    "sample-nodejs-function",
    "sane_aes128_cbc",
    "@savearray2/py.js",
    "@savoirfairelinux/node-server-example",
    "scalc-core",
    "scandir-native",
    "scrollbar-style",
    "sdl2-gamecontroller",
    "secp256k1",
    "secp256k1-native",
    "self-crypto",
    "@sentry-internal/node-cpu-profiler",
    "@sequencework/tfjs-node",
    "@serialport/bindings",
    "sevruga",
    "shannon-bindings",
    "sharp-lite",
    "@shroudedcode/hx711",
    "shxt.serialport.bindings",
    "sigignore",
    "silk-sdk",
    "simdjson",
    "simple_c_parser",
    "@sirherobrine23/cppzst",
    "skia-n-api",
    "@sleipnirgroup/trajoptlib",
    "smash-synthserial",
    "@snek/private",
    "socketcan",
    "socketwatcher",
    "sodium",
    "sodium-native",
    "@soruly/opencv4nodejs-prebuilt",
    "@sosuisen/nodegit",
    "source-maps",
    "spdlog",
    "spellchecker",
    "sqlite3",
    "sqlite3-electron",
    "sqlite3-rebuilt",
    "sqlite3-sync",
    "sq-native",
    "sse4_crc32",
    "strong-ursa",
    "@suldashi/lame",
    "@suldashi/node-opus",
    "@swimm/tree-sitter-ruby",
    "symbology",
    "synchronous-worker",
    "system-time",
    "@szeah27/audify",
    "t12-parser",
    "talkspirit-spellchecker",
    "tcp-netx",
    "tdlib-native",
    "tea-napi",
    "@techainer1t/torch-js",
    "@tensorflow/tfjs-node",
    "@tensorflow/tfjs-node-gpu",
    "@terminus-term/node-pty",
    "test-addons",
    "test_addon_simple_hello",
    "@theia/node-pty",
    "@three-em/node",
    "@tludlow-instana-fork/autoprofile",
    "@tonclient/lib-node",
    "transparent-titlebar",
    "@trbll/nodeimu",
    "tree-sitter",
    "tree-sitter-4dm",
    "tree-sitter-4dxml",
    "tree-sitter-a",
    "tree-sitter-agda",
    "tree-sitter-ags-script",
    "tree-sitter-alanguage",
    "tree-sitter-amcl",
    "tree-sitter-biber",
    "tree-sitter-bliss",
    "tree-sitter-bogl",
    "tree-sitter-brainfuck",
    "tree-sitter-carp",
    "tree-sitter-chialisp",
    "tree-sitter-cm",
    "tree-sitter-cmm",
    "tree-sitter-coccinelle",
    "tree-sitter-codelink",
    "tree-sitter-cycle",
    "tree-sitter-decisiongraph",
    "tree-sitter-deltinscript",
    "tree-sitter-delve-language",
    "tree-sitter-dot",
    "tree-sitter-dune",
    "tree-sitter-edl",
    "tree-sitter-ekon",
    "tree-sitter-elm",
    "tree-sitter-eu4mod",
    "tree-sitter-firrtl",
    "tree-sitter-foobar",
    "tree-sitter-fquest",
    "tree-sitter-frisc",
    "tree-sitter-fuior",
    "tree-sitter-func",
    "tree-sitter-gcl",
    "tree-sitter-gleam",
    "tree-sitter-hacklang",
    "tree-sitter-haiku",
    "tree-sitter-hclrs",
    "tree-sitter-hit",
    "tree-sitter-hla-assembly",
    "tree-sitter-howl",
    "tree-sitter-i",
    "tree-sitter-igor",
    "tree-sitter-janet",
    "tree-sitter-java-dev",
    "tree-sitter-jinja2",
    "tree-sitter-kos",
    "tree-sitter-kpl",
    "tree-sitter-kv1",
    "tree-sitter-langx",
    "tree-sitter-lcs",
    "tree-sitter-legesher-python",
    "tree-sitter-libretto",
    "tree-sitter-lisp",
    "tree-sitter-lll",
    "tree-sitter-lox",
    "tree-sitter-lua",
    "tree-sitter-lux",
    "tree-sitter-mela",
    "tree-sitter-menhir",
    "tree-sitter-mgd",
    "tree-sitter-minecraft",
    "tree-sitter-mlir",
    "tree-sitter-moje",
    "tree-sitter-mse",
    "tree-sitter-naz",
    "tree-sitter-notlang",
    "tree-sitter-nova",
    "tree-sitter-nwscript",
    "tree-sitter-o",
    "tree-sitter-parageo",
    "tree-sitter-parageotest",
    "tree-sitter-pascalabcnet",
    "tree-sitter-pokus",
    "tree-sitter-policyspace",
    "tree-sitter-poweron",
    "tree-sitter-prisma",
    "tree-sitter-prolog",
    "tree-sitter-proverif",
    "tree-sitter-prowseassembly",
    "tree-sitter-pts",
    "tree-sitter-ql",
    "tree-sitter-quik",
    "tree-sitter-random",
    "tree-sitter-regent",
    "tree-sitter-regex-js",
    "tree-sitter-regex-unicode-js",
    "tree-sitter-reqspec",
    "tree-sitter-ride",
    "tree-sitter-scl",
    "tree-sitter-skusamsi",
    "tree-sitter-skuskam",
    "tree-sitter-souffle",
    "tree-sitter-sourcepawn",
    "tree-sitter-sparql",
    "tree-sitter-spiral",
    "tree-sitter-st",
    "tree-sitter-start",
    "tree-sitter-storylang",
    "tree-sitter-structured-text",
    "tree-sitter-svelte",
    "tree-sitter-syncat-stylesheet",
    "tree-sitter-systemrdl",
    "tree-sitter-tablatal",
    "tree-sitter-tanuki",
    "tree-sitter-term",
    "tree-sitter-todo-full",
    "tree-sitter-toml",
    "tree-sitter-tony",
    "tree-sitter-tspec",
    "tree-sitter-turbowave",
    "tree-sitter-turtle",
    "tree-sitter-v",
    "tree-sitter-valueinference",
    "tree-sitter-vcd",
    "tree-sitter-verilog",
    "tree-sitter-vue",
    "tree-sitter-w",
    "tree-sitter-wake",
    "tree-sitter-waveasm",
    "tree-sitter-wdl",
    "tree-sitter-yaml",
    "tree-sitter-yul",
    "tree-sitter-zig",
    "trend_app_protect",
    "@tuananh/sax-parser",
    "tulind",
    "turbo-net",
    "turbo-net-clusterable",
    "@turtlecoin/crypto",
    "ucp",
    "udev",
    "udx-native-nodejs-mobile",
    "u-framework",
    "ultradb",
    "@ulycess/c_parser",
    "unix-socketpair",
    "@unrest/form",
    "ursa-optional",
    "usb",
    "userid",
    "usm-decrypter",
    "usocket",
    "utf-8-validate",
    "utp-native",
    "utp-native-no-prebuild",
    "utp-solyd",
    "utun",
    "uv-poll",
    "v8-profiler-next",
    "v8-sandbox",
    "vcd-stream",
    "@vit1251/napi_sdl2",
    "vmdetect",
    "vscode-nsfw",
    "vscode-sqlite3",
    "wakanda-storage",
    "walkdir-fast",
    "wasi",
    "wdeasync",
    "weak-napi",
    "weak-value-map",
    "webbluetooth",
    "webrtcvad",
    "westfield-native",
    "wework-chat-node",
    "word2vec4node",
    "wordexp",
    "ws2812draw",
    "wson-addon",
    "wxaes-node",
    "xd-synchttp",
    "@xiaobaidadada/node-pty-prebuilt",
    "@xiaobaidadada/node-tuntap2-wintun",
    "@xiaobaidadada/ssh2-prebuilt",
    "xiaomi-wristband-decoder",
    "xlsxio-node",
    "xlsx-util",
    "xoshiro",
    "xprofiler",
    "xrtlibrary-ip-utilities",
    "x-semaphore",
    "xtcpforwarder",
    "xxhash-addon",
    "xz",
    "@yaguara/dd-trace",
    "@yaming116/node-memwatch",
    "@yang8guang/npm-test100",
    "@ycanince/bluetooth-hci-socket",
    "@ycanince/sqlite3",
    "yrp",
    "zadeh",
    "zlib-organic",
    "zlib-sync",
    "zookeeper",
    "zucc"
  ],
  "packages_jsxray_more": [
    "0x-monorepo-development",
    "@2048k/evm-node",
    "@2060.io/ffi-napi",
    "@3xpo/argon2",
    "@abandonware/bluetooth-hci-socket",
    "abletonlink",
    "abletonlink-addon",
    "addonie",
    "aerospike",
    "ailoy-node",
    "@aimelo/lua",
    "@airbnb/node-memwatch",
    "@akiroz/bluetooth-hci-socket",
    "@alac/decoder",
    "@alac/encoder",
    "@alminde/tfjs-node",
    "alsa-capture",
    "am_turbo-net",
    "a-napi-example",
    "@animetosho/parpar",
    "annoy",
    "annoy-node",
    "@antimatterhq/antimatter",
    "@apocentre/xoshiro",
    "argon2",
    "@arition/torch-js",
    "ascom-verdaccio",
    "@ashok_gujjar92/symbology_18",
    "async-ioctl",
    "@ataberkylmz/hx711",
    "atomic-counters",
    "atomium",
    "@atom/nsfw",
    "@audc/libsamplerate",
    "audify",
    "audio-processing",
    "@automattic/yara",
    "availvideobuffer",
    "awe-sqlite3",
    "@axosoft/spellchecker",
    "@b2wads/lru-native2",
    "@baliset/mmap-io",
    "bcrypto",
    "bcrypt-small",
    "bdb",
    "better-sqlite3",
    "better-sqlite3-multiple-ciphers",
    "bfast-cloud",
    "bfast-database",
    "bglobal-signal",
    "bigint-buffer",
    "bigint-hash",
    "bignum",
    "bkjs-wand",
    "bktree-fast",
    "blake2",
    "blake-hash",
    "bling-hashes",
    "bodmas",
    "bole-first-test",
    "boost-geospatial-index",
    "@breush/ref-napi",
    "bson-ext",
    "@buckyos/node-kcp",
    "@buckyos/socketwatcher",
    "buffer2address",
    "bufferutil",
    "@bugsnag/plugin-electron-app",
    "@bugsnag/plugin-electron-client-state-persistence",
    "buildthing-bluetooth-hci-socket",
    "bungle",
    "caki",
    "@calculux/connector",
    "caliban",
    "@camol/file-lock",
    "canvas-mirror",
    "canvas-termuc",
    "canvas-zj-node-v1",
    "casclib",
    "catboost",
    "catboost-model",
    "@cathodique/mmap-io",
    "@cathodique/usocket",
    "cbor-extract",
    "@cbrewster/luna",
    "@cdktf/node-pty-prebuilt-multiarch",
    "ced",
    "@celtium/doge-idle-time",
    "chacent",
    "checkpromise",
    "child_process_tiny",
    "ckmeans-native",
    "c-kzg",
    "classic-level",
    "cld",
    "clear-env",
    "clipboard-data",
    "@cloudpss/zstd",
    "cm256",
    "cmark-gfm",
    "cmsn-bluetooth-hci-socket",
    "@codspeed/core",
    "computron",
    "@confluentinc/kafka-javascript",
    "confusablematcher-js-interop",
    "@connectedyard/phin-ecdh",
    "@conr2d/bcrypto",
    "@contrast/agent-lib",
    "@contrast/code-events",
    "@contrast/distringuish",
    "@contrast/distringuish-prebuilt",
    "@contrast/fn-inspect",
    "@contrast/stash",
    "@corbinu/couchbase",
    "corelink-trail-smoothifier",
    "corona-school-matching",
    "cozo-node",
    "cppzst",
    "crc64cpp",
    "crfsuite",
    "crypt3-passwd",
    "cryptian",
    "@cryptlex/lexactivator",
    "@cryptlex/lexfloatclient",
    "ctags",
    "@cubbit/enigma",
    "cubiomes",
    "cue-sdk",
    "cue-sdk-cove",
    "@curlconverter/tree-sitter-bash",
    "curve25519-n",
    "cypher.js",
    "darknet-bindings",
    "data-ann-native-addon-test",
    "@datadog/native-iast-taint-tracking",
    "@datadog/native-metrics",
    "@datadog/pprof",
    "dblogger",
    "dbus",
    "deadline-math",
    "deasync",
    "debstep",
    "decimal102",
    "decoder1090-c",
    "deltachat-node",
    "deps-verdaccio",
    "desktopshortcuts",
    "@desktop.vision/libnut-linux",
    "dicom-dimse-native",
    "dicom-to-json",
    "discord-game",
    "@discordjs/opus",
    "@dooub/rocksdb-nodejs",
    "@duck4i/llama",
    "duckdb",
    "dvbtee",
    "dylib",
    "easybotics-rpi-rgb-led-matrix",
    "easy-sleep",
    "@ecervo/canvas",
    "ed25519-supercop",
    "efsw",
    "@elchetz/cld",
    "@eleccookie/ref-napi",
    "electron-active-window",
    "electron-overlay-window",
    "embeddable-wg",
    "ems",
    "enhanced_promise",
    "@eosrio/node-abieos",
    "@epaperjs/rpi-2in13-bc",
    "@episensor/bluetooth-hci-socket",
    "epoll",
    "equate",
    "@ericvanwyk/tree-sitter-oberon0",
    "eris-profiler",
    "eris-sleep",
    "eris-snapshot",
    "essy-fft",
    "essy-nnls",
    "@eth-optimism/ganache-cli",
    "evdev",
    "event-loop-native",
    "@evolvingriley/file-upload",
    "faiss-napi",
    "faiss-node",
    "@faressoft/node-pty-prebuilt",
    "fast-bigint",
    "fast-is-utf8",
    "fastpug",
    "fast-string-search",
    "fasttail",
    "fasttext",
    "fast-uuidv4",
    "fd-lock",
    "fdpassing",
    "ffi-napi-v22",
    "finalize-addon",
    "find-git-repositories",
    "fixed-node-canvas",
    "flatbuffers-addon",
    "@flat/lame",
    "flock-rs",
    "flocon-new",
    "@floffah/node-memwatch",
    "floweejs",
    "flush-all",
    "frankda-newrelic-native-metrics",
    "frog-jump-master",
    "fsctl",
    "fs-extended-attributes",
    "@fsiot/heatshrink",
    "fstime",
    "fs-xattr",
    "fuzzaldrin-plus-fast",
    "ganache-cli",
    "@ganeshmogare/bodmas",
    "gc-watch",
    "gdal-async",
    "generate-rsa-keypair",
    "genx",
    "git-utils",
    "gl",
    "@glaced/gles2-2.0",
    "@glaced/glfw",
    "gl-client",
    "glfw-n-api",
    "@gnaudio/jabra-node-sdk",
    "@goblinalchemist/nodejieba",
    "goosig",
    "go-text-template-napi",
    "gphoto2",
    "gpt4all",
    "@graphprotocol/indexer-native",
    "grpc",
    "grpc-patch",
    "grpc-zjl",
    "gssapi.js",
    "h3-node",
    "haddley-factorial-cc",
    "@haggholm/damerau-levenshtein",
    "happy-birthday-vipyne",
    "hargument",
    "hca-decoder",
    "hci-socket",
    "hello-addon",
    "hello-hiro",
    "hello-hiro-js",
    "hello_publishing-native-pre-gyp",
    "@hfelix/spellchecker",
    "hhello",
    "hidden-machine-example-http",
    "highwayhash",
    "hikopenapi-node",
    "@homebridge/node-pty-prebuilt-multiarch",
    "@howlin/bluetooth-hci-socket",
    "hs-miner",
    "hwrap",
    "hybrixd",
    "@ibsolution/hana-client-promise",
    "@icebob/node-memwatch",
    "@ices/node-addons-callbacks",
    "@ices/node-addons-hello",
    "iconv",
    "icu-transliterator",
    "@ifabos/kerberos",
    "@ikonopistsev/node-rapidjson",
    "iltorb",
    "ingescape",
    "int64-transform",
    "interruptor",
    "ioctl-napi",
    "ioctl-native",
    "@ionic/node-pty-prebuilt",
    "@ipshipyard/node-datachannel",
    "isolated-vm",
    "is-valid-window",
    "@jamesernator/weakref",
    "@jeeyah/nodeortools",
    "@jeff-tian/sleep",
    "jittertrng",
    "@joeblanchard/tree-sitter-ablec",
    "@joeblanchard/tree-sitter-ablec4pts",
    "@joeblanchard/tree-sitter-ablec4ptsdemo",
    "@joeblanchard/tree-sitter-oberon0",
    "@joergmittaglawo/dmvconfig",
    "jsgui3-gfx-server",
    "js-native-ternary-buffer-tree",
    "@jsxt/weakref",
    "@junsiklee/vscode-sqlite3",
    "keccak",
    "kerberos",
    "keyboard-layout",
    "klsudoku",
    "@kmamal/gl",
    "@knagyorg/node-firebird-native-api",
    "kociemba",
    "@kore/net",
    "koru",
    "kuzu",
    "lame-private-no-maintainence-shrug2",
    "language-act-r",
    "@lastos/dbus",
    "lbj_process_addon",
    "ldll",
    "left-clicky",
    "leo-test-cpp-module",
    "leveldown",
    "leveldown-nodejs-mobile",
    "@lgeiger/napi-prebuild-starter",
    "libmaxminddb",
    "libraw.js",
    "libtidy",
    "libtidy-updated",
    "libxml2-nodejs",
    "libxmljs",
    "@lifbi_tbt/win-audio",
    "lightning-spell",
    "linux-device",
    "linux-devnode",
    "linux-perf",
    "linux-xorg-screencapture",
    "litl-parser",
    "live-elements-js-compiler",
    "lodepng",
    "@lotuz/jsminify",
    "lp_solve",
    "lru-native2",
    "lru-node-addon",
    "ls-trace",
    "luckzhiwei-lib",
    "@luminati-io/mmap-io",
    "@lydiaswap/lydia-swap-periphery",
    "lymui-node",
    "lzma-native",
    "lzo",
    "lzo-decompress",
    "malgo",
    "@mapbox/vtquery",
    "@mapbox/vtvalidate",
    "@markusjx/shared_memory",
    "@markusjx/shared_mutex",
    "@marshallofsound/native-keymap",
    "@mathquis/crfsuite",
    "@mathquis/node-gist",
    "@mathquis/node-snowboy",
    "matrix-seshat-prebuild",
    "mc-nodegit",
    "mcrypt",
    "megahash",
    "@meza/curseforge-fingerprint",
    "mg-dbx",
    "@microcode/canary",
    "microvium",
    "midi",
    "midi-test",
    "minipg",
    "mishiro-core",
    "mker",
    "mmap-mio",
    "@modum-io/bluetooth-hci-socket",
    "mongodb-client-encryption",
    "mongo-dbx",
    "@movable/hash_ring",
    "@movei/tree-sitter-move",
    "mp4decrypt-buffer",
    "mp4decryptjs",
    "mpzjs",
    "mrmr",
    "ms-flakeless",
    "msgpackr-extract",
    "msoconv",
    "mt-plugin-test",
    "mt-test-node-02",
    "@muchmore/opus",
    "muhash",
    "murmurhash-native",
    "mutou-node-plugin",
    "mutou-test-node-01",
    "mv-exchange",
    "myf-napi-example",
    "@nandoide/tree-sitter-thinp",
    "nan-hello-world",
    "@nanomatic/rpio",
    "nanosecond-timer",
    "napi-addon-fdtd",
    "napi-oniguruma",
    "napi-spellchecker",
    "napi_stb_image",
    "native-capture-js",
    "native-cypher",
    "native-fork",
    "native-hdr-histogram",
    "native-hello-world",
    "native-is-elevated",
    "native-keymap",
    "native-linked-list",
    "native-screen-js",
    "native-trie",
    "native-watchdog",
    "naudiodon",
    "@nbisigna/scramble",
    "nc-screen",
    "net-runner-engine",
    "nice-napi",
    "nlibcurl",
    "@nlv8/signun",
    "@nmarks/dd-trace",
    "nodeaffinity",
    "node-alsa-cardinfo",
    "node-base92",
    "node-calls-python",
    "node-cint64",
    "node_crc_native",
    "node-crfpp",
    "node-datachannel",
    "node_detour",
    "node-dotakv",
    "node-expat",
    "node-expat-temporary",
    "node-firebird-native-api",
    "node-float-helpers",
    "node-fzy",
    "node-gdx",
    "nodegit",
    "node-gpgpu",
    "node-hdiffpatch",
    "node-hid",
    "nodehun",
    "nodejieba",
    "node-jvt",
    "node-kcp",
    "node-kcp-x",
    "node-libtidy",
    "node-libxml",
    "@node-lightning/secp256k1",
    "node-mbed-dtls",
    "node-mbus",
    "node-memwatch-sfx",
    "node-mozjpeg",
    "node-opus",
    "node_or_tools",
    "@nodeos/node-ife",
    "node-prevent-sleep",
    "node-prng",
    "node-pty",
    "node-pty-binaries",
    "node-pty-prebuilt-multiarch",
    "node-qt-napi",
    "node-rdkafka",
    "node-recastnavigation",
    "node-spdlog-daily",
    "node-stomptalk",
    "node-stringbuilder",
    "node-sysstat",
    "node-tree-sitter-electron-arraybuffer",
    "node-uname",
    "node-xxhash",
    "node-yolo-shinobi",
    "node-zopfli",
    "node-zopfli-es",
    "@nordicsemiconductor/nrf-device-lib-js",
    "nrlmsise",
    "@nrwlia/enet-node",
    "nsfw",
    "nuv",
    "nvcodec",
    "nvidia-codec",
    "nvidia-gpu-monitorx",
    "nwework-sdk",
    "@nxtedition/rocksdb",
    "oniguruma",
    "oniguruma-prebuilt",
    "onsfw",
    "openssl-dtls",
    "os-lock",
    "ozonep-nsfw",
    "@paulcbetts/gc",
    "@paulcbetts/system-idle-time",
    "pele",
    "pg-libpq",
    "@pg-nano/pg-parser",
    "phin-ecdh",
    "picha",
    "@pitzzae/volume-list",
    "pixel-change",
    "pixels-please",
    "pkcs11js",
    "pkg-meta",
    "platform-folders",
    "playcap",
    "poke-opus",
    "posix",
    "posix-semaphore",
    "posix-socket",
    "prebuilt-example",
    "primo-app-example",
    "profoundjs-node-pty",
    "promise-await",
    "pulsar-client",
    "pulseaudio2",
    "qlobber-native",
    "qqdevicecheck",
    "qrencode_mini",
    "@quanitux/nsfw",
    "querymimedb",
    "rabin-native",
    "@raghb1/node-memwatch",
    "@rainblock/ethereum-block",
    "raknet-native",
    "raw-socket",
    "@raygun-nickj/mmap-io",
    "rdtsc",
    "re2",
    "redis-fast-driver",
    "register-scheme",
    "reliance-dicom-dimse-native",
    "resumable-hash",
    "@rev-robotics/rhsplib",
    "rgb565_bmp",
    "@ripreact/hsl",
    "@rocicorp/zero-sqlite3",
    "rpi-led-matrix",
    "rpio",
    "rpio-sunxi",
    "rsa-keypair",
    "rusage2",
    "@sambhav-gautam/osmemoryallocator",
    "sample-nodejs-function",
    "sane_aes128_cbc",
    "@savearray2/py.js",
    "@savoirfairelinux/node-server-example",
    "scalc-core",
    "scandir-native",
    "scrollbar-style",
    "sdl2-gamecontroller",
    "secp256k1",
    "secp256k1-native",
    "self-crypto",
    "@sentry-internal/node-cpu-profiler",
    "@sequencework/tfjs-node",
    "sevruga",
    "shannon-bindings",
    "sharp-lite",
    "@shroudedcode/hx711",
    "sigignore",
    "silk-sdk",
    "simdjson",
    "simple_c_parser",
    "@sirherobrine23/cppzst",
    "skia-n-api",
    "@sleipnirgroup/trajoptlib",
    "smash-synthserial",
    "@snek/private",
    "socketcan",
    "socketwatcher",
    "sodium",
    "sodium-native",
    "@soruly/opencv4nodejs-prebuilt",
    "@sosuisen/nodegit",
    "source-maps",
    "spdlog",
    "sqlite3",
    "sqlite3-sync",
    "sq-native",
    "sse4_crc32",
    "strong-ursa",
    "@suldashi/lame",
    "@suldashi/node-opus",
    "@swimm/tree-sitter-ruby",
    "symbology",
    "synchronous-worker",
    "system-time",
    "@szeah27/audify",
    "t12-parser",
    "tcp-netx",
    "tdlib-native",
    "tea-napi",
    "@techainer1t/torch-js",
    "@tensorflow/tfjs-node",
    "@tensorflow/tfjs-node-gpu",
    "@terminus-term/node-pty",
    "test-addons",
    "test_addon_simple_hello",
    "@theia/node-pty",
    "@three-em/node",
    "@tludlow-instana-fork/autoprofile",
    "@tonclient/lib-node",
    "transparent-titlebar",
    "@trbll/nodeimu",
    "tree-sitter",
    "tree-sitter-4dm",
    "tree-sitter-4dxml",
    "tree-sitter-a",
    "tree-sitter-agda",
    "tree-sitter-ags-script",
    "tree-sitter-alanguage",
    "tree-sitter-amcl",
    "tree-sitter-biber",
    "tree-sitter-bliss",
    "tree-sitter-bogl",
    "tree-sitter-brainfuck",
    "tree-sitter-carp",
    "tree-sitter-chialisp",
    "tree-sitter-cm",
    "tree-sitter-cmm",
    "tree-sitter-coccinelle",
    "tree-sitter-codelink",
    "tree-sitter-cycle",
    "tree-sitter-decisiongraph",
    "tree-sitter-deltinscript",
    "tree-sitter-delve-language",
    "tree-sitter-dot",
    "tree-sitter-dune",
    "tree-sitter-edl",
    "tree-sitter-ekon",
    "tree-sitter-elm",
    "tree-sitter-eu4mod",
    "tree-sitter-firrtl",
    "tree-sitter-foobar",
    "tree-sitter-fquest",
    "tree-sitter-frisc",
    "tree-sitter-fuior",
    "tree-sitter-func",
    "tree-sitter-gcl",
    "tree-sitter-gleam",
    "tree-sitter-hacklang",
    "tree-sitter-haiku",
    "tree-sitter-hclrs",
    "tree-sitter-hit",
    "tree-sitter-hla-assembly",
    "tree-sitter-howl",
    "tree-sitter-i",
    "tree-sitter-igor",
    "tree-sitter-janet",
    "tree-sitter-java-dev",
    "tree-sitter-jinja2",
    "tree-sitter-kos",
    "tree-sitter-kpl",
    "tree-sitter-kv1",
    "tree-sitter-langx",
    "tree-sitter-lcs",
    "tree-sitter-legesher-python",
    "tree-sitter-libretto",
    "tree-sitter-lisp",
    "tree-sitter-lll",
    "tree-sitter-lox",
    "tree-sitter-lua",
    "tree-sitter-lux",
    "tree-sitter-mela",
    "tree-sitter-menhir",
    "tree-sitter-mgd",
    "tree-sitter-minecraft",
    "tree-sitter-mlir",
    "tree-sitter-moje",
    "tree-sitter-mse",
    "tree-sitter-naz",
    "tree-sitter-notlang",
    "tree-sitter-nova",
    "tree-sitter-nwscript",
    "tree-sitter-o",
    "tree-sitter-parageo",
    "tree-sitter-parageotest",
    "tree-sitter-pascalabcnet",
    "tree-sitter-pokus",
    "tree-sitter-policyspace",
    "tree-sitter-poweron",
    "tree-sitter-prisma",
    "tree-sitter-prolog",
    "tree-sitter-proverif",
    "tree-sitter-prowseassembly",
    "tree-sitter-pts",
    "tree-sitter-ql",
    "tree-sitter-quik",
    "tree-sitter-random",
    "tree-sitter-regent",
    "tree-sitter-regex-js",
    "tree-sitter-regex-unicode-js",
    "tree-sitter-reqspec",
    "tree-sitter-ride",
    "tree-sitter-scl",
    "tree-sitter-skusamsi",
    "tree-sitter-skuskam",
    "tree-sitter-souffle",
    "tree-sitter-sourcepawn",
    "tree-sitter-sparql",
    "tree-sitter-spiral",
    "tree-sitter-st",
    "tree-sitter-start",
    "tree-sitter-storylang",
    "tree-sitter-structured-text",
    "tree-sitter-svelte",
    "tree-sitter-syncat-stylesheet",
    "tree-sitter-systemrdl",
    "tree-sitter-tablatal",
    "tree-sitter-tanuki",
    "tree-sitter-term",
    "tree-sitter-todo-full",
    "tree-sitter-toml",
    "tree-sitter-tony",
    "tree-sitter-tspec",
    "tree-sitter-turbowave",
    "tree-sitter-turtle",
    "tree-sitter-v",
    "tree-sitter-valueinference",
    "tree-sitter-vcd",
    "tree-sitter-verilog",
    "tree-sitter-vue",
    "tree-sitter-w",
    "tree-sitter-wake",
    "tree-sitter-waveasm",
    "tree-sitter-wdl",
    "tree-sitter-yaml",
    "tree-sitter-yul",
    "tree-sitter-zig",
    "@tuananh/sax-parser",
    "tulind",
    "turbo-net",
    "turbo-net-clusterable",
    "@turtlecoin/crypto",
    "ucp",
    "udev",
    "udx-native-nodejs-mobile",
    "u-framework",
    "ultradb",
    "@ulycess/c_parser",
    "unix-socketpair",
    "@unrest/form",
    "ursa-optional",
    "usb",
    "userid",
    "usm-decrypter",
    "usocket",
    "utf-8-validate",
    "utp-native",
    "utp-native-no-prebuild",
    "utp-solyd",
    "utun",
    "uv-poll",
    "vcd-stream",
    "@vit1251/napi_sdl2",
    "vmdetect",
    "vscode-nsfw",
    "wakanda-storage",
    "walkdir-fast",
    "wasi",
    "wdeasync",
    "weak-napi",
    "weak-value-map",
    "webbluetooth",
    "webrtcvad",
    "westfield-native",
    "wework-chat-node",
    "word2vec4node",
    "wordexp",
    "ws2812draw",
    "wson-addon",
    "wxaes-node",
    "xd-synchttp",
    "@xiaobaidadada/node-pty-prebuilt",
    "@xiaobaidadada/node-tuntap2-wintun",
    "@xiaobaidadada/ssh2-prebuilt",
    "xlsxio-node",
    "xlsx-util",
    "xoshiro",
    "xprofiler",
    "xrtlibrary-ip-utilities",
    "x-semaphore",
    "xtcpforwarder",
    "xxhash-addon",
    "@yaguara/dd-trace",
    "@yaming116/node-memwatch",
    "@yang8guang/npm-test100",
    "@ycanince/bluetooth-hci-socket",
    "zadeh",
    "zucc"
  ],
  "packages_jsxray_more_charon_nonzero": [
    "@abandonware/bluetooth-hci-socket",
    "@aimelo/lua",
    "@airbnb/node-memwatch",
    "@akiroz/bluetooth-hci-socket",
    "@alac/decoder",
    "@alac/encoder",
    "alsa-capture",
    "@animetosho/parpar",
    "annoy",
    "@arition/torch-js",
    "ascom-verdaccio",
    "@atom/nsfw",
    "@audc/libsamplerate",
    "@automattic/yara",
    "@axosoft/spellchecker",
    "@b2wads/lru-native2",
    "bignum",
    "blake2",
    "blake-hash",
    "boost-geospatial-index",
    "bson-ext",
    "@buckyos/node-kcp",
    "@buckyos/socketwatcher",
    "buildthing-bluetooth-hci-socket",
    "@camol/file-lock",
    "catboost",
    "@cathodique/usocket",
    "child_process_tiny",
    "cmark-gfm",
    "cmsn-bluetooth-hci-socket",
    "computron",
    "cppzst",
    "crfsuite",
    "ctags",
    "cue-sdk",
    "cue-sdk-cove",
    "dblogger",
    "dbus",
    "deps-verdaccio",
    "@discordjs/opus",
    "dvbtee",
    "easybotics-rpi-rgb-led-matrix",
    "efsw",
    "ems",
    "@eth-optimism/ganache-cli",
    "fasttext",
    "@floffah/node-memwatch",
    "fuzzaldrin-plus-fast",
    "ganache-cli",
    "genx",
    "git-utils",
    "gl",
    "gphoto2",
    "gssapi.js",
    "@hfelix/spellchecker",
    "@howlin/bluetooth-hci-socket",
    "@icebob/node-memwatch",
    "@ikonopistsev/node-rapidjson",
    "iltorb",
    "@jeeyah/nodeortools",
    "jittertrng",
    "@junsiklee/vscode-sqlite3",
    "keyboard-layout",
    "@kmamal/gl",
    "@knagyorg/node-firebird-native-api",
    "@lastos/dbus",
    "libmaxminddb",
    "libxmljs",
    "lightning-spell",
    "linux-perf",
    "linux-xorg-screencapture",
    "lru-native2",
    "lru-node-addon",
    "@lydiaswap/lydia-swap-periphery",
    "lzma-native",
    "@mathquis/crfsuite",
    "@mathquis/node-snowboy",
    "mc-nodegit",
    "megahash",
    "mg-dbx",
    "microvium",
    "midi",
    "minipg",
    "@modum-io/bluetooth-hci-socket",
    "mongo-dbx",
    "mpzjs",
    "ms-flakeless",
    "@muchmore/opus",
    "murmurhash-native",
    "native-linked-list",
    "net-runner-engine",
    "node-cint64",
    "node-expat",
    "node-expat-temporary",
    "node-firebird-native-api",
    "nodegit",
    "node-hid",
    "node-kcp",
    "node-kcp-x",
    "node-libxml",
    "@node-lightning/secp256k1",
    "node-mbed-dtls",
    "node-mbus",
    "node-memwatch-sfx",
    "node-mozjpeg",
    "node-opus",
    "node_or_tools",
    "node-qt-napi",
    "node-recastnavigation",
    "node-spdlog-daily",
    "node-xxhash",
    "node-zopfli",
    "node-zopfli-es",
    "@nrwlia/enet-node",
    "openssl-dtls",
    "picha",
    "pixels-please",
    "poke-opus",
    "posix",
    "posix-semaphore",
    "pulsar-client",
    "pulseaudio2",
    "qlobber-native",
    "@quanitux/nsfw",
    "@raghb1/node-memwatch",
    "raw-socket",
    "redis-fast-driver",
    "resumable-hash",
    "secp256k1",
    "@sleipnirgroup/trajoptlib",
    "socketcan",
    "socketwatcher",
    "@sosuisen/nodegit",
    "spdlog",
    "sqlite3",
    "strong-ursa",
    "@suldashi/node-opus",
    "synchronous-worker",
    "tcp-netx",
    "@techainer1t/torch-js",
    "udev",
    "ursa-optional",
    "usb",
    "usocket",
    "uv-poll",
    "weak-value-map",
    "webbluetooth",
    "wework-chat-node",
    "wson-addon",
    "@xiaobaidadada/ssh2-prebuilt",
    "@yaming116/node-memwatch",
    "@ycanince/bluetooth-hci-socket"
  ],
  "differences": [
    {
      "package": "@131/sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "@6river/sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "ads-kerberos",
      "jsxray": 8,
      "charon": 16,
      "diffs": [
        "(username,KerberosClient)",
        "(response,KerberosClient)",
        "(responseConf,KerberosClient)",
        "(contextComplete,KerberosClient)",
        "(username,KerberosServer)",
        "(response,KerberosServer)",
        "(targetName,KerberosServer)",
        "(contextComplete,KerberosServer)"
      ]
    },
    {
      "package": "ads-kerberos2",
      "jsxray": 8,
      "charon": 16,
      "diffs": [
        "(username,KerberosClient)",
        "(response,KerberosClient)",
        "(responseConf,KerberosClient)",
        "(contextComplete,KerberosClient)",
        "(username,KerberosServer)",
        "(response,KerberosServer)",
        "(targetName,KerberosServer)",
        "(contextComplete,KerberosServer)"
      ]
    },
    {
      "package": "@akimasa/vscode-sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "ali-usb_ctl",
      "jsxray": 2,
      "charon": 3,
      "diffs": [
        "(switchUsbPort,switchUsbPort)"
      ]
    },
    {
      "package": "@amoo-miki/node-sass",
      "jsxray": 30,
      "charon": 32,
      "diffs": [
        "(css,css)",
        "(Number,Number)",
        "(String,String)",
        "(Color,Color)",
        "(Boolean,Boolean)",
        "(List,List)",
        "(Map,Map)",
        "(Null,Null)",
        "(Error,Error)",
        "(success,ReturnCallback)"
      ]
    },
    {
      "package": "@apminsight/native-stats",
      "jsxray": 2,
      "charon": 7,
      "diffs": [
        "(startTime,data)",
        "(endTime,data)",
        "(pause,data)",
        "(pauseMS,data)",
        "(gctype,data)"
      ]
    },
    {
      "package": "apoxusbcan",
      "jsxray": 5,
      "charon": 6,
      "diffs": [
        "(open,ApoxUsbCan)",
        "(close,ApoxUsbCan)",
        "(sendBoardMessage,ApoxUsbCan)",
        "(sendCanBusMessage,ApoxUsbCan)",
        "(34,size)",
        "(28,size)"
      ]
    },
    {
      "package": "@appoptics/apm-bindings",
      "jsxray": 33,
      "charon": 75,
      "diffs": [
        "(value,value)",
        "(addHostTag,o)",
        "(status,Number)",
        "(message,String)",
        "(authStatus,Number)",
        "(authMessage,String)",
        "(typeProvisioned,Number)",
        "(metadataFromXtrace,Boolean)",
        "(edge,Boolean)",
        "(doSample,Boolean)",
        "(doMetrics,Boolean)",
        "(source,Number)",
        "(rate,Number)",
        "(tokenBucketRate,Number)",
        "(tokenBucketCapacity,Number)",
        "(totalCreated,Number)",
        "(totalDestroyed,Number)",
        "(smallActive,Number)",
        "(fullActive,Number)",
        "(totalBytesAllocated,Number)",
        "(totalActive,Number)",
        "(averageLifetime,Number)",
        "(averageSendtime,Number)",
        "(bytesUsed,Number)",
        "(sentCount,Number)",
        "(lifetime,Number)",
        "(sendtime,Number)",
        "(bytesFreed,Number)",
        "(MAX_SAMPLE_RATE,Number)",
        "(MAX_METADATA_PACK_LEN,Number)",
        "(MAX_TASK_ID_LEN,Number)",
        "(MAX_OP_ID_LEN,Number)",
        "(TRACE_NEVER,Number)",
        "(TRACE_ALWAYS,Number)",
        "(OBOE_SQLSANITIZE_AUTO,Number)",
        "(OBOE_SQLSANITIZE_DROPDOUBLE,Number)",
        "(OBOE_SQLSANITIZE_KEEPDOUBLE,Number)",
        "(name,String)",
        "(count,Number)",
        "(value,Number)",
        "(addHostTag,Boolean)",
        "(value,value)",
        "(addHostTag,o)",
        "(tracing_mode,Number)",
        "(sample_rate,Number)",
        "(flag_sample_start,Boolean)",
        "(flag_through_always,Boolean)",
        "(reporterInitCount,Number)",
        "(eventQueueFree,Number)",
        "(collectorOk,Number)",
        "(collectorTryLater,Number)",
        "(collectorLimitExceeded,Number)",
        "(kKeepAliveIntervalSeconds,Number)"
      ]
    },
    {
      "package": "@asdftempfix/serialport-bindings",
      "jsxray": 12,
      "charon": 15,
      "diffs": [
        "(cts,data)",
        "(dsr,data)",
        "(dcd,data)",
        "(baudRate,data)"
      ]
    },
    {
      "package": "@au-re/libpg-query",
      "jsxray": 8,
      "charon": 11,
      "diffs": [
        "(lineNumber,Value)",
        "(cursorPosition,Value)",
        "(context,Value)"
      ]
    },
    {
      "package": "bkjs-sqlite",
      "jsxray": 13,
      "charon": 17,
      "diffs": [
        "(open,OpenGetter)",
        "(inserted_oid,InsertedOidGetter)",
        "(affected_rows,AffectedRowsGetter)",
        "(name,filename)",
        "(mode,mode)",
        "(sql,sql)"
      ]
    },
    {
      "package": "@bpnetguy/sharp",
      "jsxray": 11,
      "charon": 12,
      "diffs": [
        "(background,background)"
      ]
    },
    {
      "package": "broadcast-interfaces",
      "jsxray": 1,
      "charon": 6,
      "diffs": [
        "(name,String)",
        "(running,Boolean)",
        "(internal,Boolean)",
        "(address,String)",
        "(broadcast,String)"
      ]
    },
    {
      "package": "bstring",
      "jsxray": 13,
      "charon": 14,
      "diffs": [
        "(1,data)"
      ]
    },
    {
      "package": "@cfg.plat/lodepng",
      "jsxray": 2,
      "charon": 3,
      "diffs": [
        "(data,data)"
      ]
    },
    {
      "package": "detect-character-encoding",
      "jsxray": 1,
      "charon": 22,
      "diffs": [
        "(1,status)",
        "(u[[:Zs:][\\\\u0009][:Bidi_Control:][:Variation_Selector:]],status)",
        "(u[[:Bidi_Control:]],status)",
        "(u[\u066c\u2018\\\\u0020\\\\u00A0\\\\u2000-\\\\u200A\\\\u202F\\\\u205F\\\\u3000],status)",
        "(u[\u221e],status)",
        "(u[:digit:],status)",
        "(2,length)",
        "(exports,DetectCharacterEncoding)",
        "(nullptr,status)",
        "(0,UnicodeSet)",
        "(u[:^S:],status)",
        "(0,status)",
        "(0x10000,UnicodeSet)",
        "(1,UnicodeSet)",
        "(1,n)",
        "(this,workingDescription)",
        "(this,foldSet)",
        "(0x39,CollationSettings)",
        "(0,data)",
        "(1,NFRuleSet)",
        "(this,UVector)",
        "(0,p)"
      ]
    },
    {
      "package": "devlz",
      "jsxray": 1,
      "charon": 2,
      "diffs": [
        "(add,Add)"
      ]
    },
    {
      "package": "displays",
      "jsxray": 1,
      "charon": 5,
      "diffs": [
        "(height,DisplayImpl)",
        "(width,DisplayImpl)",
        "(left,DisplayImpl)",
        "(top,DisplayImpl)"
      ]
    },
    {
      "package": "@div_arora/libpg-query",
      "jsxray": 6,
      "charon": 20,
      "diffs": [
        "(parseQuery,Method)",
        "(parseQueryAsync,MethodAsync)",
        "(parsePlPgSQL,MethodPlPgSQL)",
        "(parsePlPgSQLAsync,MethodPlPgSQLAsync)",
        "(lineNumber,Value)",
        "(cursorPosition,Value)",
        "(context,Value)",
        "(message,String)",
        "(fileName,String)",
        "(functionName,String)",
        "(lineNumber,Integer)",
        "(cursorPosition,Integer)",
        "(context,String)",
        "(stderr,String)"
      ]
    },
    {
      "package": "@divy-work/native-utils",
      "jsxray": 15,
      "charon": 16,
      "diffs": [
        "(17,hmem)"
      ]
    },
    {
      "package": "drivelist",
      "jsxray": 1,
      "charon": 20,
      "diffs": [
        "(enumerator,String)",
        "(busType,String)",
        "(device,String)",
        "(raw,String)",
        "(description,String)",
        "(partitionTableType,String)",
        "(error,String)",
        "(size,Number)",
        "(blockSize,Number)",
        "(logicalBlockSize,Number)",
        "(path,String)",
        "(label,String)",
        "(isReadOnly,Boolean)",
        "(isSystem,Boolean)",
        "(isVirtual,Boolean)",
        "(isRemovable,Boolean)",
        "(isCard,Boolean)",
        "(isSCSI,Boolean)",
        "(isUSB,Boolean)"
      ]
    },
    {
      "package": "@drorgl/talib",
      "jsxray": 3,
      "charon": 5,
      "diffs": [
        "(functions,Functions)",
        "(functionUnstIds,FunctionUnstIds)"
      ]
    },
    {
      "package": "ele-500-sql3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(open,OpenGetter)",
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)"
      ]
    },
    {
      "package": "ele6-sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(open,OpenGetter)",
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)"
      ]
    },
    {
      "package": "@electron-prebuilds-preview/parcel-watcher",
      "jsxray": 4,
      "charon": 6,
      "diffs": [
        "(path,String)",
        "(type,String)"
      ]
    },
    {
      "package": "fast-feed",
      "jsxray": 1,
      "charon": 4,
      "diffs": [
        "(name,name)",
        "(length,length)",
        "(author,name)"
      ]
    },
    {
      "package": "fastnoisejs",
      "jsxray": 25,
      "charon": 39,
      "diffs": [
        "(SetSeed,FastNoiseJs)",
        "(SetFrequency,FastNoiseJs)",
        "(SetInterp,FastNoiseJs)",
        "(SetNoiseType,FastNoiseJs)",
        "(SetFractalOctaves,FastNoiseJs)",
        "(SetFractalLacunarity,FastNoiseJs)",
        "(SetFractalGain,FastNoiseJs)",
        "(SetFractalType,FastNoiseJs)",
        "(SetCellularDistanceFunction,FastNoiseJs)",
        "(SetCellularReturnType,FastNoiseJs)",
        "(SetCellularDistance2Indices,FastNoiseJs)",
        "(SetCellularJitter,FastNoiseJs)",
        "(Value,Number)",
        "(ValueFractal,Number)",
        "(Perlin,Number)",
        "(PerlinFractal,Number)",
        "(Simplex,Number)",
        "(SimplexFractal,Number)",
        "(Cellular,Number)",
        "(Cubic,Number)",
        "(CubicFractal,Number)",
        "(WhiteNoise,Number)",
        "(Linear,Number)",
        "(Hermite,Number)",
        "(Quintic,Number)",
        "(FBM,Number)",
        "(Billow,Number)",
        "(RigidMulti,Number)",
        "(Euclidean,Number)",
        "(Manhattan,Number)",
        "(Natural,Number)",
        "(CellValue,Number)",
        "(NoiseLookup,Number)",
        "(Distance,Number)",
        "(Distance2,Number)",
        "(Distance2Add,Number)",
        "(Distance2Sub,Number)",
        "(Distance2Mul,Number)",
        "(Distance2Div,Number)"
      ]
    },
    {
      "package": "@felixrieseberg/spellchecker",
      "jsxray": 1,
      "charon": 8,
      "diffs": [
        "(end,end)",
        "(setDictionary,Spellchecker)",
        "(getAvailableDictionaries,Spellchecker)",
        "(getCorrectionsForMisspelling,Spellchecker)",
        "(isMisspelled,Spellchecker)",
        "(checkSpelling,Spellchecker)",
        "(add,Spellchecker)",
        "(remove,Spellchecker)"
      ]
    },
    {
      "package": "fileworkbyaleksbelka",
      "jsxray": 3,
      "charon": 16,
      "diffs": [
        "(close,close)",
        "(open,open)",
        "(query,query)",
        "(bindQuery,bind_query)",
        "(prepare,prepare)",
        "(readColumn,read_column)",
        "(beginTransaction,begin_transaction)",
        "(commit,commit)",
        "(rollback,rollback)",
        "(nextResult,read_next_result)",
        "(callProcedure,call_procedure)",
        "(unbind,unbind)",
        "(freeStatement,free_statement)",
        "(cancelQuery,cancel_statement)",
        "(pollingMode,polling_mode)",
        "(type,type_name)"
      ]
    },
    {
      "package": "@flowaccount/node-icu-tokenizer",
      "jsxray": 1,
      "charon": 3,
      "diffs": [
        "(start,Number)",
        "(end,Number)"
      ]
    },
    {
      "package": "freetype2",
      "jsxray": 2,
      "charon": 5,
      "diffs": [
        "(setCharSize,FontFace)",
        "(setPixelSizes,FontFace)",
        "(setTransform,FontFace)"
      ]
    },
    {
      "package": "@gamergenic/js-spice",
      "jsxray": 112,
      "charon": 118,
      "diffs": [
        "(0,Number)",
        "(1,Number)",
        "(w,q)",
        "(x,q)",
        "(y,q)",
        "(z,q)"
      ]
    },
    {
      "package": "gc-stats",
      "jsxray": 1,
      "charon": 6,
      "diffs": [
        "(startTime,data)",
        "(endTime,data)",
        "(pause,data)",
        "(pauseMS,data)",
        "(gctype,data)"
      ]
    },
    {
      "package": "gcstats.js",
      "jsxray": 1,
      "charon": 3,
      "diffs": [
        "(start,data)",
        "(end,data)"
      ]
    },
    {
      "package": "glpk",
      "jsxray": 144,
      "charon": 162,
      "diffs": [
        "(reason,Reason)",
        "(terminate,Terminate)",
        "(treeSize,TreeSize)",
        "(currNode,CurrNode)",
        "(nextNode,NextNode)",
        "(prevNode,PrevNode)",
        "(upNode,UpNode)",
        "(nodeLevel,NodeLevel)",
        "(nodeBound,NodeBound)",
        "(bestNode,BestNode)",
        "(mipGap,MipGap)",
        "(rowAttrib,RowAttrib)",
        "(poolSize,PoolSize)",
        "(delRow,DelRow)",
        "(clearPool,ClearPool)",
        "(canBranch,CanBranch)",
        "(branchUpon,BranchUpon)",
        "(selectNode,SelectNode)",
        "(addRow,AddRow)",
        "(heurSol,HeurSol)"
      ]
    },
    {
      "package": "@graphistry/node-pigz",
      "jsxray": 1,
      "charon": 2,
      "diffs": [
        "(deflate,DeflateMethod)"
      ]
    },
    {
      "package": "@gregnr/libpg-query",
      "jsxray": 8,
      "charon": 11,
      "diffs": [
        "(lineNumber,Value)",
        "(cursorPosition,Value)",
        "(context,Value)"
      ]
    },
    {
      "package": "huskee-install",
      "jsxray": 1,
      "charon": 2,
      "diffs": [
        "(send,Send)",
        "(save,Save)"
      ]
    },
    {
      "package": "ibm_db",
      "jsxray": 52,
      "charon": 59,
      "diffs": [
        "(index,self)",
        "(SQL_DESC_NAME,self)",
        "(SQL_DESC_TYPE_NAME,self)",
        "(SQL_DESC_CONSIZE_TYPE,self)",
        "(SQL_DESC_DISPLAY_SIZE,self)",
        "(SQL_DESC_PRECISION,self)",
        "(SQL_DESC_SCALE,self)",
        "(SQL_DESC_LENGTH,self)",
        "(0,js_result)",
        "(connected,ConnectedGetter)",
        "(0,codeSet)"
      ]
    },
    {
      "package": "ibmmq",
      "jsxray": 27,
      "charon": 76,
      "diffs": [
        "(jsCc,Number)",
        "(jsRc,Number)",
        "(value,Number)",
        "(value,String)",
        "(message,String)",
        "(BuildTime,String)",
        "(jsHConn,Number)",
        "(Options,Number)",
        "(OriginalMsgHandle,BigInt)",
        "(NewMsgHandle,BigInt)",
        "(PubLevel,Number)",
        "(Report,Number)",
        "(MsgType,Number)",
        "(Expiry,Number)",
        "(Feedback,Number)",
        "(Encoding,Number)",
        "(CodedCharSetId,Number)",
        "(Priority,Number)",
        "(Persistence,Number)",
        "(BackoutCount,Number)",
        "(PutApplType,Number)",
        "(MsgSeqNumber,Number)",
        "(Offset,Number)",
        "(MsgFlags,Number)",
        "(OriginalLength,Number)",
        "(jsHObj,Number)",
        "(Type,Number)",
        "(PropsLen,Number)",
        "(jsCallType,Number)",
        "(RemoveRFH2,Boolean)",
        "(CompCode,Number)",
        "(Reason,Number)",
        "(PutSuccessCount,Number)",
        "(PutWarningCount,Number)",
        "(PutFailureCount,Number)",
        "(ObjectType,Number)",
        "(OpenOptions,Number)",
        "(SubOptions,Number)",
        "(WaitInterval,Number)",
        "(GroupStatus,Number)",
        "(SegmentStatus,Number)",
        "(Segmentation,Number)",
        "(ReturnedLength,Number)",
        "(jsHObjQ,Number)",
        "(jsHObjSub,Number)",
        "(jsDatalen,Number)",
        "(ResolvedType,Number)",
        "(jsHMsg,BigInt)",
        "(SubLevel,Number)"
      ]
    },
    {
      "package": "@ilb/posix",
      "jsxray": 26,
      "charon": 54,
      "diffs": [
        "(code,Number)",
        "(name,String)",
        "(passwd,String)",
        "(uid,Number)",
        "(gid,Number)",
        "(gecos,String)",
        "(shell,String)",
        "(dir,String)",
        "(auth,Number)",
        "(cron,Number)",
        "(daemon,Number)",
        "(kern,Number)",
        "(lpr,Number)",
        "(mail,Number)",
        "(news,Number)",
        "(syslog,Number)",
        "(user,Number)",
        "(uucp,Number)",
        "(local0,Number)",
        "(local1,Number)",
        "(local2,Number)",
        "(local3,Number)",
        "(local4,Number)",
        "(local5,Number)",
        "(local6,Number)",
        "(local7,Number)",
        "(pid,Number)",
        "(cons,Number)",
        "(ndelay,Number)",
        "(odelay,Number)",
        "(nowait,Number)"
      ]
    },
    {
      "package": "inet_xtoy",
      "jsxray": 2,
      "charon": 3,
      "diffs": [
        "(errno,Value)"
      ]
    },
    {
      "package": "iswasmfast",
      "jsxray": 5,
      "charon": 8,
      "diffs": [
        "(slope,Number)",
        "(intercept,Number)",
        "(r2,Number)"
      ]
    },
    {
      "package": "@itsananderson/electron-sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "ivm-inspect",
      "jsxray": 1,
      "charon": 32,
      "diffs": [
        "(isExternal,IsExternal)",
        "(isDate,IsDate)",
        "(isArgumentsObject,IsArgumentsObject)",
        "(isBigIntObject,IsBigIntObject)",
        "(isBooleanObject,IsBooleanObject)",
        "(isNumberObject,IsNumberObject)",
        "(isStringObject,IsStringObject)",
        "(isSymbolObject,IsSymbolObject)",
        "(isNativeError,IsNativeError)",
        "(isRegExp,IsRegExp)",
        "(isAsyncFunction,IsAsyncFunction)",
        "(isGeneratorFunction,IsGeneratorFunction)",
        "(isGeneratorObject,IsGeneratorObject)",
        "(isPromise,IsPromise)",
        "(isMap,IsMap)",
        "(isSet,IsSet)",
        "(isMapIterator,IsMapIterator)",
        "(isSetIterator,IsSetIterator)",
        "(isWeakMap,IsWeakMap)",
        "(isWeakSet,IsWeakSet)",
        "(isArrayBuffer,IsArrayBuffer)",
        "(isDataView,IsDataView)",
        "(isSharedArrayBuffer,IsSharedArrayBuffer)",
        "(isProxy,IsProxy)",
        "(isModuleNamespaceObject,IsModuleNamespaceObject)",
        "(isAnyArrayBuffer,IsAnyArrayBuffer)",
        "(isBoxedPrimitive,IsBoxedPrimitive)",
        "(getProxyDetails,GetProxyDetails)",
        "(getConstructorName,GetConstructorName)",
        "(getOwnNonIndexProperties,GetOwnNonIndexProperties)",
        "(previewEntries,PreviewEntries)"
      ]
    },
    {
      "package": "@julusian/freetype2",
      "jsxray": 2,
      "charon": 6,
      "diffs": [
        "(setCharSize,FontFace)",
        "(setPixelSizes,FontFace)",
        "(setTransform,FontFace)",
        "(0,f)"
      ]
    },
    {
      "package": "keytar-pass",
      "jsxray": 5,
      "charon": 6,
      "diffs": [
        "(password,password)"
      ]
    },
    {
      "package": "libpg-query",
      "jsxray": 6,
      "charon": 9,
      "diffs": [
        "(lineNumber,Value)",
        "(cursorPosition,Value)",
        "(context,Value)"
      ]
    },
    {
      "package": "libpg-query-m1-native",
      "jsxray": 6,
      "charon": 20,
      "diffs": [
        "(parseQuery,Method)",
        "(parseQueryAsync,MethodAsync)",
        "(parsePlPgSQL,MethodPlPgSQL)",
        "(parsePlPgSQLAsync,MethodPlPgSQLAsync)",
        "(message,String)",
        "(fileName,String)",
        "(functionName,String)",
        "(lineNumber,Integer)",
        "(cursorPosition,Integer)",
        "(context,String)",
        "(stderr,String)",
        "(lineNumber,Value)",
        "(cursorPosition,Value)",
        "(context,Value)"
      ]
    },
    {
      "package": "libxmljs2",
      "jsxray": 69,
      "charon": 76,
      "diffs": [
        "(addChild,XmlElement)",
        "(cdata,XmlElement)",
        "(_attr,XmlElement)",
        "(attrs,XmlElement)",
        "(child,XmlElement)",
        "(childNodes,XmlElement)",
        "(find,XmlElement)",
        "(nextElement,XmlElement)",
        "(prevElement,XmlElement)",
        "(name,XmlElement)",
        "(path,XmlElement)",
        "(text,XmlElement)",
        "(addPrevSibling,XmlElement)",
        "(addNextSibling,XmlElement)",
        "(replace,XmlElement)",
        "(name,XmlProcessingInstruction)",
        "(text,XmlProcessingInstruction)",
        "(root,XmlDocument)",
        "(version,XmlDocument)",
        "(encoding,XmlDocument)",
        "(toString,XmlDocument)",
        "(validate,XmlDocument)",
        "(rngValidate,XmlDocument)",
        "(schematronValidate,XmlDocument)",
        "(_setDtd,XmlDocument)",
        "(getDtd,XmlDocument)",
        "(type,XmlDocument)",
        "(fromXml,XmlDocument)",
        "(fromHtml,XmlDocument)",
        "(parseString,XmlSaxParser)",
        "(push,XmlSaxParser)",
        "(doc,XmlNode)",
        "(parent,XmlNode)",
        "(namespace,XmlNode)",
        "(namespaces,XmlNode)",
        "(prevSibling,XmlNode)",
        "(nextSibling,XmlNode)",
        "(line,XmlNode)",
        "(type,XmlNode)",
        "(remove,XmlNode)",
        "(clone,XmlNode)",
        "(toString,XmlNode)",
        "(href,XmlNamespace)",
        "(prefix,XmlNamespace)",
        "(toString,XmlTextWriter)",
        "(outputMemory,XmlTextWriter)",
        "(clear,XmlTextWriter)",
        "(startDocument,XmlTextWriter)",
        "(endDocument,XmlTextWriter)",
        "(startElementNS,XmlTextWriter)",
        "(endElement,XmlTextWriter)",
        "(startAttributeNS,XmlTextWriter)",
        "(endAttribute,XmlTextWriter)",
        "(startCdata,XmlTextWriter)",
        "(endCdata,XmlTextWriter)",
        "(startComment,XmlTextWriter)",
        "(endComment,XmlTextWriter)",
        "(writeString,XmlTextWriter)",
        "(text,XmlComment)",
        "(name,XmlAttribute)",
        "(value,XmlAttribute)",
        "(node,XmlAttribute)",
        "(namespace,XmlAttribute)",
        "(nextElement,XmlText)",
        "(prevElement,XmlText)",
        "(text,XmlText)",
        "(replace,XmlText)",
        "(path,XmlText)",
        "(name,XmlText)",
        "(addPrevSibling,XmlText)",
        "(addNextSibling,XmlText)",
        "(ns,ctxt)",
        "(0,set)",
        "(1,set)"
      ]
    },
    {
      "package": "logpp",
      "jsxray": 16,
      "charon": 17,
      "diffs": [
        "(spos,Number)"
      ]
    },
    {
      "package": "@luminati-io/gc-stats",
      "jsxray": 1,
      "charon": 6,
      "diffs": [
        "(startTime,data)",
        "(endTime,data)",
        "(pause,data)",
        "(pauseMS,data)",
        "(gctype,data)"
      ]
    },
    {
      "package": "@mateuszzajacs/bindings",
      "jsxray": 12,
      "charon": 15,
      "diffs": [
        "(cts,data)",
        "(dsr,data)",
        "(dcd,data)",
        "(baudRate,data)"
      ]
    },
    {
      "package": "@microsoft/ads-kerberos",
      "jsxray": 8,
      "charon": 16,
      "diffs": [
        "(username,KerberosClient)",
        "(response,KerberosClient)",
        "(responseConf,KerberosClient)",
        "(contextComplete,KerberosClient)",
        "(username,KerberosServer)",
        "(response,KerberosServer)",
        "(targetName,KerberosServer)",
        "(contextComplete,KerberosServer)"
      ]
    },
    {
      "package": "microtime",
      "jsxray": 3,
      "charon": 6,
      "diffs": [
        "(syscall,String)",
        "(errno,Number)",
        "(code,Number)"
      ]
    },
    {
      "package": "@minko-fe/sharp",
      "jsxray": 12,
      "charon": 15,
      "diffs": [
        "(semver,String)",
        "(isGlobal,Boolean)",
        "(isWasm,Boolean)"
      ]
    },
    {
      "package": "muhammara",
      "jsxray": 60,
      "charon": 240,
      "diffs": [
        "(getObjectID,GetObjectID)",
        "(getVersion,GetVersion)",
        "(getCurrentPageContentStream,GetCurrentPageContentStream)",
        "(getAssociatedPage,GetAssociatedPage)",
        "(toText,ToText)",
        "(addFormXObjectMapping,AddFormXObjectMapping)",
        "(addImageXObjectMapping,AddImageXObjectMapping)",
        "(addProcsetResource,AddProcsetResource)",
        "(addExtGStateMapping,AddExtGStateMapping)",
        "(addFontMapping,AddFontMapping)",
        "(addColorSpaceMapping,AddColorSpaceMapping)",
        "(addPatternMapping,AddPatternMapping)",
        "(addPropertyMapping,AddPropertyMapping)",
        "(addXObjectMapping,AddXObjectMapping)",
        "(addShadingMapping,AddShadingMapping)",
        "(write,Write)",
        "(getCurrentPosition,GetCurrentPosition)",
        "(read,Read)",
        "(notEnded,NotEnded)",
        "(getPDFLevel,GetPDFLevel)",
        "(getPagesCount,GetPagesCount)",
        "(getTrailer,GetTrailer)",
        "(queryDictionaryObject,QueryDictionaryObject)",
        "(queryArrayObject,QueryArrayObject)",
        "(parseNewObject,ParseNewObject)",
        "(getPageObjectID,GetPageObjectID)",
        "(parsePageDictionary,ParsePageDictionary)",
        "(parsePage,ParsePage)",
        "(getObjectsCount,GetObjectsCount)",
        "(isEncrypted,IsEncrypted)",
        "(getXrefSize,GetXrefSize)",
        "(getXrefEntry,GetXrefEntry)",
        "(getXrefPosition,GetXrefPosition)",
        "(startReadingFromStream,StartReadingFromStream)",
        "(startReadingFromStreamForPlainCopying,StartReadingFromStreamForPlainCopying)",
        "(startReadingObjectsFromStream,StartReadingObjectsFromStream)",
        "(startReadingObjectsFromStreams,StartReadingObjectsFromStreams)",
        "(getParserStream,GetParserStream)",
        "(writeKey,WriteKey)",
        "(writeNameValue,WriteNameValue)",
        "(writeRectangleValue,WriteRectangleValue)",
        "(writeLiteralStringValue,WriteLiteralStringValue)",
        "(writeBooleanValue,WriteBooleanValue)",
        "(writeObjectReferenceValue,WriteObjectReferenceValue)",
        "(writeNumberValue,WriteNumberValue)",
        "(toJSObject,ToJSObject)",
        "(queryObject,QueryObject)",
        "(exists,Exists)",
        "(getDictionary,GetDictionary)",
        "(getMediaBox,GetMediaBox)",
        "(getCropBox,GetCropBox)",
        "(getTrimBox,GetTrimBox)",
        "(getBleedBox,GetBleedBox)",
        "(getArtBox,GetArtBox)",
        "(getRotate,GetRotate)",
        "(getStreamContentStart,GetStreamContentStart)",
        "(addAdditionalInfoEntry,AddAdditionalInfoEntry)",
        "(removeAdditionalInfoEntry,RemoveAdditionalInfoEntry)",
        "(clearAdditionalInfoEntries,ClearAdditionalInfoEntries)",
        "(getAdditionalInfoEntry,GetAdditionalInfoEntry)",
        "(getAdditionalInfoEntries,GetAdditionalInfoEntries)",
        "(setCreationDate,SetCreationDate)",
        "(setModDate,SetModDate)",
        "(getType,GetType)",
        "(toPDFIndirectObjectReference,ToPDFIndirectObjectReference)",
        "(toPDFArray,ToPDFArray)",
        "(toPDFDictionary,ToPDFDictionary)",
        "(toPDFStream,ToPDFStream)",
        "(toPDFBoolean,ToPDFBoolean)",
        "(toPDFLiteralString,ToPDFLiteralString)",
        "(toPDFHexString,ToPDFHexString)",
        "(toPDFNull,ToPDFNull)",
        "(toPDFName,ToPDFName)",
        "(toPDFInteger,ToPDFInteger)",
        "(toPDFReal,ToPDFReal)",
        "(toPDFSymbol,ToPDFSymbol)",
        "(toNumber,ToNumber)",
        "(getWriteStream,GetWriteStream)",
        "(createFormXObjectFromPDFPage,CreateFormXObjectFromPDFPage)",
        "(mergePDFPageToPage,MergePDFPageToPage)",
        "(appendPDFPageFromPDF,AppendPDFPageFromPDF)",
        "(mergePDFPageToFormXObject,MergePDFPageToFormXObject)",
        "(getSourceDocumentParser,GetSourceDocumentParser)",
        "(copyDirectObjectAsIs,CopyDirectObjectAsIs)",
        "(copyObject,CopyObject)",
        "(copyDirectObjectWithDeepCopy,CopyDirectObjectWithDeepCopy)",
        "(copyNewObjectsForDirectObject,CopyNewObjectsForDirectObject)",
        "(getCopiedObjectID,GetCopiedObjectID)",
        "(getCopiedObjects,GetCopiedObjects)",
        "(replaceSourceObjects,ReplaceSourceObjects)",
        "(getSourceDocumentStream,GetSourceDocumentStream)",
        "(getContentContext,GetContentContext)",
        "(getResourcesDictinary,GetResourcesDictionary)",
        "(getContentStream,GetContentStream)",
        "(allocateNewObjectID,AllocateNewObjectID)",
        "(startDictionary,StartDictionary)",
        "(startArray,StartArray)",
        "(writeNumber,WriteNumber)",
        "(endArray,EndArray)",
        "(endLine,EndLine)",
        "(endDictionary,EndDictionary)",
        "(endIndirectObject,EndIndirectObject)",
        "(writeIndirectObjectReference,WriteIndirectObjectReference)",
        "(startNewIndirectObject,StartNewIndirectObject)",
        "(startModifiedIndirectObject,StartModifiedIndirectObject)",
        "(deleteObject,DeleteObject)",
        "(writeName,WriteName)",
        "(writeLiteralString,WriteLiteralString)",
        "(writeHexString,WriteHexString)",
        "(writeBoolean,WriteBoolean)",
        "(writeKeyword,WriteKeyword)",
        "(writeComment,WriteComment)",
        "(setCompressStreams,SetCompressStreams)",
        "(startPDFStream,StartPDFStream)",
        "(startUnfilteredPDFStream,StartUnfilteredPDFStream)",
        "(endPDFStream,EndPDFStream)",
        "(startFreeContext,StartFreeContext)",
        "(endFreeContext,EndFreeContext)",
        "(b,b)",
        "(B,B)",
        "(bStar,bStar)",
        "(BStar,BStar)",
        "(s,s)",
        "(S,S)",
        "(f,f)",
        "(F,F)",
        "(fStar,fStar)",
        "(n,n)",
        "(m,m)",
        "(l,l)",
        "(c,c)",
        "(v,v)",
        "(y,y)",
        "(h,h)",
        "(re,re)",
        "(q,q)",
        "(Q,Q)",
        "(cm,cm)",
        "(w,w)",
        "(J,J)",
        "(j,j)",
        "(M,M)",
        "(d,d)",
        "(ri,ri)",
        "(i,i)",
        "(gs,gs)",
        "(CS,CS)",
        "(cs,cs)",
        "(SC,SC)",
        "(SCN,SCN)",
        "(sc,sc)",
        "(scn,scn)",
        "(G,G)",
        "(g,g)",
        "(RG,RG)",
        "(rg,rg)",
        "(K,K)",
        "(k,k)",
        "(W,W)",
        "(WStar,WStar)",
        "(doXObject,doXObject)",
        "(Tc,Tc)",
        "(Tw,Tw)",
        "(Tz,Tz)",
        "(TL,TL)",
        "(Tr,Tr)",
        "(Ts,Ts)",
        "(BT,BT)",
        "(ET,ET)",
        "(Td,Td)",
        "(TD,TD)",
        "(Tm,Tm)",
        "(TStar,TStar)",
        "(Tf,Tf)",
        "(Tj,Tj)",
        "(Quote,Quote)",
        "(DoubleQuote,DoubleQuote)",
        "(TJ,TJ)",
        "(writeFreeCode,WriteFreeCode)",
        "(drawPath,DrawPath)",
        "(drawCircle,DrawCircle)",
        "(drawSquare,DrawSquare)",
        "(drawRectangle,DrawRectangle)",
        "(writeText,WriteText)",
        "(drawImage,DrawImage)",
        "(toJSArray,ToJSArray)",
        "(getLength,GetLength)",
        "(calculateTextDimensions,CalculateTextDimensions)",
        "(getFontMetrics,GetFontMetrics)",
        "(setPosition,SetPosition)",
        "(setPositionFromEnd,SetPositionFromEnd)",
        "(skip,Skip)",
        "(getInfoDictionary,GetInfoDictionary)"
      ]
    },
    {
      "package": "@myluluy/node-syslog",
      "jsxray": 1,
      "charon": 4,
      "diffs": [
        "(option,Option)",
        "(facility,Facility)",
        "(priority,Priority)"
      ]
    },
    {
      "package": "nfinger",
      "jsxray": 1,
      "charon": 2,
      "diffs": [
        "(data,data)"
      ]
    },
    {
      "package": "nflx-spectator-nodejsmetrics",
      "jsxray": 2,
      "charon": 3,
      "diffs": [
        "(elapsed,elapsed)"
      ]
    },
    {
      "package": "nkv.db",
      "jsxray": 7,
      "charon": 9,
      "diffs": [
        "(index,Number)",
        "(data,String)"
      ]
    },
    {
      "package": "node-canal",
      "jsxray": 17,
      "charon": 52,
      "diffs": [
        "(CANAL_ERROR_SUCCESS,Number)",
        "(CANAL_ERROR_BAUDRATE,Number)",
        "(CANAL_ERROR_BUS_OFF,Number)",
        "(CANAL_ERROR_BUS_PASSIVE,Number)",
        "(CANAL_ERROR_BUS_WARNING,Number)",
        "(CANAL_ERROR_CAN_ID,Number)",
        "(CANAL_ERROR_CAN_MESSAGE,Number)",
        "(CANAL_ERROR_CHANNEL,Number)",
        "(CANAL_ERROR_FIFO_EMPTY,Number)",
        "(CANAL_ERROR_FIFO_FULL,Number)",
        "(CANAL_ERROR_FIFO_SIZE,Number)",
        "(CANAL_ERROR_FIFO_WAIT,Number)",
        "(CANAL_ERROR_GENERIC,Number)",
        "(CANAL_ERROR_HARDWARE,Number)",
        "(CANAL_ERROR_INIT_FAIL,Number)",
        "(CANAL_ERROR_INIT_MISSING,Number)",
        "(CANAL_ERROR_INIT_READY,Number)",
        "(CANAL_ERROR_NOT_SUPPORTED,Number)",
        "(CANAL_ERROR_OVERRUN,Number)",
        "(CANAL_ERROR_RCV_EMPTY,Number)",
        "(CANAL_ERROR_TRM_FULL,Number)",
        "(CANAL_ERROR_ERRFRM_STUFF,Number)",
        "(CANAL_ERROR_ERRFRM_FORM,Number)",
        "(CANAL_ERROR_ERRFRM_ACK,Number)",
        "(CANAL_ERROR_ERRFRM_BIT1,Number)",
        "(CANAL_ERROR_ERRFRM_BIT0,Number)",
        "(CANAL_ERROR_ERRFRM_CRC,Number)",
        "(CANAL_ERROR_LIBRARY,Number)",
        "(CANAL_ERROR_PROCADDRESS,Number)",
        "(CANAL_ERROR_ONLY_ONE_INSTANCE,Number)",
        "(CANAL_ERROR_SUB_DRIVER,Number)",
        "(CANAL_ERROR_TIMEOUT,Number)",
        "(CANAL_ERROR_NOT_OPEN,Number)",
        "(CANAL_ERROR_PARAMETER,Number)",
        "(CANAL_ERROR_MEMORY,Number)",
        "(CANAL_ERROR_INTERNAL,Number)",
        "(CANAL_ERROR_COMMUNICATION,Number)",
        "(CANAL_IDFLAG_STANDARD,Number)",
        "(CANAL_IDFLAG_EXTENDED,Number)",
        "(CANAL_IDFLAG_RTR,Number)",
        "(CANAL_IDFLAG_STATUS,Number)",
        "(CANAL_IDFLAG_SEND,Number)",
        "(CANAL_BAUD_USER,Number)",
        "(CANAL_BAUD_1000,Number)",
        "(CANAL_BAUD_800,Number)",
        "(CANAL_BAUD_500,Number)",
        "(CANAL_BAUD_250,Number)",
        "(CANAL_BAUD_125,Number)",
        "(CANAL_BAUD_100,Number)",
        "(CANAL_BAUD_50,Number)",
        "(CANAL_BAUD_20,Number)",
        "(CANAL_BAUD_10,Number)"
      ]
    },
    {
      "package": "node-lmdb",
      "jsxray": 32,
      "charon": 55,
      "diffs": [
        "(pageSize,stat)",
        "(treeDepth,stat)",
        "(treeBranchPageCount,stat)",
        "(treeLeafPageCount,stat)",
        "(entryCount,stat)",
        "(open,EnvWrap)",
        "(close,EnvWrap)",
        "(beginTxn,EnvWrap)",
        "(openDbi,EnvWrap)",
        "(sync,EnvWrap)",
        "(batchWrite,EnvWrap)",
        "(stat,EnvWrap)",
        "(info,EnvWrap)",
        "(resize,EnvWrap)",
        "(copy,EnvWrap)",
        "(detachBuffer,EnvWrap)",
        "(commit,TxnWrap)",
        "(abort,TxnWrap)",
        "(getString,TxnWrap)",
        "(getStringUnsafe,TxnWrap)",
        "(getBinary,TxnWrap)",
        "(getBinaryUnsafe,TxnWrap)",
        "(getNumber,TxnWrap)",
        "(getBoolean,TxnWrap)",
        "(putString,TxnWrap)",
        "(putBinary,TxnWrap)",
        "(putNumber,TxnWrap)",
        "(putBoolean,TxnWrap)",
        "(del,TxnWrap)",
        "(reset,TxnWrap)",
        "(renew,TxnWrap)",
        "(close,DbiWrap)",
        "(drop,DbiWrap)",
        "(stat,DbiWrap)",
        "(overflowPages,stat)",
        "(close,CursorWrap)",
        "(getCurrentString,CursorWrap)",
        "(getCurrentStringUnsafe,CursorWrap)",
        "(getCurrentBinary,CursorWrap)",
        "(getCurrentBinaryUnsafe,CursorWrap)",
        "(getCurrentNumber,CursorWrap)",
        "(getCurrentBoolean,CursorWrap)",
        "(goToFirst,CursorWrap)",
        "(goToLast,CursorWrap)",
        "(goToNext,CursorWrap)",
        "(goToPrev,CursorWrap)",
        "(goToKey,CursorWrap)",
        "(goToRange,CursorWrap)",
        "(goToFirstDup,CursorWrap)",
        "(goToLastDup,CursorWrap)",
        "(goToNextDup,CursorWrap)",
        "(goToPrevDup,CursorWrap)",
        "(goToDup,CursorWrap)",
        "(goToDupRange,CursorWrap)",
        "(del,CursorWrap)"
      ]
    },
    {
      "package": "node-navquery",
      "jsxray": 12,
      "charon": 13,
      "diffs": [
        "(ref,nearestRef)",
        "(filename,info)",
        "(load,NavQuery)",
        "(clear,NavQuery)",
        "(findNearestPoly,NavQuery)",
        "(findRandomPoint,NavQuery)",
        "(findStraightPath,NavQuery)",
        "(getAreaCost,NavQuery)",
        "(setAreaCost,NavQuery)",
        "(getIncludeFlags,NavQuery)",
        "(setIncludeFlags,NavQuery)",
        "(getExcludeFlags,NavQuery)",
        "(setExcludeFlags,NavQuery)"
      ]
    },
    {
      "package": "node-oom-heapdump",
      "jsxray": 1,
      "charon": 2,
      "diffs": []
    },
    {
      "package": "node-portmapping",
      "jsxray": 7,
      "charon": 9,
      "diffs": [
        "(state,String)",
        "(protocol,String)",
        "(internalPort,Number)",
        "(externalPort,Number)",
        "(externalHost,String)",
        "(init,Wrapper)",
        "(cleanup,Wrapper)",
        "(createMapping,Wrapper)",
        "(getLocalAddress,Wrapper)"
      ]
    },
    {
      "package": "node-process-watcher",
      "jsxray": 6,
      "charon": 8,
      "diffs": [
        "(pid,Number)",
        "(ppid,Number)"
      ]
    },
    {
      "package": "node-quirc",
      "jsxray": 2,
      "charon": 3,
      "diffs": [
        "(data,data)"
      ]
    },
    {
      "package": "node-sass",
      "jsxray": 30,
      "charon": 32,
      "diffs": [
        "(Number,Number)",
        "(String,String)",
        "(Color,Color)",
        "(Boolean,Boolean)",
        "(List,List)",
        "(Map,Map)",
        "(Null,Null)",
        "(Error,Error)",
        "(success,ReturnCallback)",
        "(css,css)"
      ]
    },
    {
      "package": "node-sass-test",
      "jsxray": 30,
      "charon": 32,
      "diffs": [
        "(success,ReturnCallback)",
        "(Number,Number)",
        "(String,String)",
        "(Color,Color)",
        "(Boolean,Boolean)",
        "(List,List)",
        "(Map,Map)",
        "(Null,Null)",
        "(Error,Error)",
        "(css,css)"
      ]
    },
    {
      "package": "node-scrypt2",
      "jsxray": 8,
      "charon": 11,
      "diffs": [
        "(N,Number)",
        "(r,Number)",
        "(p,Number)"
      ]
    },
    {
      "package": "node-snap7",
      "jsxray": 63,
      "charon": 66,
      "diffs": [
        "(Start,S7Server)",
        "(StartTo,S7Server)",
        "(Stop,S7Server)",
        "(SetParam,S7Server)",
        "(GetParam,S7Server)",
        "(SetResourceless,S7Server)",
        "(RegisterArea,S7Server)",
        "(UnregisterArea,S7Server)",
        "(LockArea,S7Server)",
        "(UnlockArea,S7Server)",
        "(SetArea,S7Server)",
        "(GetArea,S7Server)",
        "(SetEventMask,S7Server)",
        "(GetEventsMask,S7Server)",
        "(ErrorText,S7Server)",
        "(LastError,S7Server)",
        "(EventText,S7Server)",
        "(ServerStatus,S7Server)",
        "(ClientsCount,S7Server)",
        "(GetCpuStatus,S7Server)",
        "(SetCpuStatus,S7Server)",
        "(EvtTime,time)",
        "(Connect,S7Client)",
        "(ConnectTo,S7Client)",
        "(SetConnectionParams,S7Client)",
        "(SetConnectionType,S7Client)",
        "(Disconnect,S7Client)",
        "(GetParam,S7Client)",
        "(SetParam,S7Client)",
        "(ReadArea,S7Client)",
        "(WriteArea,S7Client)",
        "(ReadMultiVars,S7Client)",
        "(WriteMultiVars,S7Client)",
        "(ListBlocks,S7Client)",
        "(GetAgBlockInfo,S7Client)",
        "(GetPgBlockInfo,S7Client)",
        "(ListBlocksOfType,S7Client)",
        "(Upload,S7Client)",
        "(FullUpload,S7Client)",
        "(Download,S7Client)",
        "(Delete,S7Client)",
        "(DBGet,S7Client)",
        "(DBFill,S7Client)",
        "(GetPlcDateTime,S7Client)",
        "(SetPlcDateTime,S7Client)",
        "(SetPlcSystemDateTime,S7Client)",
        "(GetOrderCode,S7Client)",
        "(GetCpuInfo,S7Client)",
        "(GetCpInfo,S7Client)",
        "(ReadSZL,S7Client)",
        "(ReadSZLList,S7Client)",
        "(PlcHotStart,S7Client)",
        "(PlcColdStart,S7Client)",
        "(PlcStop,S7Client)",
        "(CopyRamToRom,S7Client)",
        "(Compress,S7Client)",
        "(GetProtection,S7Client)",
        "(SetSessionPassword,S7Client)",
        "(ClearSessionPassword,S7Client)",
        "(ExecTime,S7Client)",
        "(LastError,S7Client)",
        "(PDURequested,S7Client)",
        "(PDULength,S7Client)",
        "(PlcStatus,S7Client)",
        "(Connected,S7Client)",
        "(ErrorText,S7Client)"
      ]
    },
    {
      "package": "node-sync-ipc",
      "jsxray": 5,
      "charon": 6,
      "diffs": [
        "(write,Write)",
        "(onMessage,onMessageBind)"
      ]
    },
    {
      "package": "node-vad",
      "jsxray": 4,
      "charon": 5,
      "diffs": [
        "(0,length)"
      ]
    },
    {
      "package": "node-wow-mssql",
      "jsxray": 1,
      "charon": 13,
      "diffs": [
        "(execute,Execute)",
        "(nextRows,NextRows)",
        "(connect,Connect)",
        "(connectSync,ConnectSync)",
        "(executeSync,ExecuteSync)",
        "(readerHandle,CreateReader)",
        "(prepare,Prepare)",
        "(close,Close)",
        "(isConnected,IsConnected)",
        "(setAutoCommit,SetAutoCommit)",
        "(setPrefetchRowCount,SetPrefetchRowCount)",
        "(commit,Commit)",
        "(rollback,Rollback)"
      ]
    },
    {
      "package": "node-xed",
      "jsxray": 1,
      "charon": 2,
      "diffs": [
        "(len,Number)"
      ]
    },
    {
      "package": "orientjs-native",
      "jsxray": 2,
      "charon": 7,
      "diffs": [
        "(@class,name)",
        "(cluster,value)",
        "(position,value)",
        "(_size,size)",
        "(this,value)"
      ]
    },
    {
      "package": "osmbuildings-classic",
      "jsxray": 1,
      "charon": 3,
      "diffs": [
        "(start,FSEvents)",
        "(stop,FSEvents)"
      ]
    },
    {
      "package": "@oxyflour/ncc",
      "jsxray": 28,
      "charon": 38,
      "diffs": [
        "(x,Number)",
        "(y,Number)",
        "(z,Number)",
        "(COMPOUND,Number)",
        "(COMPSOLID,Number)",
        "(EDGE,Number)",
        "(FACE,Number)",
        "(SHAPE,Number)",
        "(SHELL,Number)",
        "(SOLID,Number)",
        "(VERTEX,Number)",
        "(WIRE,Number)",
        "(mass,props)",
        "(p,Shape)",
        "(s,props)",
        "(l,props)"
      ]
    },
    {
      "package": "@parcel/watcher",
      "jsxray": 4,
      "charon": 6,
      "diffs": [
        "(path,String)",
        "(type,String)"
      ]
    },
    {
      "package": "@parcel~watcher",
      "jsxray": 4,
      "charon": 6,
      "diffs": [
        "(path,String)",
        "(type,String)"
      ]
    },
    {
      "package": "poppler-native",
      "jsxray": 1,
      "charon": 9,
      "diffs": [
        "(Names,Dict)",
        "(size,size)",
        "(family,String)",
        "(color,String)",
        "(src,String)",
        "(text,String)",
        "(link,String)",
        "(title,String)"
      ]
    },
    {
      "package": "pprof",
      "jsxray": 6,
      "charon": 11,
      "diffs": [
        "(name,name)",
        "(title,profile)",
        "(topDownRoot,profile)",
        "(startTime,profile)",
        "(endTime,profile)"
      ]
    },
    {
      "package": "@pubgcorp/node-xed",
      "jsxray": 1,
      "charon": 2,
      "diffs": [
        "(len,Number)"
      ]
    },
    {
      "package": "@qujingling/sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "radialxml",
      "jsxray": 53,
      "charon": 55,
      "diffs": [
        "(name,XmlProcessingInstruction)",
        "(text,XmlProcessingInstruction)",
        "(parseString,XmlSaxParser)",
        "(push,XmlSaxParser)",
        "(addChild,XmlElement)",
        "(addCData,XmlElement)",
        "(_attr,XmlElement)",
        "(attrs,XmlElement)",
        "(child,XmlElement)",
        "(childNodes,XmlElement)",
        "(find,XmlElement)",
        "(nextElement,XmlElement)",
        "(prevElement,XmlElement)",
        "(name,XmlElement)",
        "(path,XmlElement)",
        "(text,XmlElement)",
        "(addPrevSibling,XmlElement)",
        "(addNextSibling,XmlElement)",
        "(replace,XmlElement)",
        "(href,XmlNamespace)",
        "(prefix,XmlNamespace)",
        "(doc,XmlNode)",
        "(parent,XmlNode)",
        "(namespace,XmlNode)",
        "(namespaces,XmlNode)",
        "(prevSibling,XmlNode)",
        "(nextSibling,XmlNode)",
        "(line,XmlNode)",
        "(type,XmlNode)",
        "(remove,XmlNode)",
        "(clone,XmlNode)",
        "(toString,XmlNode)",
        "(text,XmlComment)",
        "(_root,XmlDocument)",
        "(_version,XmlDocument)",
        "(_encoding,XmlDocument)",
        "(_toString,XmlDocument)",
        "(_validate,XmlDocument)",
        "(_rngValidate,XmlDocument)",
        "(_setDtd,XmlDocument)",
        "(_getDtd,XmlDocument)",
        "(fromXml,XmlDocument)",
        "(fromHtml,XmlDocument)",
        "(nextElement,XmlText)",
        "(prevElement,XmlText)",
        "(text,XmlText)",
        "(replace,XmlText)",
        "(name,XmlAttribute)",
        "(value,XmlAttribute)",
        "(node,XmlAttribute)",
        "(namespace,XmlAttribute)",
        "(0,set)",
        "(1,set)"
      ]
    },
    {
      "package": "rdscpp",
      "jsxray": 1,
      "charon": 3,
      "diffs": [
        "(0,Number)",
        "(1,Boolean)"
      ]
    },
    {
      "package": "@reconbot/bindings-cpp",
      "jsxray": 12,
      "charon": 16,
      "diffs": [
        "(cts,data)",
        "(dsr,data)",
        "(dcd,data)",
        "(lowLatency,data)",
        "(baudRate,data)"
      ]
    },
    {
      "package": "@risingstack/gc-stats",
      "jsxray": 1,
      "charon": 3,
      "diffs": [
        "(pause,data)",
        "(pauseMS,data)"
      ]
    },
    {
      "package": "runas-redux",
      "jsxray": 1,
      "charon": 4,
      "diffs": [
        "(exitCode,Number)",
        "(stdout,String)",
        "(stderr,String)"
      ]
    },
    {
      "package": "@samebchase/spellchecker",
      "jsxray": 1,
      "charon": 8,
      "diffs": [
        "(end,end)",
        "(setDictionary,Spellchecker)",
        "(getAvailableDictionaries,Spellchecker)",
        "(getCorrectionsForMisspelling,Spellchecker)",
        "(isMisspelled,Spellchecker)",
        "(checkSpelling,Spellchecker)",
        "(add,Spellchecker)",
        "(remove,Spellchecker)"
      ]
    },
    {
      "package": "@sematext/gc-stats",
      "jsxray": 1,
      "charon": 6,
      "diffs": [
        "(startTime,data)",
        "(endTime,data)",
        "(pause,data)",
        "(pauseMS,data)",
        "(gctype,data)"
      ]
    },
    {
      "package": "@serialport/bindings",
      "jsxray": 12,
      "charon": 16,
      "diffs": [
        "(cts,data)",
        "(dsr,data)",
        "(dcd,data)",
        "(lowLatency,data)",
        "(baudRate,data)"
      ]
    },
    {
      "package": "shxt.serialport.bindings",
      "jsxray": 12,
      "charon": 16,
      "diffs": [
        "(cts,data)",
        "(dsr,data)",
        "(dcd,data)",
        "(lowLatency,data)",
        "(baudRate,data)"
      ]
    },
    {
      "package": "@slimio/micro",
      "jsxray": 4,
      "charon": 7,
      "diffs": [
        "(sec,Number)",
        "(usec,Number)",
        "(nsec,Number)"
      ]
    },
    {
      "package": "spi-device",
      "jsxray": 2,
      "charon": 10,
      "diffs": [
        "(close,Close)",
        "(closeSync,CloseSync)",
        "(transfer,Transfer)",
        "(transferSync,TransferSync)",
        "(getOptions,GetOptions)",
        "(getOptionsSync,GetOptionsSync)",
        "(setOptions,SetOptions)",
        "(setOptionsSync,SetOptionsSync)"
      ]
    },
    {
      "package": "spi-node",
      "jsxray": 2,
      "charon": 3,
      "diffs": [
        "(spiSupported,Boolean)"
      ]
    },
    {
      "package": "sqlite3-electron",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "sqlite3-rebuilt",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "swisseph",
      "jsxray": 85,
      "charon": 86,
      "diffs": [
        "(name,name)"
      ]
    },
    {
      "package": "swisseph-v2",
      "jsxray": 85,
      "charon": 86,
      "diffs": [
        "(name,name)"
      ]
    },
    {
      "package": "talib",
      "jsxray": 3,
      "charon": 5,
      "diffs": [
        "(functions,Functions)",
        "(functionUnstIds,FunctionUnstIds)"
      ]
    },
    {
      "package": "trend_app_protect",
      "jsxray": 17,
      "charon": 19,
      "diffs": [
        "(enabled,Enabled)",
        "(uuid,Uuid)",
        "(length,Length)"
      ]
    },
    {
      "package": "@tzmedical/trident-sdk",
      "jsxray": 29,
      "charon": 32,
      "diffs": [
        "(status,Number)",
        "(error,String)",
        "(log,String)"
      ]
    },
    {
      "package": "v8-profiler-next",
      "jsxray": 15,
      "charon": 17,
      "diffs": [
        "(startSamplingHeapProfiling,SamplingHeapProfiler)",
        "(stopSamplingHeapProfiling,SamplingHeapProfiler)",
        "(1,data)",
        "(2,data)",
        "(startProfiling,CpuProfiler)",
        "(stopProfiling,CpuProfiler)",
        "(setSamplingInterval,CpuProfiler)",
        "(collectSample,CpuProfiler)",
        "(setGenerateType,CpuProfiler)",
        "(setProfilesCleanupLimit,CpuProfiler)",
        "(name,name)",
        "(takeSnapshot,HeapProfiler)",
        "(startTrackingHeapObjects,HeapProfiler)",
        "(stopTrackingHeapObjects,HeapProfiler)",
        "(getHeapStats,HeapProfiler)",
        "(getObjectByHeapObjectId,HeapProfiler)",
        "(getHeapObjectId,HeapProfiler)"
      ]
    },
    {
      "package": "v8-sandbox",
      "jsxray": 8,
      "charon": 11,
      "diffs": [
        "(_dispatch,Dispatch)",
        "(args,arguments)",
        "(message,message)",
        "(sourceLine,sourceLine)"
      ]
    },
    {
      "package": "@vgrid/x509",
      "jsxray": 5,
      "charon": 7,
      "diffs": [
        "(altNames,altNames)",
        "(extensions,extensions)"
      ]
    },
    {
      "package": "@votingworks/qrdetect",
      "jsxray": 1,
      "charon": 7,
      "diffs": [
        "(type,Number)",
        "(orientation,Number)",
        "(x,Number)",
        "(y,Number)",
        "(quality,Number)",
        "(version,String)"
      ]
    },
    {
      "package": "vscode-sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "@wmakeev/borders-detection",
      "jsxray": 1,
      "charon": 8,
      "diffs": [
        "(imgWidth,Number)",
        "(imgHeight,Number)",
        "(minX,Number)",
        "(minY,Number)",
        "(maxX,Number)",
        "(maxY,Number)",
        "(pixelsCount,Number)"
      ]
    },
    {
      "package": "@wwa/statvfs",
      "jsxray": 2,
      "charon": 11,
      "diffs": [
        "(errno,Value)",
        "(path,Value)",
        "(type,Value)",
        "(bsize,Value)",
        "(blocks,Value)",
        "(bfree,Value)",
        "(bavail,Value)",
        "(files,Value)",
        "(ffree,Value)"
      ]
    },
    {
      "package": "xdelta-async-nodejs-addon",
      "jsxray": 3,
      "charon": 4,
      "diffs": [
        "(code,res)"
      ]
    },
    {
      "package": "xiaomi-wristband-decoder",
      "jsxray": 2,
      "charon": 4,
      "diffs": [
        "(name,String)",
        "(rssi,Number)",
        "(mac,String)",
        "(data,data)"
      ]
    },
    {
      "package": "@y2zz/sharp",
      "jsxray": 11,
      "charon": 12,
      "diffs": [
        "(background,background)"
      ]
    },
    {
      "package": "@ycanince/sqlite3",
      "jsxray": 20,
      "charon": 23,
      "diffs": [
        "(idle,IdleGetter)",
        "(completed,CompletedGetter)",
        "(failed,FailedGetter)",
        "(remaining,RemainingGetter)",
        "(pageCount,PageCountGetter)",
        "(open,OpenGetter)"
      ]
    },
    {
      "package": "@yosiat/stack-frames",
      "jsxray": 1,
      "charon": 2,
      "diffs": [
        "(file_name,scriptName)"
      ]
    },
    {
      "package": "yrp",
      "jsxray": 6,
      "charon": 10,
      "diffs": [
        "(id,Number)",
        "(version,Number)",
        "(flag,Number)",
        "(seed,Number)",
        "(dataSize,Number)",
        "(hash,Number)",
        "(startLP,Number)",
        "(startHand,Number)",
        "(drawCount,Number)",
        "(duelFlags,Number)"
      ]
    },
    {
      "package": "zlib-organic",
      "jsxray": 4,
      "charon": 15,
      "diffs": [
        "(ZLIB_VERSION,String)",
        "(ZLIB_VERNUM,Number)",
        "(ZLIB_VER_MAJOR,Number)",
        "(ZLIB_VER_MINOR,Number)",
        "(ZLIB_VER_REVISION,Number)",
        "(ZLIB_VER_SUBREVISION,Number)",
        "(Z_NO_FLUSH,Number)",
        "(Z_PARTIAL_FLUSH,Number)",
        "(Z_SYNC_FLUSH,Number)",
        "(Z_FULL_FLUSH,Number)",
        "(Z_FINISH,Number)",
        "(Z_BLOCK,Number)",
        "(Z_TREES,Number)",
        "(MODE_ENCODE,Number)",
        "(MODE_DECODE,Number)"
      ]
    },
    {
      "package": "zlib-sync",
      "jsxray": 2,
      "charon": 6,
      "diffs": [
        "(chunkSize,GetChunkSize)",
        "(err,GetErr)",
        "(msg,GetMsg)",
        "(result,GetResult)",
        "(windowBits,GetWindowBits)"
      ]
    },
    {
      "package": "zookeeper",
      "jsxray": 23,
      "charon": 27,
      "diffs": [
        "(toStrTest,toStrTest)",
        "(convertUnixTimeToDateTest,convertUnixTimeToDateTest)",
        "(toBoolTest,toBoolTest)",
        "(toIntTest,toIntTest)",
        "(toUintTest,toUintTest)"
      ]
    }
  ]
}