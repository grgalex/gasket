{
  "0x-monorepo-development": [],
  "@131/sqlite3": [
    "(remaining,RemainingGetter)",
    "(completed,CompletedGetter)",
    "(open,OpenGetter)",
    "(idle,IdleGetter)",
    "(pageCount,PageCountGetter)",
    "(failed,FailedGetter)"
  ],
  "@2048k/evm-node": [],
  "@2060.io/ffi-napi": [],
  "@3xpo/argon2": [],
  "64": [],
  "@6river/sqlite3": [
    "(remaining,RemainingGetter)",
    "(completed,CompletedGetter)",
    "(open,OpenGetter)",
    "(idle,IdleGetter)",
    "(pageCount,PageCountGetter)",
    "(failed,FailedGetter)"
  ],
  "@aabuhijleh/forcefocus": [],
  "@abandonware/bluetooth-hci-socket": [],
  "abletonlink": [],
  "abletonlink-addon": [],
  "abstract-socket": [],
  "ac-syslogh": [],
  "actual-crash": [],
  "addlib": [],
  "addonie": [],
  "@adeperio/forcefocus": [],
  "ads-kerberos": [
    "(contextComplete,KerberosClient)",
    "(contextComplete,KerberosServer)",
    "(username,KerberosServer)",
    "(username,KerberosClient)",
    "(response,KerberosServer)",
    "(response,KerberosClient)",
    "(responseConf,KerberosClient)",
    "(targetName,KerberosServer)"
  ],
  "ads-kerberos2": [
    "(contextComplete,KerberosClient)",
    "(contextComplete,KerberosServer)",
    "(username,KerberosServer)",
    "(username,KerberosClient)",
    "(response,KerberosServer)",
    "(response,KerberosClient)",
    "(responseConf,KerberosClient)",
    "(targetName,KerberosServer)"
  ],
  "aerospike": [],
  "aes-ccm": [],
  "ailoy-node": [],
  "@aimelo/lua": [
    "(result,Number)"
  ],
  "@airbnb/node-memwatch": [],
  "@aitsys/sharp": [],
  "@akikowo/chemical-balancer": [],
  "@akimasa/vscode-sqlite3": [
    "(remaining,RemainingGetter)",
    "(completed,CompletedGetter)",
    "(open,OpenGetter)",
    "(idle,IdleGetter)",
    "(pageCount,PageCountGetter)",
    "(failed,FailedGetter)"
  ],
  "@akiroz/bluetooth-hci-socket": [],
  "@akiroz/sharp": [],
  "@alac/decoder": [],
  "@alac/encoder": [],
  "@alien.sh/signals": [],
  "ali-usb_ctl": [
    "(switchUsbPort,switchUsbPort)"
  ],
  "@alminde/tfjs-node": [],
  "alsa-capture": [],
  "alsa-volume": [],
  "@amoo-miki/node-sass": [
    "(success,ReturnCallback)",
    "(String,String)",
    "(Map,Map)",
    "(Number,Number)",
    "(List,List)",
    "(css,css)",
    "(Null,Null)",
    "(Error,Error)",
    "(Boolean,Boolean)",
    "(Color,Color)"
  ],
  "am_turbo-net": [],
  "a-napi-example": [],
  "a-native-example": [],
  "@animetosho/parpar": [],
  "anitomy-js": [],
  "annoy": [],
  "annoy-node": [],
  "@antimatterhq/antimatter": [],
  "@apminsight/native-stats": [
    "(pause,data)",
    "(endTime,data)",
    "(pauseMS,data)",
    "(gctype,data)",
    "(startTime,data)"
  ],
  "@apocentre/xoshiro": [],
  "apoxusbcan": [
    "(sendCanBusMessage,ApoxUsbCan)",
    "(34,size)",
    "(28,size)",
    "(sendBoardMessage,ApoxUsbCan)",
    "(open,ApoxUsbCan)",
    "(close,ApoxUsbCan)"
  ],
  "applicationinsights-native-metrics": [
    "(diff,self)",
    "(loopUsage,self)",
    "(current,self)"
  ],
  "@appoptics/apm-bindings": [
    "(status,Number)",
    "(MAX_METADATA_PACK_LEN,Number)",
    "(totalActive,Number)",
    "(averageLifetime,Number)",
    "(OBOE_SQLSANITIZE_AUTO,Number)",
    "(rate,Number)",
    "(tracing_mode,Number)",
    "(flag_sample_start,Boolean)",
    "(MAX_OP_ID_LEN,Number)",
    "(smallActive,Number)",
    "(eventQueueFree,Number)",
    "(flag_through_always,Boolean)",
    "(collectorLimitExceeded,Number)",
    "(OBOE_SQLSANITIZE_KEEPDOUBLE,Number)",
    "(averageSendtime,Number)",
    "(tokenBucketRate,Number)",
    "(collectorTryLater,Number)",
    "(kKeepAliveIntervalSeconds,Number)",
    "(MAX_SAMPLE_RATE,Number)",
    "(count,Number)",
    "(doMetrics,Boolean)",
    "(sendtime,Number)",
    "(doSample,Boolean)",
    "(edge,Boolean)",
    "(name,String)",
    "(lifetime,Number)",
    "(typeProvisioned,Number)",
    "(reporterInitCount,Number)",
    "(message,String)",
    "(TRACE_ALWAYS,Number)",
    "(totalCreated,Number)",
    "(authMessage,String)",
    "(collectorOk,Number)",
    "(metadataFromXtrace,Boolean)",
    "(fullActive,Number)",
    "(MAX_TASK_ID_LEN,Number)",
    "(TRACE_NEVER,Number)",
    "(totalDestroyed,Number)",
    "(bytesUsed,Number)",
    "(sentCount,Number)",
    "(value,value)",
    "(value,Number)",
    "(authStatus,Number)",
    "(bytesFreed,Number)",
    "(addHostTag,Boolean)",
    "(addHostTag,o)",
    "(source,Number)",
    "(totalBytesAllocated,Number)",
    "(OBOE_SQLSANITIZE_DROPDOUBLE,Number)",
    "(tokenBucketCapacity,Number)",
    "(sample_rate,Number)"
  ],
  "@aptoma/sharp": [],
  "apx-native-module": [],
  "@archwayhq/keyring-go": [],
  "argon2": [],
  "@arition/torch-js": [],
  "ascom-verdaccio": [
    "(removeProbe,DTraceProvider)",
    "(fire,DTraceProvider)",
    "(addProbe,DTraceProvider)",
    "(disable,DTraceProvider)",
    "(enable,DTraceProvider)",
    "(fire,DTraceProbe)"
  ],
  "@asdftempfix/serialport-bindings": [
    "(baudRate,data)",
    "(dsr,data)",
    "(cts,data)",
    "(dcd,data)"
  ],
  "asfw": [],
  "@ashok_gujjar92/symbology_18": [],
  "async-ioctl": [],
  "@ataberkylmz/hx711": [],
  "atomic-counters": [],
  "atomium": [],
  "@atom/nsfw": [],
  "atzneextracter": [],
  "@audc/libsamplerate": [
    "(setRatio,SampleRateStream)"
  ],
  "audify": [],
  "audio-processing": [],
  "@au-re/libpg-query": [
    "(cursorPosition,Value)",
    "(lineNumber,Value)",
    "(context,Value)"
  ],
  "@automattic/yara": [],
  "auto-object": [],
  "availvideobuffer": [],
  "awe-sqlite3": [],
  "@axosoft/spellchecker": [
    "(setDictionary,Spellchecker)"
  ],
  "@b2wads/lru-native2": [],
  "@baliset/mmap-io": [],
  "bcrypt": [],
  "bcrypt-deterministic": [],
  "bcrypto": [],
  "bcrypt-small": [],
  "bcrypt-updated": [],
  "bdb": [],
  "better-sqlite3": [],
  "better-sqlite3-multiple-ciphers": [],
  "bfast-cloud": [],
  "bfast-database": [],
  "bglobal-signal": [],
  "bhtsne": [],
  "@bigemap/usb-detection": [],
  "bigint-buffer": [],
  "bigint-hash": [],
  "bignum": [],
  "bitcoinnova-crypto": [],
  "@bithighlander/usb-detection": [],
  "bkjs-cache": [],
  "bkjs-sqlite": [
    "(open,OpenGetter)",
    "(mode,mode)",
    "(inserted_oid,InsertedOidGetter)",
    "(name,filename)",
    "(sql,sql)",
    "(affected_rows,AffectedRowsGetter)"
  ],
  "bkjs-syslog": [],
  "bkjs-utils": [],
  "bkjs-wand": [],
  "bktree-fast": [],
  "blake2": [],
  "blake-hash": [],
  "bling-hashes": [],
  "bodmas": [],
  "bole-first-test": [],
  "boost-geospatial-index": [],
  "boyia-npm": [],
  "@bpnetguy/sharp": [
    "(background,background)"
  ],
  "@breush/ref-napi": [],
  "broadcast-interfaces": [
    "(broadcast,String)",
    "(name,String)",
    "(internal,Boolean)",
    "(running,Boolean)",
    "(address,String)"
  ],
  "bsdiff-node": [],
  "bsdiff-nodejs": [],
  "bsdp": [],
  "bsip": [],
  "bson-ext": [],
  "bstring": [
    "(1,data)"
  ],
  "@buckyos/node-kcp": [],
  "@buckyos/segfault-handler": [],
  "@buckyos/socketwatcher": [
    "(set,SocketWatcher)",
    "(start,SocketWatcher)",
    "(stop,SocketWatcher)"
  ],
  "buffer2address": [],
  "bufferutil": [],
  "@bugsnag/plugin-electron-app": [],
  "@bugsnag/plugin-electron-client-state-persistence": [],
  "buildthing-bluetooth-hci-socket": [],
  "bungle": [],
  "bunyan-syslog": [],
  "c4solver": [],
  "caki": [],
  "@calculux/connector": [],
  "caliban": [],
  "@camol/file-lock": [
    "(setFilePath,FileLock)"
  ],
  "@camol/mmap": [],
  "canvas-mirror": [],
  "canvas-terminal": [],
  "canvas-termuc": [],
  "canvas-zj-node-v1": [],
  "casclib": [],
  "catboost": [
    "(setPredictionType,TModel)"
  ],
  "catboost-model": [],
  "@cathodique/mmap-io": [],
  "@cathodique/usocket": [],
  "cbor-extract": [],
  "@cbrewster/luna": [],
  "@cdktf/node-pty-prebuilt-multiarch": [],
  "cd-node-napi-test": [],
  "cdt-gdb-adapter": [],
  "ced": [],
  "@celtium/doge-idle-time": [],
  "@cfg.plat/lodepng": [
    "(data,data)"
  ],
  "c-float-divide": [],
  "chacent": [],
  "check-caps": [],
  "checkpromise": [],
  "child_process_tiny": [],
  "child_pty-fixedv12": [],
  "chimera-crypto": [],
  "ckmeans-native": [],
  "c-kzg": [],
  "classic-level": [],
  "cld": [],
  "clear-env": [],
  "clipboard-data": [],
  "@cloudpss/zstd": [],
  "cm256": [],
  "cmake2json": [],
  "cmark-gfm": [
    "(cmark_version,String)"
  ],
  "cmsn-bluetooth-hci-socket": [],
  "@codeporter/robotjs": [],
  "@codspeed/core": [],
  "computron": [
    "(nullptr,BlankHandler)"
  ],
  "@confluentinc/kafka-javascript": [],
  "confusablematcher-js-interop": [],
  "connect4-bot": [],
  "@connectedyard/phin-ecdh": [],
  "@conr2d/bcrypto": [],
  "@contaquanto/chevronlib": [],
  "@contrast/agent-lib": [],
  "@contrast/code-events": [],
  "@contrast/distringuish": [],
  "@contrast/distringuish-prebuilt": [],
  "@contrast/fn-inspect": [],
  "@contrast/stash": [],
  "@corbinu/couchbase": [],
  "corelink-trail-smoothifier": [],
  "corona-school-matching": [],
  "cortex-cpp": [],
  "@cosmicmedia/bcrypt": [],
  "cozo-node": [],
  "cpp-add": [],
  "cpp-hexgenerator": [],
  "cpp-time": [],
  "cppzst": [
    "(- Set a larger chainLog (eg. --zstd=chainLog=%u)\\n,size_t)"
  ],
  "cpuid-git": [],
  "cpu-instructions": [],
  "crc64cpp": [],
  "crc64-ecma182": [],
  "crfsuite": [
    "(set_params,TrainerClass)",
    "(Tagger,func)",
    "(Trainer,func)"
  ],
  "crypt3-passwd": [],
  "cryptian": [],
  "@cryptlex/lexactivator": [],
  "@cryptlex/lexfloatclient": [],
  "crypto-incognito": [],
  "@csc1/shacrypt": [],
  "ctags": [
    "(end,Tags)",
    "(findTags,Tags)",
    "(getTags,Tags)",
    "(exists,Tags)"
  ],
  "@cubbit/enigma": [],
  "cubiomes": [],
  "cue-sdk": [],
  "cue-sdk-cove": [],
  "@curlconverter/tree-sitter-bash": [],
  "curve25519-n": [],
  "curve25519-n2": [],
  "cypher.js": [],
  "darknet-bindings": [],
  "data-ann-native-addon-test": [],
  "@datadog/native-iast-taint-tracking": [],
  "@datadog/native-metrics": [],
  "@datadog/pprof": [],
  "@dataee/sockopt": [],
  "@davedoesdev/fs-ext": [],
  "db4bix": [],
  "dblogger": [],
  "dbus": [
    "(emitSignal,Signal)",
    "(setSignalHandler,Signal)"
  ],
  "ddamsign": [],
  "deadline-math": [],
  "deasync": [],
  "debstep": [],
  "decimal102": [],
  "decoder1090-c": [],
  "deltachat-node": [],
  "@dennisameling/sharp-arm64-win-temp": [],
  "deps-verdaccio": [
    "(removeProbe,DTraceProvider)",
    "(fire,DTraceProvider)",
    "(addProbe,DTraceProvider)",
    "(disable,DTraceProvider)",
    "(enable,DTraceProvider)",
    "(fire,DTraceProbe)"
  ],
  "desktop-idle": [],
  "desktop-idle-prebuild": [],
  "desktop-idle-prebuilt": [],
  "desktopshortcuts": [],
  "@desktop.vision/libnut-linux": [],
  "detect-character-encoding": [
    "(u[[:Bidi_Control:]],status)",
    "(u[\u221e],status)",
    "(this,foldSet)",
    "(nullptr,status)",
    "(0x39,CollationSettings)",
    "(this,workingDescription)",
    "(exports,DetectCharacterEncoding)",
    "(0,status)",
    "(1,status)",
    "(u[\u066c\u2018\\\\u0020\\\\u00A0\\\\u2000-\\\\u200A\\\\u202F\\\\u205F\\\\u3000],status)",
    "(1,UnicodeSet)",
    "(2,length)",
    "(0,UnicodeSet)",
    "(this,UVector)",
    "(0x10000,UnicodeSet)",
    "(0,p)",
    "(1,n)",
    "(u[[:Zs:][\\\\u0009][:Bidi_Control:][:Variation_Selector:]],status)",
    "(0,data)",
    "(u[:^S:],status)",
    "(u[:digit:],status)",
    "(1,NFRuleSet)"
  ],
  "detect-fullscreen": [],
  "dev_fastlz": [],
  "devlz": [
    "(add,Add)"
  ],
  "@dhruvit_r/pathwatcher": [
    "(0,handle)"
  ],
  "diat-addon": [],
  "dicom-dimse-native": [],
  "dicom-to-json": [],
  "discord-game": [],
  "@discordjs/opus": [
    "(setBitrate,OpusEncoder)"
  ],
  "diskfree": [],
  "disk-tool": [],
  "diskusage": [],
  "displays": [
    "(left,DisplayImpl)",
    "(height,DisplayImpl)",
    "(width,DisplayImpl)",
    "(top,DisplayImpl)"
  ],
  "@div_arora/libpg-query": [
    "(cursorPosition,Value)",
    "(cursorPosition,Integer)",
    "(parsePlPgSQL,MethodPlPgSQL)",
    "(context,Value)",
    "(stderr,String)",
    "(fileName,String)",
    "(functionName,String)",
    "(message,String)",
    "(parseQuery,Method)",
    "(lineNumber,Value)",
    "(parsePlPgSQLAsync,MethodPlPgSQLAsync)",
    "(lineNumber,Integer)",
    "(context,String)",
    "(parseQueryAsync,MethodAsync)"
  ],
  "@divy-work/native-utils": [
    "(17,hmem)"
  ],
  "@divy-work/spin-cc": [],
  "@dooub/rocksdb-nodejs": [],
  "dotnode-js": [],
  "drivelist": [
    "(isSystem,Boolean)",
    "(device,String)",
    "(blockSize,Number)",
    "(logicalBlockSize,Number)",
    "(isVirtual,Boolean)",
    "(isCard,Boolean)",
    "(enumerator,String)",
    "(isUSB,Boolean)",
    "(busType,String)",
    "(isRemovable,Boolean)",
    "(description,String)",
    "(partitionTableType,String)",
    "(isReadOnly,Boolean)",
    "(label,String)",
    "(size,Number)",
    "(path,String)",
    "(error,String)",
    "(isSCSI,Boolean)",
    "(raw,String)"
  ],
  "drive-name": [],
  "@drorgl/talib": [
    "(functions,Functions)",
    "(functionUnstIds,FunctionUnstIds)"
  ],
  "dualshock": [],
  "@duck4i/llama": [],
  "duckdb": [],
  "dumpme": [],
  "dvbtee": [],
  "dylib": [],
  "easybotics-rpi-rgb-led-matrix": [],
  "easy-sleep": [],
  "eboxprinter": [],
  "@ecervo/canvas": [],
  "ed25519": [],
  "ed25519-supercop": [],
  "efsw": [],
  "eiows": [],
  "@elchetz/cld": [],
  "ele-500-sql3": [
    "(remaining,RemainingGetter)",
    "(completed,CompletedGetter)",
    "(open,OpenGetter)",
    "(idle,IdleGetter)",
    "(pageCount,PageCountGetter)",
    "(failed,FailedGetter)"
  ],
  "ele6-sqlite3": [
    "(remaining,RemainingGetter)",
    "(completed,CompletedGetter)",
    "(open,OpenGetter)",
    "(idle,IdleGetter)",
    "(pageCount,PageCountGetter)",
    "(failed,FailedGetter)"
  ],
  "@eleccookie/ref-napi": [],
  "electron-active-window": [],
  "electron-application-desktop-toolbar": [],
  "electron-clipboard-files": [],
  "electron-disable-minimize": [],
  "electron-diskusage": [],
  "electron-drivelist": [],
  "electron-fsdes": [],
  "electron-overlay-window": [],
  "@electron-prebuilds-preview/parcel-watcher": [
    "(type,String)",
    "(path,String)"
  ],
  "elios-protocol": [],
  "embeddable-wg": [],
  "ems": [
    "(data,String)",
    "(end,Value)",
    "(start,Value)",
    "(mmapID,Value)"
  ],
  "enhanced_promise": [],
  "enigmawrap": [],
  "@eosrio/node-abieos": [],
  "@epaperjs/rpi-2in13-bc": [],
  "@episensor/bluetooth-hci-socket": [],
  "epoll": [],
  "equate": [],
  "@ericvanwyk/tree-sitter-oberon0": [],
  "eris-profiler": [],
  "eris-sleep": [],
  "eris-snapshot": [],
  "erlpack": [],
  "@esfx/equatable": [],
  "espresso-logic-minimizer": [],
  "essy-fft": [],
  "essy-nnls": [],
  "@eth-optimism/ganache-cli": [],
  "@eugenepankov/system-idle-time": [],
  "evdev": [],
  "event-loop-native": [],
  "event-loop-stats": [],
  "@evolvingriley/file-upload": [],
  "exclusive-keyboard": [],
  "fadvise": [],
  "faiss-napi": [],
  "faiss-node": [],
  "@faressoft/node-pty-prebuilt": [],
  "farmhash": [],
  "fast-bigint": [],
  "fast-feed": [
    "(author,name)",
    "(length,length)",
    "(name,name)"
  ],
  "fast-find-in-files": [],
  "fast-is-utf8": [],
  "fastnoisejs": [
    "(Value,Number)",
    "(WhiteNoise,Number)",
    "(CubicFractal,Number)",
    "(Distance2Mul,Number)",
    "(CellValue,Number)",
    "(SetNoiseType,FastNoiseJs)",
    "(SetFractalGain,FastNoiseJs)",
    "(Natural,Number)",
    "(SetFractalOctaves,FastNoiseJs)",
    "(NoiseLookup,Number)",
    "(Euclidean,Number)",
    "(SetSeed,FastNoiseJs)",
    "(Distance2Sub,Number)",
    "(Cubic,Number)",
    "(RigidMulti,Number)",
    "(SetCellularDistance2Indices,FastNoiseJs)",
    "(SetCellularDistanceFunction,FastNoiseJs)",
    "(SetFractalLacunarity,FastNoiseJs)",
    "(Cellular,Number)",
    "(PerlinFractal,Number)",
    "(SetInterp,FastNoiseJs)",
    "(Hermite,Number)",
    "(SetCellularJitter,FastNoiseJs)",
    "(SetFractalType,FastNoiseJs)",
    "(ValueFractal,Number)",
    "(SetFrequency,FastNoiseJs)",
    "(Simplex,Number)",
    "(Manhattan,Number)",
    "(SetCellularReturnType,FastNoiseJs)",
    "(Linear,Number)",
    "(Distance2Div,Number)",
    "(Perlin,Number)",
    "(SimplexFractal,Number)",
    "(Billow,Number)",
    "(Distance,Number)",
    "(Quintic,Number)",
    "(Distance2Add,Number)",
    "(FBM,Number)",
    "(Distance2,Number)"
  ],
  "fastpug": [],
  "fast-string-search": [],
  "fasttail": [],
  "fasttext": [
    "(value,Number)",
    "(label,String)"
  ],
  "fast-uuidv4": [],
  "fd-lock": [],
  "fdpassing": [],
  "@felixrieseberg/spellchecker": [
    "(add,Spellchecker)",
    "(remove,Spellchecker)",
    "(getAvailableDictionaries,Spellchecker)",
    "(end,end)",
    "(checkSpelling,Spellchecker)",
    "(setDictionary,Spellchecker)",
    "(getCorrectionsForMisspelling,Spellchecker)",
    "(isMisspelled,Spellchecker)"
  ],
  "ffi-napi-v22": [],
  "fileworkbyaleksbelka": [
    "(nextResult,read_next_result)",
    "(cancelQuery,cancel_statement)",
    "(rollback,rollback)",
    "(freeStatement,free_statement)",
    "(pollingMode,polling_mode)",
    "(close,close)",
    "(query,query)",
    "(prepare,prepare)",
    "(type,type_name)",
    "(bindQuery,bind_query)",
    "(beginTransaction,begin_transaction)",
    "(commit,commit)",
    "(callProcedure,call_procedure)",
    "(readColumn,read_column)",
    "(open,open)",
    "(unbind,unbind)"
  ],
  "finalize-addon": [],
  "find-git-repositories": [],
  "fit-native": [],
  "fixed-node-canvas": [],
  "fjt-walter": [],
  "flatbuffers-addon": [],
  "@flat/lame": [],
  "flock-rs": [],
  "flocon-new": [],
  "@floffah/node-memwatch": [],
  "@flowaccount/node-icu-tokenizer": [
    "(end,Number)",
    "(start,Number)"
  ],
  "floweejs": [],
  "flow-parser-bin": [],
  "flush-all": [],
  "fmemory": [],
  "fontnik": [],
  "forcefocus": [],
  "frankda-newrelic-native-metrics": [],
  "freetype2": [
    "(setTransform,FontFace)",
    "(setPixelSizes,FontFace)",
    "(setCharSize,FontFace)"
  ],
  "frk": [],
  "frog-jump-master": [],
  "@frosttusk/ginger": [],
  "fs-admin": [],
  "fsctl": [],
  "fs-ext": [],
  "fs-extended-attributes": [],
  "@fsiot/heatshrink": [],
  "fstime": [],
  "fs-xattr": [],
  "@fttx/robotjs": [],
  "fullname-native": [
    "(exports,name)"
  ],
  "fuzzaldrin-plus-fast": [],
  "@gamergenic/js-spice": [
    "(0,Number)",
    "(w,q)",
    "(x,q)",
    "(z,q)",
    "(y,q)",
    "(1,Number)"
  ],
  "ganache-cli": [],
  "@ganeshmogare/bodmas": [],
  "@gatsbyjs/sharp": [],
  "@gbkwiatt/node-rpi-ws281x-native": [],
  "gcontext": [],
  "gc-profiler": [],
  "gc-stats": [
    "(pause,data)",
    "(endTime,data)",
    "(pauseMS,data)",
    "(gctype,data)",
    "(startTime,data)"
  ],
  "gcstats.js": [
    "(start,data)",
    "(end,data)"
  ],
  "gc-watch": [],
  "gdal-async": [],
  "@genee/desktop-idle": [],
  "generate-rsa-keypair": [],
  "genx": [],
  "@gera2ld/robotjs": [],
  "get-cursor-position": [],
  "@getjerry/lambda-at-edge": [],
  "getrusage": [],
  "@gifyourgame/spawn-as-admin": [],
  "@gilsdav/robotjs": [],
  "git-utils": [
    "(getSubmodulePaths,Repository)",
    "(add,Repository)",
    "(getStatus,Repository)",
    "(checkoutRef,Repository)",
    "(getDiffStats,Repository)",
    "(compareCommits,Repository)",
    "(isSubmodule,Repository)",
    "(getReferences,Repository)",
    "(getHeadAsync,Repository)",
    "(getReferenceTarget,Repository)",
    "(getPath,Repository)",
    "(_release,Repository)",
    "(getLineDiffDetails,Repository)",
    "(checkoutHead,Repository)",
    "(_getWorkingDirectory,Repository)",
    "(getHead,Repository)",
    "(refreshIndex,Repository)",
    "(setConfigValue,Repository)",
    "(isIgnored,Repository)",
    "(getIndexBlob,Repository)",
    "(getStatusAsync,Repository)",
    "(exists,Repository)",
    "(compareCommitsAsync,Repository)",
    "(getConfigValue,Repository)",
    "(getLineDiffs,Repository)",
    "(getHeadBlob,Repository)",
    "(getStatusForPath,Repository)"
  ],
  "gl": [
    "(size,size)",
    "(name,name)",
    "(setError,WebGLRenderingContext)",
    "(cleanup,WebGLRenderingContext)",
    "(type,type)"
  ],
  "@glaced/gles2-2.0": [],
  "@glaced/glfw": [],
  "gl-client": [],
  "glfw-n-api": [],
  "glpk": [
    "(addRow,AddRow)",
    "(canBranch,CanBranch)",
    "(reason,Reason)",
    "(poolSize,PoolSize)",
    "(heurSol,HeurSol)",
    "(rowAttrib,RowAttrib)",
    "(treeSize,TreeSize)",
    "(terminate,Terminate)",
    "(prevNode,PrevNode)",
    "(nodeBound,NodeBound)",
    "(clearPool,ClearPool)",
    "(currNode,CurrNode)",
    "(nodeLevel,NodeLevel)",
    "(delRow,DelRow)",
    "(bestNode,BestNode)",
    "(mipGap,MipGap)",
    "(selectNode,SelectNode)",
    "(branchUpon,BranchUpon)",
    "(upNode,UpNode)",
    "(nextNode,NextNode)"
  ],
  "@gnaudio/jabra-node-sdk": [],
  "@goblinalchemist/nodejieba": [],
  "goosig": [],
  "go-text-template-napi": [],
  "gphoto2": [],
  "gpt4all": [],
  "@graphistry/node-pigz": [
    "(deflate,DeflateMethod)"
  ],
  "@graphprotocol/indexer-native": [],
  "@gregnr/libpg-query": [
    "(cursorPosition,Value)",
    "(lineNumber,Value)",
    "(context,Value)"
  ],
  "grpc": [],
  "grpc-patch": [],
  "grpc-zjl": [],
  "gssapi.js": [],
  "gtk-utils": [],
  "gt-usb": [],
  "h3-node": [],
  "haddley-factorial-cc": [],
  "@haggholm/damerau-levenshtein": [],
  "happy-birthday-vipyne": [],
  "hargument": [],
  "hca-decoder": [],
  "hci-socket": [],
  "hc_socketcan": [],
  "hc_socketcan2": [],
  "heapdump": [],
  "heapdump-next": [],
  "heapdump-prebuild": [],
  "hello-addon": [],
  "hello-hiro": [],
  "hello-hiro-js": [],
  "hello_publishing-native-pre-gyp": [],
  "@hfelix/spellchecker": [
    "(setDictionary,Spellchecker)"
  ],
  "hhello": [],
  "hidden-machine-example-http": [],
  "hide-cursor": [],
  "highwayhash": [],
  "hikopenapi-node": [],
  "@hmodarres/robotjs": [],
  "@homebridge/node-pty-prebuilt-multiarch": [],
  "@howlin/bluetooth-hci-socket": [],
  "hs-miner": [],
  "hts-encrypt": [],
  "huskee-core": [],
  "huskee-install": [
    "(send,Send)",
    "(save,Save)"
  ],
  "hwrap": [],
  "hybrixd": [],
  "i2c-bus": [],
  "i2c-bus-i2c-1": [],
  "ibm_db": [
    "(SQL_DESC_CONSIZE_TYPE,self)",
    "(connected,ConnectedGetter)",
    "(SQL_DESC_SCALE,self)",
    "(SQL_DESC_NAME,self)",
    "(SQL_DESC_TYPE_NAME,self)",
    "(0,js_result)",
    "(SQL_DESC_LENGTH,self)",
    "(SQL_DESC_DISPLAY_SIZE,self)",
    "(0,codeSet)",
    "(SQL_DESC_PRECISION,self)",
    "(index,self)"
  ],
  "ibmmq": [
    "(ObjectType,Number)",
    "(BackoutCount,Number)",
    "(SubOptions,Number)",
    "(Report,Number)",
    "(Feedback,Number)",
    "(jsRc,Number)",
    "(PutWarningCount,Number)",
    "(NewMsgHandle,BigInt)",
    "(SubLevel,Number)",
    "(PutApplType,Number)",
    "(CodedCharSetId,Number)",
    "(Encoding,Number)",
    "(Priority,Number)",
    "(Persistence,Number)",
    "(jsCallType,Number)",
    "(PutFailureCount,Number)",
    "(ReturnedLength,Number)",
    "(ResolvedType,Number)",
    "(MsgSeqNumber,Number)",
    "(OriginalLength,Number)",
    "(RemoveRFH2,Boolean)",
    "(OriginalMsgHandle,BigInt)",
    "(PutSuccessCount,Number)",
    "(WaitInterval,Number)",
    "(BuildTime,String)",
    "(Options,Number)",
    "(OpenOptions,Number)",
    "(value,String)",
    "(CompCode,Number)",
    "(jsHObj,Number)",
    "(MsgType,Number)",
    "(Type,Number)",
    "(GroupStatus,Number)",
    "(jsHMsg,BigInt)",
    "(message,String)",
    "(SegmentStatus,Number)",
    "(jsHObjSub,Number)",
    "(jsCc,Number)",
    "(Offset,Number)",
    "(jsHConn,Number)",
    "(value,Number)",
    "(Segmentation,Number)",
    "(PropsLen,Number)",
    "(jsHObjQ,Number)",
    "(Expiry,Number)",
    "(Reason,Number)",
    "(PubLevel,Number)",
    "(jsDatalen,Number)",
    "(MsgFlags,Number)"
  ],
  "@ibsolution/hana-client-promise": [],
  "@icebob/node-memwatch": [],
  "@ices/node-addons-callbacks": [],
  "@ices/node-addons-hello": [],
  "iconv": [],
  "iconv-md5": [],
  "icu-transliterator": [],
  "@idango/crypt3": [],
  "@ifabos/kerberos": [],
  "@ikonopistsev/node-rapidjson": [
    "(bar,a)",
    "(1234,a)",
    "(foo,a)"
  ],
  "@ilb/posix": [
    "(mail,Number)",
    "(local0,Number)",
    "(odelay,Number)",
    "(local6,Number)",
    "(local3,Number)",
    "(local7,Number)",
    "(daemon,Number)",
    "(news,Number)",
    "(auth,Number)",
    "(uucp,Number)",
    "(code,Number)",
    "(local1,Number)",
    "(nowait,Number)",
    "(local4,Number)",
    "(name,String)",
    "(pid,Number)",
    "(shell,String)",
    "(local2,Number)",
    "(cons,Number)",
    "(kern,Number)",
    "(syslog,Number)",
    "(local5,Number)",
    "(dir,String)",
    "(lpr,Number)",
    "(uid,Number)",
    "(user,Number)",
    "(passwd,String)",
    "(cron,Number)",
    "(gid,Number)",
    "(ndelay,Number)",
    "(gecos,String)"
  ],
  "iltorb": [],
  "inclose5js": [],
  "inet_xtoy": [
    "(errno,Value)"
  ],
  "ingescape": [],
  "inotify-remastered": [
    "(addWatch,Inotify)",
    "(persistent,Inotify)",
    "(removeWatch,Inotify)",
    "(close,Inotify)"
  ],
  "int64-transform": [],
  "interruptor": [],
  "ioctl": [],
  "ioctl-napi": [],
  "ioctl-native": [],
  "@ionic/node-pty-prebuilt": [],
  "iot-util2": [],
  "@ipshipyard/node-datachannel": [],
  "isolated-vm": [],
  "is-valid-window": [],
  "iswasmfast": [
    "(intercept,Number)",
    "(slope,Number)",
    "(r2,Number)"
  ],
  "it8951": [],
  "@itsananderson/electron-sqlite3": [
    "(remaining,RemainingGetter)",
    "(completed,CompletedGetter)",
    "(open,OpenGetter)",
    "(idle,IdleGetter)",
    "(pageCount,PageCountGetter)",
    "(failed,FailedGetter)"
  ],
  "ivm-inspect": [
    "(isArgumentsObject,IsArgumentsObject)",
    "(isSymbolObject,IsSymbolObject)",
    "(isArrayBuffer,IsArrayBuffer)",
    "(isStringObject,IsStringObject)",
    "(getOwnNonIndexProperties,GetOwnNonIndexProperties)",
    "(isModuleNamespaceObject,IsModuleNamespaceObject)",
    "(getConstructorName,GetConstructorName)",
    "(isProxy,IsProxy)",
    "(isSharedArrayBuffer,IsSharedArrayBuffer)",
    "(isNumberObject,IsNumberObject)",
    "(isAnyArrayBuffer,IsAnyArrayBuffer)",
    "(isWeakMap,IsWeakMap)",
    "(isDataView,IsDataView)",
    "(previewEntries,PreviewEntries)",
    "(isExternal,IsExternal)",
    "(isAsyncFunction,IsAsyncFunction)",
    "(isSet,IsSet)",
    "(isWeakSet,IsWeakSet)",
    "(isBooleanObject,IsBooleanObject)",
    "(isGeneratorObject,IsGeneratorObject)",
    "(isBigIntObject,IsBigIntObject)",
    "(isBoxedPrimitive,IsBoxedPrimitive)",
    "(isGeneratorFunction,IsGeneratorFunction)",
    "(isMapIterator,IsMapIterator)",
    "(isMap,IsMap)",
    "(isSetIterator,IsSetIterator)",
    "(isNativeError,IsNativeError)",
    "(getProxyDetails,GetProxyDetails)",
    "(isDate,IsDate)",
    "(isRegExp,IsRegExp)",
    "(isPromise,IsPromise)"
  ],
  "jackpkg": [],
  "@jamesernator/weakref": [],
  "@jcoreio/i2c": [],
  "@jcoreio/kexec": [],
  "@jeeyah/nodeortools": [],
  "@jeff-tian/sleep": [],
  "jittertrng": [],
  "joamag-hello-node": [],
  "@joeblanchard/tree-sitter-ablec": [],
  "@joeblanchard/tree-sitter-ablec4pts": [],
  "@joeblanchard/tree-sitter-ablec4ptsdemo": [],
  "@joeblanchard/tree-sitter-oberon0": [],
  "@joergmittaglawo/dmvconfig": [],
  "@joshtwc/robotjs": [],
  "@jovian/fourq": [],
  "jsgui3-gfx-server": [],
  "js-inv-mpu": [],
  "js-native-ternary-buffer-tree": [],
  "@jsxt/weakref": [],
  "@julusian/freetype2": [
    "(setTransform,FontFace)",
    "(setPixelSizes,FontFace)",
    "(0,f)",
    "(setCharSize,FontFace)"
  ],
  "@julusian/jpeg-turbo": [],
  "@junsiklee/vscode-sqlite3": [
    "(lastID,Number)",
    "(changes,Number)"
  ],
  "@kabbi/aes-ccm": [],
  "@karlsen/process-list": [],
  "keccak": [],
  "kepler-display": [],
  "kepler-entities": [],
  "keras-predict": [],
  "kerberos": [],
  "keyboard-layout": [
    "(getCurrentKeyboardLanguage,KeyboardLayoutManager)",
    "(getCurrentKeymap,KeyboardLayoutManager)",
    "(getInstalledKeyboardLanguages,KeyboardLayoutManager)",
    "(getCurrentKeyboardLayout,KeyboardLayoutManager)"
  ],
  "keyboardrobotjs": [],
  "keytar-pass": [
    "(password,password)"
  ],
  "kf-node-addon": [],
  "kill-dash-nine": [],
  "klsudoku": [],
  "@kmamal/gl": [
    "(size,size)",
    "(name,name)",
    "(setError,WebGLRenderingContext)",
    "(cleanup,WebGLRenderingContext)",
    "(type,type)"
  ],
  "@knagyorg/node-firebird-native-api": [],
  "kociemba": [],
  "@kore/net": [],
  "koru": [],
  "@koush/sharp": [],
  "krb5": [],
  "kryptokrona-crypto": [],
  "kuzu": [],
  "@lamassu/supyo": [],
  "lame-private-no-maintainence-shrug2": [],
  "language-act-r": [],
  "@lastos/dbus": [
    "(emitSignal,Signal)",
    "(setSignalHandler,Signal)"
  ],
  "lbj_process_addon": [],
  "ldll": [],
  "left-clicky": [],
  "leo-test-cpp-module": [],
  "leveldown": [],
  "leveldown-nodejs-mobile": [],
  "@lgeiger/napi-prebuild-starter": [],
  "libcoreso_demo": [],
  "libjq": [],
  "libmaxminddb": [],
  "libpg-query": [
    "(cursorPosition,Value)",
    "(lineNumber,Value)",
    "(context,Value)"
  ],
  "libpg-query-m1-native": [
    "(cursorPosition,Value)",
    "(cursorPosition,Integer)",
    "(parsePlPgSQL,MethodPlPgSQL)",
    "(context,Value)",
    "(stderr,String)",
    "(fileName,String)",
    "(functionName,String)",
    "(message,String)",
    "(parseQuery,Method)",
    "(lineNumber,Value)",
    "(parsePlPgSQLAsync,MethodPlPgSQLAsync)",
    "(lineNumber,Integer)",
    "(context,String)",
    "(parseQueryAsync,MethodAsync)"
  ],
  "libpq": [
    "($stopRead,Connection)",
    "($getisnull,Connection)",
    "($ftablecol,Connection)",
    "($sendPrepare,Connection)",
    "($sendQueryPrepared,Connection)",
    "($resultStatus,Connection)",
    "($ftype,Connection)",
    "(be_pid,msg)",
    "($ntuples,Connection)",
    "($sendQueryParams,Connection)",
    "($flush,Connection)",
    "($ftable,Connection)",
    "($getCopyData,Connection)",
    "($notifies,Connection)",
    "($nparams,Connection)",
    "($isBusy,Connection)",
    "($connect,Connection)",
    "($startRead,Connection)",
    "($isNonBlocking,Connection)",
    "($fname,Connection)",
    "($socket,Connection)",
    "($setNonBlocking,Connection)",
    "($nfields,Connection)",
    "($putCopyData,Connection)",
    "($getResult,Connection)",
    "($execParams,Connection)",
    "(extra,msg)",
    "($getvalue,Connection)",
    "($getLastErrorMessage,Connection)",
    "($cmdTuples,Connection)",
    "($startWrite,Connection)",
    "($exec,Connection)",
    "($paramtype,Connection)",
    "(relname,msg)",
    "($connectSync,Connection)",
    "($putCopyEnd,Connection)",
    "($serverVersion,Connection)",
    "($sendQuery,Connection)",
    "($prepare,Connection)",
    "($cmdStatus,Connection)",
    "($cancel,Connection)",
    "($finish,Connection)",
    "($describePrepared,Connection)",
    "($consumeInput,Connection)",
    "($execPrepared,Connection)",
    "($clear,Connection)",
    "($resultErrorFields,Connection)",
    "($resultErrorMessage,Connection)"
  ],
  "libraw.js": [],
  "libscp": [],
  "libtidy": [],
  "libtidy-updated": [],
  "libxml2-nodejs": [],
  "libxmljs": [
    "(0,set)",
    "(0,result)",
    "(1,set)",
    "(push,XmlSaxParser)",
    "(this,ErrorFunc)",
    "(parseString,XmlSaxParser)"
  ],
  "libxmljs2": [
    "(prevElement,XmlText)",
    "(0,set)",
    "(schematronValidate,XmlDocument)",
    "(doc,XmlNode)",
    "(parent,XmlNode)",
    "(name,XmlText)",
    "(startAttributeNS,XmlTextWriter)",
    "(writeString,XmlTextWriter)",
    "(attrs,XmlElement)",
    "(1,set)",
    "(addNextSibling,XmlText)",
    "(nextElement,XmlElement)",
    "(prevElement,XmlElement)",
    "(nextSibling,XmlNode)",
    "(endAttribute,XmlTextWriter)",
    "(namespace,XmlAttribute)",
    "(addPrevSibling,XmlElement)",
    "(parseString,XmlSaxParser)",
    "(childNodes,XmlElement)",
    "(clone,XmlNode)",
    "(endDocument,XmlTextWriter)",
    "(name,XmlProcessingInstruction)",
    "(rngValidate,XmlDocument)",
    "(_setDtd,XmlDocument)",
    "(path,XmlElement)",
    "(replace,XmlElement)",
    "(text,XmlElement)",
    "(startComment,XmlTextWriter)",
    "(push,XmlSaxParser)",
    "(child,XmlElement)",
    "(endComment,XmlTextWriter)",
    "(name,XmlElement)",
    "(type,XmlNode)",
    "(text,XmlComment)",
    "(ns,ctxt)",
    "(_attr,XmlElement)",
    "(remove,XmlNode)",
    "(startElementNS,XmlTextWriter)",
    "(path,XmlText)",
    "(nextElement,XmlText)",
    "(endCdata,XmlTextWriter)",
    "(find,XmlElement)",
    "(encoding,XmlDocument)",
    "(root,XmlDocument)",
    "(type,XmlDocument)",
    "(namespace,XmlNode)",
    "(href,XmlNamespace)",
    "(startCdata,XmlTextWriter)",
    "(line,XmlNode)",
    "(toString,XmlNode)",
    "(node,XmlAttribute)",
    "(clear,XmlTextWriter)",
    "(text,XmlText)",
    "(toString,XmlDocument)",
    "(prefix,XmlNamespace)",
    "(endElement,XmlTextWriter)",
    "(fromXml,XmlDocument)",
    "(value,XmlAttribute)",
    "(addChild,XmlElement)",
    "(getDtd,XmlDocument)",
    "(name,XmlAttribute)",
    "(replace,XmlText)",
    "(prevSibling,XmlNode)",
    "(outputMemory,XmlTextWriter)",
    "(version,XmlDocument)",
    "(validate,XmlDocument)",
    "(toString,XmlTextWriter)",
    "(fromHtml,XmlDocument)",
    "(namespaces,XmlNode)",
    "(startDocument,XmlTextWriter)",
    "(addPrevSibling,XmlText)",
    "(addNextSibling,XmlElement)",
    "(cdata,XmlElement)",
    "(text,XmlProcessingInstruction)"
  ],
  "@lifbi_tbt/win-audio": [],
  "lightning-spell": [
    "(distance,Number)",
    "(word,String)",
    "(count,Number)"
  ],
  "linux-device": [],
  "linux-devnode": [],
  "linux-perf": [
    "(start,LinuxPerf)",
    "(stop,LinuxPerf)"
  ],
  "linux-xorg-screencapture": [
    "(height,Number)",
    "(width,Number)"
  ],
  "litl-parser": [],
  "live-elements-js-compiler": [],
  "@lockshi/myaddon": [],
  "lodepng": [],
  "@logigator/logigator-simulation": [],
  "logpp": [
    "(spos,Number)"
  ],
  "loole": [],
  "@lotuz/jsminify": [],
  "lp_solve": [],
  "lru-native2": [],
  "lru-node-addon": [
    "(SetMax,List)"
  ],
  "ls-trace": [],
  "luckzhiwei-lib": [],
  "@luminati-io/gc-stats": [
    "(pause,data)",
    "(endTime,data)",
    "(pauseMS,data)",
    "(gctype,data)",
    "(startTime,data)"
  ],
  "@luminati-io/mmap-io": [],
  "@luminati-io/node-crypt3": [],
  "@luminati-io/node-diskusage": [],
  "@luminati-io/node-time": [],
  "@luminati-io/node-unlisten": [],
  "@lydiaswap/lydia-swap-periphery": [],
  "lymui-node": [],
  "lz4": [],
  "lzma-native": [
    "(code,Number)",
    "(name,String)",
    "(desc,String)",
    "(setBufsize,LZMAStream)",
    "(memlimitSet,LZMAStream)"
  ],
  "lzo": [],
  "lzo-decompress": [],
  "malgo": [],
  "mano10": [],
  "mao_test_hello": [],
  "@mapbox/vtquery": [],
  "@mapbox/vtvalidate": [],
  "@markusjx/shared_memory": [],
  "@markusjx/shared_mutex": [],
  "@marshallofsound/native-keymap": [],
  "@mateuszzajacs/bindings": [
    "(baudRate,data)",
    "(dsr,data)",
    "(cts,data)",
    "(dcd,data)"
  ],
  "@mathquis/crfsuite": [
    "(set_params,TrainerClass)",
    "(Tagger,func)",
    "(Trainer,func)"
  ],
  "@mathquis/node-gist": [],
  "@mathquis/node-snowboy": [],
  "matrix-seshat-prebuild": [],
  "@matteodisabatino/gc_info": [],
  "mc-nodegit": [
    "(ENABLED,LockMaster)",
    "(DISABLED,LockMaster)",
    "(ENABLED_FOR_ASYNC_ONLY,LockMaster)",
    "(committer,commit)",
    "(signature,baton)",
    "(author,commit)",
    "(signature,signature)",
    "(storedMutexesCount,diagnostics)",
    "(message,commit)",
    "(sha,commit)",
    "(reachedEndOfHistory,baton)",
    "(signedData,baton)",
    "(errno,baton)",
    "(commit,GitCommit)",
    "(name,signature)",
    "(email,signature)",
    "(date,signature)"
  ],
  "mcrypt": [],
  "megahash": [
    "(_set,MegaHash)",
    "(numIndexes,Index)"
  ],
  "@meteorjs/pathwatcher": [
    "(0,handle)"
  ],
  "@meza/curseforge-fingerprint": [],
  "mfont": [],
  "mg-dbx": [],
  "@microcode/canary": [],
  "@microsoft/ads-kerberos": [
    "(contextComplete,KerberosClient)",
    "(contextComplete,KerberosServer)",
    "(username,KerberosServer)",
    "(username,KerberosClient)",
    "(response,KerberosServer)",
    "(response,KerberosClient)",
    "(responseConf,KerberosClient)",
    "(targetName,KerberosServer)"
  ],
  "microtime": [
    "(syscall,String)",
    "(errno,Number)",
    "(code,Number)"
  ],
  "microvium": [
    "(coreSize,Number)",
    "(stackHighWaterMark,Number)",
    "(stackHeight,Number)",
    "(fragmentCount,Number)",
    "(globalVariablesSize,Number)",
    "(registersSize,Number)",
    "(stackAllocatedCapacity,Number)",
    "(importTableSize,Number)",
    "(virtualHeapAllocatedCapacity,Number)",
    "(totalSize,Number)",
    "(virtualHeapHighWaterMark,Number)",
    "(virtualHeapUsed,Number)"
  ],
  "midi": [],
  "midi-test": [],
  "minimp3": [],
  "minipg": [],
  "minisqlite": [
    "(type,columnType)",
    "(name,columnName)"
  ],
  "@minko-fe/sharp": [
    "(isGlobal,Boolean)",
    "(semver,String)",
    "(isWasm,Boolean)"
  ],
  "@mirror_cy/sharp": [],
  "mishiro-core": [],
  "@miup/napi-demo": [],
  "mker": [],
  "mkfifo": [],
  "mmap-mio": [],
  "modern-syslog": [],
  "@modum-io/bluetooth-hci-socket": [],
  "moncoin-crypto": [],
  "mongodb-client-encryption": [],
  "@mongodb-js/zstd": [],
  "mongo-dbx": [],
  "monoclock": [],
  "@morajabi/robotjs": [],
  "mountutils": [],
  "mouse-forward-back": [],
  "@movable/hash_ring": [],
  "@movei/tree-sitter-move": [],
  "mp4decrypt-buffer": [],
  "mp4decryptjs": [],
  "mpu6050-dmp": [],
  "mpzjs": [
    "(set,MPZ)"
  ],
  "mrchandler": [],
  "mrmr": [],
  "ms-flakeless": [],
  "msgpackr-extract": [],
  "msoconv": [],
  "mt-bsdiff-nodejs": [],
  "mt-plugin-test": [],
  "mt-resource-diff-patch": [],
  "mt-test-node-02": [],
  "@muchmore/opus": [
    "(setBitrate,OpusEncoder)"
  ],
  "@muffinista/goto-sleep": [],
  "muhammara": [
    "(toPDFHexString,ToPDFHexString)",
    "(Quote,Quote)",
    "(bStar,bStar)",
    "(addAdditionalInfoEntry,AddAdditionalInfoEntry)",
    "(writeKey,WriteKey)",
    "(startModifiedIndirectObject,StartModifiedIndirectObject)",
    "(setPositionFromEnd,SetPositionFromEnd)",
    "(m,m)",
    "(writeNumberValue,WriteNumberValue)",
    "(queryObject,QueryObject)",
    "(drawRectangle,DrawRectangle)",
    "(K,K)",
    "(getInfoDictionary,GetInfoDictionary)",
    "(parsePageDictionary,ParsePageDictionary)",
    "(b,b)",
    "(getRotate,GetRotate)",
    "(h,h)",
    "(writeComment,WriteComment)",
    "(startReadingFromStream,StartReadingFromStream)",
    "(copyNewObjectsForDirectObject,CopyNewObjectsForDirectObject)",
    "(getDictionary,GetDictionary)",
    "(getXrefPosition,GetXrefPosition)",
    "(l,l)",
    "(getStreamContentStart,GetStreamContentStart)",
    "(read,Read)",
    "(getArtBox,GetArtBox)",
    "(clearAdditionalInfoEntries,ClearAdditionalInfoEntries)",
    "(getWriteStream,GetWriteStream)",
    "(copyDirectObjectAsIs,CopyDirectObjectAsIs)",
    "(fStar,fStar)",
    "(addImageXObjectMapping,AddImageXObjectMapping)",
    "(startDictionary,StartDictionary)",
    "(toText,ToText)",
    "(write,Write)",
    "(rg,rg)",
    "(ri,ri)",
    "(f,f)",
    "(getTrimBox,GetTrimBox)",
    "(doXObject,doXObject)",
    "(SC,SC)",
    "(toPDFIndirectObjectReference,ToPDFIndirectObjectReference)",
    "(getPageObjectID,GetPageObjectID)",
    "(CS,CS)",
    "(getAdditionalInfoEntries,GetAdditionalInfoEntries)",
    "(exists,Exists)",
    "(writeKeyword,WriteKeyword)",
    "(y,y)",
    "(toPDFInteger,ToPDFInteger)",
    "(getTrailer,GetTrailer)",
    "(addFontMapping,AddFontMapping)",
    "(allocateNewObjectID,AllocateNewObjectID)",
    "(startFreeContext,StartFreeContext)",
    "(s,s)",
    "(DoubleQuote,DoubleQuote)",
    "(writeIndirectObjectReference,WriteIndirectObjectReference)",
    "(G,G)",
    "(toNumber,ToNumber)",
    "(getXrefEntry,GetXrefEntry)",
    "(startReadingObjectsFromStream,StartReadingObjectsFromStream)",
    "(addPropertyMapping,AddPropertyMapping)",
    "(toPDFName,ToPDFName)",
    "(toPDFReal,ToPDFReal)",
    "(writeText,WriteText)",
    "(getContentStream,GetContentStream)",
    "(endPDFStream,EndPDFStream)",
    "(getType,GetType)",
    "(toJSArray,ToJSArray)",
    "(drawPath,DrawPath)",
    "(Tz,Tz)",
    "(writeBoolean,WriteBoolean)",
    "(getSourceDocumentStream,GetSourceDocumentStream)",
    "(addPatternMapping,AddPatternMapping)",
    "(W,W)",
    "(writeRectangleValue,WriteRectangleValue)",
    "(setPosition,SetPosition)",
    "(getLength,GetLength)",
    "(startUnfilteredPDFStream,StartUnfilteredPDFStream)",
    "(getPagesCount,GetPagesCount)",
    "(toPDFDictionary,ToPDFDictionary)",
    "(calculateTextDimensions,CalculateTextDimensions)",
    "(endIndirectObject,EndIndirectObject)",
    "(getAssociatedPage,GetAssociatedPage)",
    "(writeName,WriteName)",
    "(writeNameValue,WriteNameValue)",
    "(mergePDFPageToFormXObject,MergePDFPageToFormXObject)",
    "(drawImage,DrawImage)",
    "(endLine,EndLine)",
    "(j,j)",
    "(isEncrypted,IsEncrypted)",
    "(B,B)",
    "(toPDFSymbol,ToPDFSymbol)",
    "(skip,Skip)",
    "(getVersion,GetVersion)",
    "(parsePage,ParsePage)",
    "(getParserStream,GetParserStream)",
    "(setCompressStreams,SetCompressStreams)",
    "(getAdditionalInfoEntry,GetAdditionalInfoEntry)",
    "(writeHexString,WriteHexString)",
    "(addExtGStateMapping,AddExtGStateMapping)",
    "(mergePDFPageToPage,MergePDFPageToPage)",
    "(startPDFStream,StartPDFStream)",
    "(getContentContext,GetContentContext)",
    "(toJSObject,ToJSObject)",
    "(setModDate,SetModDate)",
    "(addXObjectMapping,AddXObjectMapping)",
    "(appendPDFPageFromPDF,AppendPDFPageFromPDF)",
    "(Tc,Tc)",
    "(BStar,BStar)",
    "(BT,BT)",
    "(getResourcesDictinary,GetResourcesDictionary)",
    "(M,M)",
    "(n,n)",
    "(J,J)",
    "(startReadingFromStreamForPlainCopying,StartReadingFromStreamForPlainCopying)",
    "(writeObjectReferenceValue,WriteObjectReferenceValue)",
    "(copyDirectObjectWithDeepCopy,CopyDirectObjectWithDeepCopy)",
    "(startReadingObjectsFromStreams,StartReadingObjectsFromStreams)",
    "(i,i)",
    "(removeAdditionalInfoEntry,RemoveAdditionalInfoEntry)",
    "(F,F)",
    "(getCopiedObjectID,GetCopiedObjectID)",
    "(gs,gs)",
    "(deleteObject,DeleteObject)",
    "(getCurrentPosition,GetCurrentPosition)",
    "(parseNewObject,ParseNewObject)",
    "(c,c)",
    "(w,w)",
    "(writeLiteralStringValue,WriteLiteralStringValue)",
    "(writeNumber,WriteNumber)",
    "(getCropBox,GetCropBox)",
    "(TD,TD)",
    "(copyObject,CopyObject)",
    "(sc,sc)",
    "(getPDFLevel,GetPDFLevel)",
    "(startArray,StartArray)",
    "(d,d)",
    "(Tw,Tw)",
    "(Tj,Tj)",
    "(toPDFNull,ToPDFNull)",
    "(getCopiedObjects,GetCopiedObjects)",
    "(WStar,WStar)",
    "(k,k)",
    "(v,v)",
    "(scn,scn)",
    "(endFreeContext,EndFreeContext)",
    "(replaceSourceObjects,ReplaceSourceObjects)",
    "(endArray,EndArray)",
    "(createFormXObjectFromPDFPage,CreateFormXObjectFromPDFPage)",
    "(Tr,Tr)",
    "(Td,Td)",
    "(getObjectID,GetObjectID)",
    "(toPDFLiteralString,ToPDFLiteralString)",
    "(notEnded,NotEnded)",
    "(TStar,TStar)",
    "(writeBooleanValue,WriteBooleanValue)",
    "(Q,Q)",
    "(toPDFBoolean,ToPDFBoolean)",
    "(drawSquare,DrawSquare)",
    "(addColorSpaceMapping,AddColorSpaceMapping)",
    "(addShadingMapping,AddShadingMapping)",
    "(endDictionary,EndDictionary)",
    "(Tf,Tf)",
    "(queryArrayObject,QueryArrayObject)",
    "(Ts,Ts)",
    "(setCreationDate,SetCreationDate)",
    "(startNewIndirectObject,StartNewIndirectObject)",
    "(TL,TL)",
    "(addFormXObjectMapping,AddFormXObjectMapping)",
    "(q,q)",
    "(getCurrentPageContentStream,GetCurrentPageContentStream)",
    "(queryDictionaryObject,QueryDictionaryObject)",
    "(toPDFArray,ToPDFArray)",
    "(getFontMetrics,GetFontMetrics)",
    "(cs,cs)",
    "(RG,RG)",
    "(getObjectsCount,GetObjectsCount)",
    "(S,S)",
    "(cm,cm)",
    "(getBleedBox,GetBleedBox)",
    "(getXrefSize,GetXrefSize)",
    "(writeFreeCode,WriteFreeCode)",
    "(getMediaBox,GetMediaBox)",
    "(re,re)",
    "(SCN,SCN)",
    "(writeLiteralString,WriteLiteralString)",
    "(drawCircle,DrawCircle)",
    "(addProcsetResource,AddProcsetResource)",
    "(getSourceDocumentParser,GetSourceDocumentParser)",
    "(g,g)",
    "(ET,ET)",
    "(toPDFStream,ToPDFStream)",
    "(TJ,TJ)",
    "(Tm,Tm)"
  ],
  "muhash": [],
  "murmurhash3": [],
  "murmurhash-native": [],
  "mutou-node-plugin": [],
  "mutou-s": [],
  "mutou-socket": [],
  "mutou-test-node-01": [],
  "mv-exchange": [],
  "myf-napi-example": [],
  "@myluluy/node-syslog": [
    "(option,Option)",
    "(facility,Facility)",
    "(priority,Priority)"
  ],
  "nan-async-example": [
    "(exports,RunCallback)"
  ],
  "nan-demo": [],
  "@nandoide/tree-sitter-thinp": [],
  "nan-hello-world": [],
  "@nanobot248/linux-dedupe": [],
  "@nanomatic/rpio": [],
  "nanomsg": [],
  "nanosecond-timer": [],
  "napi-addon-fdtd": [],
  "napi-async-callback-example": [],
  "napi-async-promise-example": [],
  "napi-oniguruma": [],
  "napi-physics-modeling-oop": [],
  "napi-spellchecker": [],
  "napi_stb_image": [],
  "napi-sync-callback-example": [],
  "napi-sync-return-example": [],
  "napitest": [],
  "native-addon-example": [],
  "native-capture-js": [],
  "native-copy": [],
  "native-cypher": [],
  "native-fork": [],
  "native-hdr-histogram": [],
  "native-hello-world": [],
  "native-idle-time": [],
  "native-is-elevated": [],
  "native-keymap": [],
  "native-linked-list": [],
  "native-screen-js": [],
  "native-trie": [],
  "native_tst": [],
  "native-watchdog": [],
  "naudiodon": [],
  "@nbisigna/scramble": [],
  "nblas": [],
  "nc-screen": [],
  "net-runner-engine": [
    "(this,JsSink)"
  ],
  "network-interfaces-plus": [],
  "@nexellia/process-list": [],
  "nfinger": [
    "(data,data)"
  ],
  "nflx-spectator-nodejsmetrics": [
    "(elapsed,elapsed)"
  ],
  "nice-napi": [],
  "nkv.db": [
    "(index,Number)",
    "(data,String)"
  ],
  "nlibcurl": [],
  "@nlv8/signun": [],
  "@nmarks/dd-trace": [],
  "nnocr": [],
  "nodeaffinity": [],
  "node-alsa-cardinfo": [],
  "node-base92": [],
  "node-bsdiff": [],
  "node-calls-python": [],
  "node-canal": [
    "(CANAL_ERROR_TIMEOUT,Number)",
    "(CANAL_ERROR_GENERIC,Number)",
    "(CANAL_BAUD_1000,Number)",
    "(CANAL_BAUD_250,Number)",
    "(CANAL_ERROR_ERRFRM_STUFF,Number)",
    "(CANAL_ERROR_CHANNEL,Number)",
    "(CANAL_BAUD_100,Number)",
    "(CANAL_BAUD_50,Number)",
    "(CANAL_ERROR_ERRFRM_ACK,Number)",
    "(CANAL_BAUD_USER,Number)",
    "(CANAL_ERROR_CAN_MESSAGE,Number)",
    "(CANAL_ERROR_SUB_DRIVER,Number)",
    "(CANAL_ERROR_PARAMETER,Number)",
    "(CANAL_ERROR_ERRFRM_BIT1,Number)",
    "(CANAL_ERROR_ERRFRM_BIT0,Number)",
    "(CANAL_ERROR_FIFO_SIZE,Number)",
    "(CANAL_IDFLAG_SEND,Number)",
    "(CANAL_ERROR_ERRFRM_CRC,Number)",
    "(CANAL_ERROR_BUS_OFF,Number)",
    "(CANAL_ERROR_NOT_OPEN,Number)",
    "(CANAL_BAUD_125,Number)",
    "(CANAL_ERROR_NOT_SUPPORTED,Number)",
    "(CANAL_BAUD_20,Number)",
    "(CANAL_ERROR_CAN_ID,Number)",
    "(CANAL_ERROR_BAUDRATE,Number)",
    "(CANAL_ERROR_BUS_PASSIVE,Number)",
    "(CANAL_ERROR_INIT_FAIL,Number)",
    "(CANAL_ERROR_TRM_FULL,Number)",
    "(CANAL_IDFLAG_STATUS,Number)",
    "(CANAL_ERROR_LIBRARY,Number)",
    "(CANAL_ERROR_FIFO_FULL,Number)",
    "(CANAL_ERROR_INIT_READY,Number)",
    "(CANAL_ERROR_INIT_MISSING,Number)",
    "(CANAL_BAUD_500,Number)",
    "(CANAL_IDFLAG_EXTENDED,Number)",
    "(CANAL_ERROR_FIFO_EMPTY,Number)",
    "(CANAL_ERROR_SUCCESS,Number)",
    "(CANAL_BAUD_10,Number)",
    "(CANAL_ERROR_RCV_EMPTY,Number)",
    "(CANAL_ERROR_HARDWARE,Number)",
    "(CANAL_ERROR_ONLY_ONE_INSTANCE,Number)",
    "(CANAL_ERROR_OVERRUN,Number)",
    "(CANAL_ERROR_BUS_WARNING,Number)",
    "(CANAL_IDFLAG_STANDARD,Number)",
    "(CANAL_BAUD_800,Number)",
    "(CANAL_ERROR_ERRFRM_FORM,Number)",
    "(CANAL_ERROR_PROCADDRESS,Number)",
    "(CANAL_IDFLAG_RTR,Number)",
    "(CANAL_ERROR_INTERNAL,Number)",
    "(CANAL_ERROR_FIFO_WAIT,Number)",
    "(CANAL_ERROR_MEMORY,Number)",
    "(CANAL_ERROR_COMMUNICATION,Number)"
  ],
  "node-chip8": [],
  "node-cint64": [
    "(neg,Int64Wrapper)",
    "(shiftRight,Int64Wrapper)",
    "(div,Int64Wrapper)",
    "(and,Int64Wrapper)",
    "(lt,Int64Wrapper)",
    "(not,Int64Wrapper)",
    "(toNumber,Int64Wrapper)",
    "(eq,Int64Wrapper)",
    "(neq,Int64Wrapper)",
    "(shiftLeft,Int64Wrapper)",
    "(mod,Int64Wrapper)",
    "(geq,Int64Wrapper)",
    "(leq,Int64Wrapper)",
    "(xor,Int64Wrapper)",
    "(mul,Int64Wrapper)",
    "(gt,Int64Wrapper)",
    "(or,Int64Wrapper)",
    "(sub,Int64Wrapper)",
    "(intoBuffer,Int64Wrapper)",
    "(abs,Int64Wrapper)",
    "(toString,Int64Wrapper)",
    "(add,Int64Wrapper)"
  ],
  "node_c_plugin_helloword": [],
  "node-crc16": [],
  "node_crc_native": [],
  "node-crfpp": [],
  "node-datachannel": [],
  "node_detour": [],
  "node-dht-sensor": [],
  "node-dotakv": [],
  "node-expat": [],
  "node-expat-temporary": [],
  "node-factorial-cc": [],
  "node-firebird-native-api": [],
  "node-flatbuffers": [],
  "node-float-helpers": [],
  "node-fzy": [],
  "node-gdx": [],
  "nodegit": [
    "(ENABLED,LockMaster)",
    "(DISABLED,LockMaster)",
    "(ENABLED_FOR_ASYNC_ONLY,LockMaster)",
    "(committer,commit)",
    "(signature,baton)",
    "(author,commit)",
    "(signature,signature)",
    "(storedMutexesCount,diagnostics)",
    "(message,commit)",
    "(sha,commit)",
    "(reachedEndOfHistory,baton)",
    "(signedData,baton)",
    "(errno,baton)",
    "(commit,GitCommit)",
    "(name,signature)",
    "(email,signature)",
    "(date,signature)"
  ],
  "node-gpgpu": [],
  "node-gyp-hello-world": [],
  "node-hdiffpatch": [],
  "node-hid": [
    "(usage,Number)",
    "(productId,Number)",
    "(usagePage,Number)",
    "(serialNumber,String)",
    "(vendorId,Number)",
    "(product,String)",
    "(interface,Number)",
    "(path,String)",
    "(openAsyncHIDDevice,HIDAsync)",
    "(manufacturer,String)",
    "(release,Number)"
  ],
  "nodehun": [],
  "nodejieba": [],
  "nodejs-addons-test": [],
  "nodejs-qmc5883l": [],
  "node-jvt": [],
  "node-kcp": [],
  "node-kcp-x": [
    "(setmtu,KcpObject)"
  ],
  "node-libtidy": [],
  "node-libxml": [
    "(Libxml,func)"
  ],
  "@node-lightning/secp256k1": [],
  "node-lmdb": [
    "(drop,DbiWrap)",
    "(stat,EnvWrap)",
    "(treeDepth,stat)",
    "(close,CursorWrap)",
    "(reset,TxnWrap)",
    "(treeBranchPageCount,stat)",
    "(getCurrentString,CursorWrap)",
    "(getCurrentNumber,CursorWrap)",
    "(resize,EnvWrap)",
    "(del,CursorWrap)",
    "(goToPrevDup,CursorWrap)",
    "(getBinary,TxnWrap)",
    "(detachBuffer,EnvWrap)",
    "(openDbi,EnvWrap)",
    "(getCurrentBoolean,CursorWrap)",
    "(goToNextDup,CursorWrap)",
    "(batchWrite,EnvWrap)",
    "(getBinaryUnsafe,TxnWrap)",
    "(close,DbiWrap)",
    "(getString,TxnWrap)",
    "(goToRange,CursorWrap)",
    "(stat,DbiWrap)",
    "(goToLastDup,CursorWrap)",
    "(goToNext,CursorWrap)",
    "(getCurrentStringUnsafe,CursorWrap)",
    "(commit,TxnWrap)",
    "(info,EnvWrap)",
    "(getCurrentBinary,CursorWrap)",
    "(goToFirst,CursorWrap)",
    "(putNumber,TxnWrap)",
    "(beginTxn,EnvWrap)",
    "(goToDup,CursorWrap)",
    "(overflowPages,stat)",
    "(goToFirstDup,CursorWrap)",
    "(close,EnvWrap)",
    "(putString,TxnWrap)",
    "(abort,TxnWrap)",
    "(putBinary,TxnWrap)",
    "(copy,EnvWrap)",
    "(del,TxnWrap)",
    "(goToLast,CursorWrap)",
    "(goToKey,CursorWrap)",
    "(putBoolean,TxnWrap)",
    "(getStringUnsafe,TxnWrap)",
    "(goToPrev,CursorWrap)",
    "(getBoolean,TxnWrap)",
    "(pageSize,stat)",
    "(treeLeafPageCount,stat)",
    "(sync,EnvWrap)",
    "(goToDupRange,CursorWrap)",
    "(getCurrentBinaryUnsafe,CursorWrap)",
    "(renew,TxnWrap)",
    "(getNumber,TxnWrap)",
    "(entryCount,stat)",
    "(open,EnvWrap)"
  ],
  "node_log_json_on_fatal": [],
  "node-mbed-dtls": [
    "(handshakeTimeoutMin,DtlsServer)"
  ],
  "node-mbus": [],
  "node-memwatch-sfx": [],
  "node-monospace-fonts": [],
  "node-mozjpeg": [
    "(version,String)"
  ],
  "node-native-ocr": [],
  "node-navquery": [
    "(getExcludeFlags,NavQuery)",
    "(setExcludeFlags,NavQuery)",
    "(load,NavQuery)",
    "(findNearestPoly,NavQuery)",
    "(clear,NavQuery)",
    "(filename,info)",
    "(setAreaCost,NavQuery)",
    "(findRandomPoint,NavQuery)",
    "(getAreaCost,NavQuery)",
    "(getIncludeFlags,NavQuery)",
    "(setIncludeFlags,NavQuery)",
    "(findStraightPath,NavQuery)",
    "(ref,nearestRef)"
  ],
  "node-oom-heapdump": [],
  "node-openjtalk-binding": [],
  "node-opus": [],
  "node_or_tools": [],
  "node-os-calls": [],
  "@nodeos/node-ife": [],
  "node-pgparser": [],
  "node-pipe": [],
  "node-pipe2": [],
  "node-portmapping": [
    "(createMapping,Wrapper)",
    "(state,String)",
    "(externalHost,String)",
    "(externalPort,Number)",
    "(getLocalAddress,Wrapper)",
    "(init,Wrapper)",
    "(internalPort,Number)",
    "(protocol,String)",
    "(cleanup,Wrapper)"
  ],
  "node-prevent-sleep": [],
  "node-prng": [],
  "node-process-watcher": [
    "(pid,Number)",
    "(ppid,Number)"
  ],
  "node-pty": [],
  "node-pty-binaries": [],
  "node-pty-prebuilt-multiarch": [],
  "node-qt-napi": [
    "(w,size)",
    "(h,size)"
  ],
  "node-quirc": [
    "(data,data)"
  ],
  "node-rdkafka": [],
  "node-recastnavigation": [
    "(ref,nearestRef)"
  ],
  "node-redis-crc16": [],
  "node-safari-push-notifications": [],
  "node-sass": [
    "(success,ReturnCallback)",
    "(String,String)",
    "(Map,Map)",
    "(Number,Number)",
    "(List,List)",
    "(css,css)",
    "(Null,Null)",
    "(Error,Error)",
    "(Boolean,Boolean)",
    "(Color,Color)"
  ],
  "node-sass-test": [
    "(success,ReturnCallback)",
    "(String,String)",
    "(Map,Map)",
    "(Number,Number)",
    "(List,List)",
    "(css,css)",
    "(Null,Null)",
    "(Error,Error)",
    "(Boolean,Boolean)",
    "(Color,Color)"
  ],
  "node-scrypt2": [
    "(N,Number)",
    "(r,Number)",
    "(p,Number)"
  ],
  "node-snap7": [
    "(GetProtection,S7Client)",
    "(UnregisterArea,S7Server)",
    "(ServerStatus,S7Server)",
    "(StartTo,S7Server)",
    "(GetEventsMask,S7Server)",
    "(SetPlcDateTime,S7Client)",
    "(RegisterArea,S7Server)",
    "(ErrorText,S7Server)",
    "(ReadSZL,S7Client)",
    "(GetPlcDateTime,S7Client)",
    "(ListBlocks,S7Client)",
    "(ReadArea,S7Client)",
    "(GetCpuStatus,S7Server)",
    "(PlcStatus,S7Client)",
    "(GetOrderCode,S7Client)",
    "(LockArea,S7Server)",
    "(PlcStop,S7Client)",
    "(CopyRamToRom,S7Client)",
    "(ErrorText,S7Client)",
    "(ReadSZLList,S7Client)",
    "(GetParam,S7Server)",
    "(Start,S7Server)",
    "(EventText,S7Server)",
    "(Stop,S7Server)",
    "(SetResourceless,S7Server)",
    "(PlcColdStart,S7Client)",
    "(Download,S7Client)",
    "(ClientsCount,S7Server)",
    "(SetPlcSystemDateTime,S7Client)",
    "(DBFill,S7Client)",
    "(Delete,S7Client)",
    "(SetSessionPassword,S7Client)",
    "(GetCpuInfo,S7Client)",
    "(GetArea,S7Server)",
    "(SetCpuStatus,S7Server)",
    "(ClearSessionPassword,S7Client)",
    "(FullUpload,S7Client)",
    "(GetParam,S7Client)",
    "(PDULength,S7Client)",
    "(SetArea,S7Server)",
    "(Compress,S7Client)",
    "(WriteMultiVars,S7Client)",
    "(Connected,S7Client)",
    "(SetEventMask,S7Server)",
    "(Upload,S7Client)",
    "(SetConnectionType,S7Client)",
    "(ExecTime,S7Client)",
    "(WriteArea,S7Client)",
    "(SetParam,S7Server)",
    "(GetPgBlockInfo,S7Client)",
    "(UnlockArea,S7Server)",
    "(GetCpInfo,S7Client)",
    "(DBGet,S7Client)",
    "(SetParam,S7Client)",
    "(LastError,S7Client)",
    "(EvtTime,time)",
    "(LastError,S7Server)",
    "(SetConnectionParams,S7Client)",
    "(PDURequested,S7Client)",
    "(ListBlocksOfType,S7Client)",
    "(Connect,S7Client)",
    "(Disconnect,S7Client)",
    "(PlcHotStart,S7Client)",
    "(ConnectTo,S7Client)",
    "(GetAgBlockInfo,S7Client)",
    "(ReadMultiVars,S7Client)"
  ],
  "node-snowball": [],
  "node-spdlog-daily": [
    "(setPattern,Logger)",
    "(flush,Logger)",
    "(critical,Logger)",
    "(info,Logger)",
    "(drop,Logger)",
    "(getLevel,Logger)",
    "(error,Logger)",
    "(warn,Logger)",
    "(debug,Logger)",
    "(setLevel,Logger)",
    "(trace,Logger)"
  ],
  "node-statvfs": [],
  "node-stomptalk": [],
  "node-stringbuilder": [],
  "node-sync-ipc": [
    "(onMessage,onMessageBind)",
    "(write,Write)"
  ],
  "node-sysstat": [],
  "node-termios": [],
  "node-tree-sitter-electron-arraybuffer": [],
  "node-uname": [],
  "node-vad": [
    "(0,length)"
  ],
  "node-wifi-info": [],
  "node-wow-mssql": [
    "(setPrefetchRowCount,SetPrefetchRowCount)",
    "(commit,Commit)",
    "(connect,Connect)",
    "(execute,Execute)",
    "(setAutoCommit,SetAutoCommit)",
    "(rollback,Rollback)",
    "(readerHandle,CreateReader)",
    "(executeSync,ExecuteSync)",
    "(prepare,Prepare)",
    "(isConnected,IsConnected)",
    "(close,Close)",
    "(connectSync,ConnectSync)",
    "(nextRows,NextRows)"
  ],
  "node-xed": [
    "(len,Number)"
  ],
  "node-xxhash": [],
  "node-yolo-shinobi": [],
  "node-zopfli": [],
  "node-zopfli-es": [],
  "node-zopflipng": [],
  "@nomis51/robotjs": [],
  "@nordicsemiconductor/nrf-device-lib-js": [],
  "npmpkg_blvd_test1": [],
  "nrlmsise": [],
  "@nrwlia/enet-node": [
    "(setTimeout,Host)",
    "(setEmitter,Host)",
    "(setPingInterval,Host)"
  ],
  "nsfw": [],
  "nslog": [],
  "numnjs": [],
  "nuv": [],
  "nvcodec": [],
  "nvidia-codec": [],
  "nvidia-gpu-monitorx": [],
  "nwework-sdk": [],
  "@n.wolfe/scoped-test": [
    "(diff,self)",
    "(usage,self)",
    "(current,self)"
  ],
  "@nxtedition/rocksdb": [],
  "odbc": [
    "(setIsolationLevel,ODBCConnection)"
  ],
  "ofe": [],
  "oniguruma": [],
  "oniguruma-prebuilt": [],
  "onsfw": [],
  "@opendrives/getent": [],
  "openssl-dtls": [],
  "orientjs-native": [
    "(_size,size)",
    "(cluster,value)",
    "(@class,name)",
    "(position,value)",
    "(this,value)"
  ],
  "os-lock": [],
  "osmbuildings-classic": [
    "(start,FSEvents)",
    "(stop,FSEvents)"
  ],
  "ospasta": [],
  "@oxyflour/ncc": [
    "(EDGE,Number)",
    "(l,props)",
    "(SHAPE,Number)",
    "(z,Number)",
    "(FACE,Number)",
    "(mass,props)",
    "(x,Number)",
    "(s,props)",
    "(SHELL,Number)",
    "(COMPSOLID,Number)",
    "(VERTEX,Number)",
    "(SOLID,Number)",
    "(p,Shape)",
    "(y,Number)",
    "(WIRE,Number)",
    "(COMPOUND,Number)"
  ],
  "ozonep-nsfw": [],
  "@pacexy/robotjs": [],
  "@pano.video/robotjs": [],
  "@parcel/watcher": [
    "(type,String)",
    "(path,String)"
  ],
  "@parcel~watcher": [
    "(type,String)",
    "(path,String)"
  ],
  "paseto.js": [],
  "pathwatcher": [
    "(0,handle)"
  ],
  "@paulcbetts/gc": [],
  "@paulcbetts/system-idle-time": [],
  "pcg-wrapper": [],
  "peercred": [],
  "pele": [],
  "pg-libpq": [],
  "@pg-nano/pg-parser": [],
  "pg-query-native": [],
  "phin-ecdh": [],
  "picha": [],
  "pi-spi": [],
  "@pitzzae/volume-list": [],
  "pixel-change": [],
  "pixels-please": [],
  "pjsua2": [],
  "pkcs11js": [],
  "pkg-meta": [],
  "platform-folders": [],
  "playcap": [],
  "plenteum-crypto": [],
  "@point3/dguard": [],
  "poke-opus": [],
  "poppler-native": [
    "(size,size)",
    "(color,String)",
    "(Names,Dict)",
    "(src,String)",
    "(family,String)",
    "(link,String)",
    "(text,String)",
    "(title,String)"
  ],
  "posix": [],
  "posix-clock": [],
  "posix-semaphore": [],
  "posix-socket": [],
  "posix_spawn": [],
  "postal-async": [],
  "postal-async-m1": [],
  "pprof": [
    "(name,name)",
    "(title,profile)",
    "(startTime,profile)",
    "(endTime,profile)",
    "(topDownRoot,profile)"
  ],
  "prebuilt-example": [],
  "@primecode/async-qrcode": [],
  "primo-app-example": [],
  "private-symbol": [],
  "process-once.node": [
    "(exports,ProcessOnce)"
  ],
  "profoundjs-node-pty": [],
  "promise-await": [],
  "prompt-simple": [],
  "@pubgcorp/node-xed": [
    "(len,Number)"
  ],
  "@pugdag/process-list": [],
  "pulsar-client": [
    "(setLogHandler,Client)"
  ],
  "pulseaudio2": [],
  "pwuid": [
    "(exports,pwuid)"
  ],
  "qlobber-native": [
    "(key,String)"
  ],
  "qlzjs": [],
  "qqdevicecheck": [],
  "qrencode_mini": [],
  "@quanitux/nsfw": [],
  "@quan-to/chevronlib": [],
  "@quantumdag/process-list": [],
  "@quantumdag_/process-list": [],
  "querymimedb": [],
  "@qujingling/sqlite3": [
    "(remaining,RemainingGetter)",
    "(completed,CompletedGetter)",
    "(open,OpenGetter)",
    "(idle,IdleGetter)",
    "(pageCount,PageCountGetter)",
    "(failed,FailedGetter)"
  ],
  "qwertycoin-crypto": [],
  "rabin-native": [],
  "radialxml": [
    "(prevElement,XmlText)",
    "(doc,XmlNode)",
    "(0,set)",
    "(parent,XmlNode)",
    "(_encoding,XmlDocument)",
    "(1,set)",
    "(attrs,XmlElement)",
    "(nextElement,XmlElement)",
    "(_root,XmlDocument)",
    "(_validate,XmlDocument)",
    "(prevElement,XmlElement)",
    "(nextSibling,XmlNode)",
    "(namespace,XmlAttribute)",
    "(addPrevSibling,XmlElement)",
    "(_rngValidate,XmlDocument)",
    "(parseString,XmlSaxParser)",
    "(childNodes,XmlElement)",
    "(clone,XmlNode)",
    "(name,XmlProcessingInstruction)",
    "(_setDtd,XmlDocument)",
    "(path,XmlElement)",
    "(replace,XmlElement)",
    "(text,XmlElement)",
    "(push,XmlSaxParser)",
    "(child,XmlElement)",
    "(name,XmlElement)",
    "(type,XmlNode)",
    "(text,XmlComment)",
    "(_attr,XmlElement)",
    "(remove,XmlNode)",
    "(nextElement,XmlText)",
    "(find,XmlElement)",
    "(href,XmlNamespace)",
    "(namespace,XmlNode)",
    "(line,XmlNode)",
    "(toString,XmlNode)",
    "(node,XmlAttribute)",
    "(_toString,XmlDocument)",
    "(text,XmlText)",
    "(prefix,XmlNamespace)",
    "(fromXml,XmlDocument)",
    "(_getDtd,XmlDocument)",
    "(value,XmlAttribute)",
    "(addChild,XmlElement)",
    "(replace,XmlText)",
    "(_version,XmlDocument)",
    "(name,XmlAttribute)",
    "(addCData,XmlElement)",
    "(prevSibling,XmlNode)",
    "(fromHtml,XmlDocument)",
    "(namespaces,XmlNode)",
    "(addNextSibling,XmlElement)",
    "(text,XmlProcessingInstruction)"
  ],
  "@raghb1/node-memwatch": [],
  "@rainblock/ethereum-block": [],
  "raknet-native": [],
  "rapid-crc": [],
  "rapidx2j": [],
  "ratty": [],
  "raw-socket": [],
  "@raygun-nickj/mmap-io": [],
  "raylib": [],
  "raytracer-node": [],
  "rdscpp": [
    "(0,Number)",
    "(1,Boolean)"
  ],
  "rdtsc": [],
  "re2": [],
  "real-homedir": [],
  "reboot": [],
  "@reboot-dev/reboot": [],
  "@reconbot/bindings-cpp": [
    "(baudRate,data)",
    "(dsr,data)",
    "(cts,data)",
    "(dcd,data)",
    "(lowLatency,data)"
  ],
  "rectangle-bin-pack": [],
  "redis-fast-driver": [],
  "register-scheme": [],
  "reliance-dicom-dimse-native": [],
  "reset-date-cache": [],
  "reset-v8-timezone": [],
  "resin-crc-utils": [],
  "resumable-hash": [],
  "@rev-robotics/rhsplib": [],
  "rgb565_bmp": [],
  "@ripreact/hsl": [],
  "@risingstack/event-loop-stats": [],
  "@risingstack/gc-stats": [
    "(pause,data)",
    "(pauseMS,data)"
  ],
  "@robinsage/eccrypto": [],
  "robotjs": [],
  "robotjsfixed": [],
  "robotjsmonitor": [],
  "robotjs-repack": [],
  "@rocicorp/zero-sqlite3": [],
  "rpi-led-matrix": [],
  "rpio": [],
  "rpio-sunxi": [],
  "rpi-ws281x": [
    "(reset,Addon)",
    "(render,Addon)",
    "(sleep,Addon)",
    "(configure,Addon)"
  ],
  "rpi-ws281x-native": [],
  "rsa-keypair": [],
  "runas-redux": [
    "(stderr,String)",
    "(exitCode,Number)",
    "(stdout,String)"
  ],
  "rusage2": [],
  "@rvagg/blake2": [],
  "safari-push-notifications": [],
  "@saleae/weak": [],
  "@sambhav-gautam/osmemoryallocator": [],
  "@samebchase/spellchecker": [
    "(add,Spellchecker)",
    "(remove,Spellchecker)",
    "(getAvailableDictionaries,Spellchecker)",
    "(end,end)",
    "(checkSpelling,Spellchecker)",
    "(setDictionary,Spellchecker)",
    "(getCorrectionsForMisspelling,Spellchecker)",
    "(isMisspelled,Spellchecker)"
  ],
  "sample-nodejs-function": [],
  "sane_aes128_cbc": [],
  "@sapphire/type": [],
  "@savearray2/py.js": [],
  "@savoirfairelinux/node-server-example": [],
  "@sbspk/forcefocus": [],
  "scalc-core": [],
  "scandir-native": [],
  "@schlameel/native-idle-time": [],
  "scrollbar-style": [],
  "sdl2-gamecontroller": [],
  "secp256k1": [],
  "secp256k1-native": [],
  "@sedracoin/process-list": [],
  "segfault-handler": [],
  "self-crypto": [],
  "@sematext/gc-stats": [
    "(pause,data)",
    "(endTime,data)",
    "(pauseMS,data)",
    "(gctype,data)",
    "(startTime,data)"
  ],
  "@sentry-internal/node-cpu-profiler": [],
  "@sequencework/tfjs-node": [],
  "serenade-driver": [],
  "@sergiou87/fs-admin-temp": [],
  "@serialport/bindings": [
    "(baudRate,data)",
    "(dsr,data)",
    "(cts,data)",
    "(dcd,data)",
    "(lowLatency,data)"
  ],
  "sevruga": [],
  "shacrypt": [],
  "shannon-bindings": [],
  "shared-node-buffer": [],
  "sharp-lite": [],
  "shm-typed-array": [],
  "shorter": [],
  "@shroudedcode/hx711": [],
  "shuriken-fs": [],
  "shxt.serialport.bindings": [
    "(baudRate,data)",
    "(dsr,data)",
    "(cts,data)",
    "(dcd,data)",
    "(lowLatency,data)"
  ],
  "sigignore": [],
  "sign-pkcs7": [],
  "silk-sdk": [],
  "simdjson": [],
  "simple_c_parser": [],
  "@sirherobrine23/cppzst": [],
  "skia-n-api": [],
  "sleep": [],
  "@sleipnirgroup/trajoptlib": [
    "(setDrivetrain,SwervePathBuilderWrap)"
  ],
  "@slimio/micro": [
    "(usec,Number)",
    "(sec,Number)",
    "(nsec,Number)"
  ],
  "smash-synthserial": [],
  "@snek/private": [],
  "socketcan": [],
  "socketwatcher": [
    "(set,SocketWatcher)",
    "(start,SocketWatcher)",
    "(stop,SocketWatcher)"
  ],
  "sockopt": [],
  "sodium": [],
  "sodium-native": [],
  "@soruly/opencv4nodejs-prebuilt": [],
  "@sosuisen/nodegit": [
    "(ENABLED,LockMaster)",
    "(DISABLED,LockMaster)",
    "(ENABLED_FOR_ASYNC_ONLY,LockMaster)",
    "(signature,baton)",
    "(signature,signature)",
    "(storedMutexesCount,diagnostics)",
    "(errno,baton)",
    "(reachedEndOfHistory,baton)",
    "(signedData,baton)",
    "(commit,GitCommit)",
    "(name,signature)",
    "(email,signature)",
    "(date,signature)"
  ],
  "source-maps": [],
  "spdlog": [
    "(setPattern,Logger)",
    "(flush,Logger)",
    "(critical,Logger)",
    "(info,Logger)",
    "(drop,Logger)",
    "(getLevel,Logger)",
    "(error,Logger)",
    "(warn,Logger)",
    "(clearFormatters,Logger)",
    "(debug,Logger)",
    "(setLevel,Logger)",
    "(trace,Logger)"
  ],
  "spellchecker": [
    "(add,Spellchecker)",
    "(remove,Spellchecker)",
    "(checkSpelling,Spellchecker)",
    "(getAvailableDictionaries,Spellchecker)",
    "(end,end)",
    "(setSpellcheckerType,Spellchecker)",
    "(setDictionary,Spellchecker)",
    "(getCorrectionsForMisspelling,Spellchecker)",
    "(isMisspelled,Spellchecker)",
    "(checkSpellingAsync,Spellchecker)"
  ],
  "spi-device": [
    "(setOptions,SetOptions)",
    "(setOptionsSync,SetOptionsSync)",
    "(getOptions,GetOptions)",
    "(transfer,Transfer)",
    "(getOptionsSync,GetOptionsSync)",
    "(closeSync,CloseSync)",
    "(close,Close)",
    "(transferSync,TransferSync)"
  ],
  "spi-node": [
    "(spiSupported,Boolean)"
  ],
  "sqlite3": [
    "(lastID,Number)",
    "(changes,Number)"
  ],
  "sqlite3-electron": [
    "(remaining,RemainingGetter)",
    "(completed,CompletedGetter)",
    "(open,OpenGetter)",
    "(idle,IdleGetter)",
    "(pageCount,PageCountGetter)",
    "(failed,FailedGetter)"
  ],
  "sqlite3-rebuilt": [
    "(remaining,RemainingGetter)",
    "(completed,CompletedGetter)",
    "(open,OpenGetter)",
    "(idle,IdleGetter)",
    "(pageCount,PageCountGetter)",
    "(failed,FailedGetter)"
  ],
  "sqlite3-sync": [],
  "sq-native": [],
  "sse4_crc32": [],
  "stagekit": [],
  "stompica": [],
  "@stoneydsp/cmodule": [],
  "strong-ursa": [],
  "@suger-tdy/usb-detection": [],
  "@suldashi/lame": [],
  "@suldashi/node-opus": [],
  "@suldashi/ogg": [],
  "@suldashi/weak": [],
  "sumaddon-publish": [],
  "svmq": [],
  "@swimm/tree-sitter-ruby": [],
  "swisseph": [
    "(name,name)"
  ],
  "swisseph-v2": [
    "(name,name)"
  ],
  "symbology": [],
  "synchronous-worker": [
    "(stop,isolate)",
    "(runLoop,isolate)",
    "(runInCallbackScope,isolate)",
    "(isLoopAlive,isolate)",
    "(load,isolate)",
    "(start,isolate)",
    "(signalStop,isolate)"
  ],
  "syncprompt": [],
  "sync-runner": [],
  "@syndicats/drivelist": [],
  "system-time": [],
  "@szeah27/audify": [],
  "t12-parser": [],
  "talib": [
    "(functions,Functions)",
    "(functionUnstIds,FunctionUnstIds)"
  ],
  "talkspirit-spellchecker": [
    "(add,Spellchecker)",
    "(remove,Spellchecker)",
    "(checkSpelling,Spellchecker)",
    "(getAvailableDictionaries,Spellchecker)",
    "(end,end)",
    "(setSpellcheckerType,Spellchecker)",
    "(setDictionary,Spellchecker)",
    "(getCorrectionsForMisspelling,Spellchecker)",
    "(isMisspelled,Spellchecker)",
    "(checkSpellingAsync,Spellchecker)"
  ],
  "tcp-netx": [],
  "tdlib-native": [],
  "tdl-tdlib-addon": [],
  "tdy-drivelist": [],
  "tea-napi": [],
  "@tech9app/whisper.js": [],
  "@techainer1t/torch-js": [],
  "@tensorflow/tfjs-node": [],
  "@tensorflow/tfjs-node-gpu": [],
  "@terminus-term/node-pty": [],
  "termios-fixedv12": [],
  "test-1638-world": [],
  "test-addons": [],
  "test_addon_simple_hello": [],
  "@theia/node-pty": [],
  "@thlorenz/function-origin": [],
  "thmclrx": [],
  "@three-em/node": [],
  "tiff-multipage": [],
  "@tludlow-instana-fork/autoprofile": [],
  "@todesktop/robotjs-prebuild": [],
  "@tonclient/lib-node": [],
  "traaittplatform-crypto": [],
  "@traaittplatform/traaittplatform-crypto": [],
  "transparent-titlebar": [],
  "@trbll/nodeimu": [],
  "tree-sitter": [],
  "tree-sitter-4dm": [],
  "tree-sitter-4dxml": [],
  "tree-sitter-a": [],
  "tree-sitter-agda": [],
  "tree-sitter-ags-script": [],
  "tree-sitter-alanguage": [],
  "tree-sitter-amcl": [],
  "tree-sitter-biber": [],
  "tree-sitter-bliss": [],
  "tree-sitter-bogl": [],
  "tree-sitter-brainfuck": [],
  "tree-sitter-carp": [],
  "tree-sitter-chialisp": [],
  "tree-sitter-cm": [],
  "tree-sitter-cmm": [],
  "tree-sitter-coccinelle": [],
  "tree-sitter-codelink": [],
  "tree-sitter-compat": [],
  "tree-sitter-cycle": [],
  "tree-sitter-decisiongraph": [],
  "tree-sitter-deltinscript": [],
  "tree-sitter-delve-language": [],
  "tree-sitter-dot": [],
  "tree-sitter-dune": [],
  "tree-sitter-edl": [],
  "tree-sitter-ekon": [],
  "tree-sitter-elm": [],
  "tree-sitter-eu4mod": [],
  "tree-sitter-firrtl": [],
  "tree-sitter-foobar": [],
  "tree-sitter-fquest": [],
  "tree-sitter-frisc": [],
  "tree-sitter-fuior": [],
  "tree-sitter-func": [],
  "tree-sitter-gcl": [],
  "tree-sitter-gleam": [],
  "tree-sitter-hacklang": [],
  "tree-sitter-haiku": [],
  "tree-sitter-hclrs": [],
  "tree-sitter-hit": [],
  "tree-sitter-hla-assembly": [],
  "tree-sitter-howl": [],
  "tree-sitter-i": [],
  "tree-sitter-igor": [],
  "tree-sitter-janet": [],
  "tree-sitter-java-dev": [],
  "tree-sitter-jinja2": [],
  "tree-sitter-kos": [],
  "tree-sitter-kpl": [],
  "tree-sitter-kv1": [],
  "tree-sitter-langx": [],
  "tree-sitter-lcs": [],
  "tree-sitter-legesher-python": [],
  "tree-sitter-libretto": [],
  "tree-sitter-lisp": [],
  "tree-sitter-lll": [],
  "tree-sitter-lox": [],
  "tree-sitter-lua": [],
  "tree-sitter-lux": [],
  "tree-sitter-mela": [],
  "tree-sitter-menhir": [],
  "tree-sitter-mgd": [],
  "tree-sitter-minecraft": [],
  "tree-sitter-mlir": [],
  "tree-sitter-moje": [],
  "tree-sitter-mse": [],
  "tree-sitter-naz": [],
  "tree-sitter-notlang": [],
  "tree-sitter-nova": [],
  "tree-sitter-nwscript": [],
  "tree-sitter-o": [],
  "tree-sitter-parageo": [],
  "tree-sitter-parageotest": [],
  "tree-sitter-pascalabcnet": [],
  "tree-sitter-pokus": [],
  "tree-sitter-policyspace": [],
  "tree-sitter-poweron": [],
  "tree-sitter-prisma": [],
  "tree-sitter-prolog": [],
  "tree-sitter-proverif": [],
  "tree-sitter-prowseassembly": [],
  "tree-sitter-pts": [],
  "tree-sitter-ql": [],
  "tree-sitter-quik": [],
  "tree-sitter-random": [],
  "tree-sitter-regent": [],
  "tree-sitter-regex-js": [],
  "tree-sitter-regex-unicode-js": [],
  "tree-sitter-reqspec": [],
  "tree-sitter-ride": [],
  "tree-sitter-scl": [],
  "tree-sitter-skusamsi": [],
  "tree-sitter-skuskam": [],
  "tree-sitter-souffle": [],
  "tree-sitter-sourcepawn": [],
  "tree-sitter-sparql": [],
  "tree-sitter-spiral": [],
  "tree-sitter-st": [],
  "tree-sitter-start": [],
  "tree-sitter-storylang": [],
  "tree-sitter-structured-text": [],
  "tree-sitter-svelte": [],
  "tree-sitter-syncat-stylesheet": [],
  "tree-sitter-systemrdl": [],
  "tree-sitter-tablatal": [],
  "tree-sitter-tanuki": [],
  "tree-sitter-term": [],
  "tree-sitter-todo-full": [],
  "tree-sitter-toml": [],
  "tree-sitter-tony": [],
  "tree-sitter-tspec": [],
  "tree-sitter-turbowave": [],
  "tree-sitter-turtle": [],
  "tree-sitter-v": [],
  "tree-sitter-valueinference": [],
  "tree-sitter-vcd": [],
  "tree-sitter-verilog": [],
  "tree-sitter-vue": [],
  "tree-sitter-w": [],
  "tree-sitter-wake": [],
  "tree-sitter-waveasm": [],
  "tree-sitter-wdl": [],
  "tree-sitter-yaml": [],
  "tree-sitter-yul": [],
  "tree-sitter-zig": [],
  "trend_app_protect": [
    "(length,Length)",
    "(enabled,Enabled)",
    "(uuid,Uuid)"
  ],
  "ttf2woff2": [],
  "@tuananh/sax-parser": [],
  "tulind": [],
  "turbo-net": [],
  "turbo-net-clusterable": [],
  "@turtlecoin/crypto": [],
  "turtlecoin-crypto": [],
  "@tzmedical/trident-sdk": [
    "(status,Number)",
    "(error,String)",
    "(log,String)"
  ],
  "ucp": [],
  "udev": [
    "(syspath,String)"
  ],
  "udx-native-nodejs-mobile": [],
  "u-framework": [],
  "ultradb": [],
  "@ulycess/c_parser": [],
  "unix-dgram": [],
  "unix-dgram-socket": [],
  "unix-socketpair": [],
  "@unrest/form": [],
  "ursa-optional": [],
  "usb": [
    "(idProduct,Number)",
    "(__setAutoDetachKernelDriver,Device)",
    "(idVendor,Number)",
    "(Device,func)",
    "(__setConfiguration,Device)",
    "(__setInterface,Device)",
    "(INIT_ERROR,Number)"
  ],
  "usb-detection": [],
  "userid": [],
  "usm-decrypter": [],
  "usocket": [],
  "utf-8-validate": [],
  "utimes": [],
  "utp-native": [],
  "utp-native-no-prebuild": [],
  "utp-solyd": [],
  "utun": [],
  "uv-poll": [],
  "uv-run": [],
  "uvrun-12": [],
  "v8-profiler-next": [
    "(startProfiling,CpuProfiler)",
    "(setGenerateType,CpuProfiler)",
    "(collectSample,CpuProfiler)",
    "(2,data)",
    "(startSamplingHeapProfiling,SamplingHeapProfiler)",
    "(name,name)",
    "(takeSnapshot,HeapProfiler)",
    "(startTrackingHeapObjects,HeapProfiler)",
    "(getHeapStats,HeapProfiler)",
    "(setProfilesCleanupLimit,CpuProfiler)",
    "(stopSamplingHeapProfiling,SamplingHeapProfiler)",
    "(1,data)",
    "(stopProfiling,CpuProfiler)",
    "(getObjectByHeapObjectId,HeapProfiler)",
    "(stopTrackingHeapObjects,HeapProfiler)",
    "(setSamplingInterval,CpuProfiler)",
    "(getHeapObjectId,HeapProfiler)"
  ],
  "v8-sandbox": [
    "(sourceLine,sourceLine)",
    "(message,message)",
    "(args,arguments)",
    "(_dispatch,Dispatch)"
  ],
  "valgrind-client-request": [],
  "vcd-stream": [],
  "@vgrid/x509": [
    "(extensions,extensions)",
    "(altNames,altNames)"
  ],
  "@vhs/node-nfc-nci": [],
  "@vit1251/napi_sdl2": [],
  "@vlasky/shacrypt": [],
  "vmdetect": [],
  "@votingworks/qrdetect": [
    "(x,Number)",
    "(orientation,Number)",
    "(y,Number)",
    "(version,String)",
    "(type,Number)",
    "(quality,Number)"
  ],
  "vscode-nsfw": [],
  "vscode-sqlite3": [
    "(remaining,RemainingGetter)",
    "(completed,CompletedGetter)",
    "(open,OpenGetter)",
    "(idle,IdleGetter)",
    "(pageCount,PageCountGetter)",
    "(failed,FailedGetter)"
  ],
  "w2encdec": [],
  "wakanda-storage": [],
  "walkdir-fast": [],
  "@wangjuncode/binary-test": [],
  "wasi": [],
  "wdeasync": [],
  "weak-napi": [],
  "weak-value-map": [
    "(set,WeakValueMap)",
    "(symbol,Symbol)"
  ],
  "webbluetooth": [
    "(setCallbackOnScanStart,Adapter)",
    "(canRead,characteristic)",
    "(uuid,uuid)",
    "(data,data)",
    "(descriptors,descriptors)",
    "(canWriteRequest,characteristic)",
    "(setCallbackOnDisconnected,Peripheral)",
    "(setCallbackOnScanFound,Adapter)",
    "(setCallbackOnScanUpdated,Adapter)",
    "(canNotify,characteristic)",
    "(canWriteCommand,characteristic)",
    "(uuid,characteristic)",
    "(setCallbackOnScanStop,Adapter)",
    "(setCallbackOnConnected,Peripheral)",
    "(characteristics,characteristics)",
    "(canIndicate,characteristic)"
  ],
  "webrtcvad": [],
  "westfield-native": [],
  "wework-chat-node": [
    "(is_finished,Boolean)",
    "(buf_index,String)",
    "(last_seq,Number)"
  ],
  "wifi-network": [],
  "wise-inspection": [],
  "@wmakeev/borders-detection": [
    "(maxX,Number)",
    "(minY,Number)",
    "(imgWidth,Number)",
    "(pixelsCount,Number)",
    "(maxY,Number)",
    "(imgHeight,Number)",
    "(minX,Number)"
  ],
  "word2vec4node": [],
  "wordexp": [],
  "ws2812draw": [],
  "wson-addon": [],
  "@wwa/statvfs": [
    "(errno,Value)",
    "(bavail,Value)",
    "(bsize,Value)",
    "(files,Value)",
    "(blocks,Value)",
    "(path,Value)",
    "(ffree,Value)",
    "(bfree,Value)",
    "(type,Value)"
  ],
  "wxaes-node": [],
  "xattr-async": [],
  "xdelta-async-nodejs-addon": [
    "(code,res)"
  ],
  "xd-synchttp": [],
  "@xiaobaidadada/node-pty-prebuilt": [],
  "@xiaobaidadada/node-tuntap2-wintun": [],
  "@xiaobaidadada/ssh2-prebuilt": [],
  "xiaomi-wristband-decoder": [
    "(data,data)",
    "(rssi,Number)",
    "(name,String)",
    "(mac,String)"
  ],
  "xlsxio-node": [],
  "xlsx-util": [],
  "xlsys-node-study-greeting": [],
  "xlsys-node-study-hello": [],
  "xoshiro": [],
  "xprofiler": [],
  "xrtlibrary-ip-utilities": [],
  "x-semaphore": [],
  "xtcpforwarder": [],
  "xxhash-addon": [],
  "xz": [
    "(MODE_DECODE,Number)",
    "(MODE_ENCODE,Number)",
    "(ENCODE_FINISH,Number)"
  ],
  "@y2zz/sharp": [
    "(background,background)"
  ],
  "@yaguara/dd-trace": [],
  "@yaming116/node-memwatch": [],
  "@yang8guang/npm-test100": [],
  "@ycanince/bluetooth-hci-socket": [],
  "@ycanince/sqlite3": [
    "(remaining,RemainingGetter)",
    "(completed,CompletedGetter)",
    "(open,OpenGetter)",
    "(idle,IdleGetter)",
    "(pageCount,PageCountGetter)",
    "(failed,FailedGetter)"
  ],
  "yencode": [],
  "@yosiat/stack-frames": [
    "(file_name,scriptName)"
  ],
  "yrp": [
    "(dataSize,Number)",
    "(id,Number)",
    "(flag,Number)",
    "(duelFlags,Number)",
    "(startHand,Number)",
    "(hash,Number)",
    "(drawCount,Number)",
    "(version,Number)",
    "(startLP,Number)",
    "(seed,Number)"
  ],
  "@ytsteven2/robotjs": [],
  "zadeh": [],
  "zentcash-crypto": [],
  "zlib-organic": [
    "(ZLIB_VER_MAJOR,Number)",
    "(MODE_DECODE,Number)",
    "(ZLIB_VERNUM,Number)",
    "(ZLIB_VER_MINOR,Number)",
    "(Z_FINISH,Number)",
    "(MODE_ENCODE,Number)",
    "(Z_SYNC_FLUSH,Number)",
    "(Z_BLOCK,Number)",
    "(ZLIB_VERSION,String)",
    "(ZLIB_VER_REVISION,Number)",
    "(Z_FULL_FLUSH,Number)",
    "(Z_NO_FLUSH,Number)",
    "(Z_PARTIAL_FLUSH,Number)",
    "(Z_TREES,Number)",
    "(ZLIB_VER_SUBREVISION,Number)"
  ],
  "zlib-sync": [
    "(err,GetErr)",
    "(chunkSize,GetChunkSize)",
    "(windowBits,GetWindowBits)",
    "(msg,GetMsg)",
    "(result,GetResult)"
  ],
  "zookeeper": [
    "(toStrTest,toStrTest)",
    "(toIntTest,toIntTest)",
    "(convertUnixTimeToDateTest,convertUnixTimeToDateTest)",
    "(toUintTest,toUintTest)",
    "(toBoolTest,toBoolTest)"
  ],
  "zucc": []
}